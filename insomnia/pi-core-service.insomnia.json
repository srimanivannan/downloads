{
  "_type": "export",
  "__export_format": 4,
  "__export_date": "2025-09-02T12:46:17.840613Z",
  "__export_source": "Postman->Insomnia (ChatGPT)",
  "resources": [
    {
      "_id": "wrk_3ee6581da8f64f7d87f9411f",
      "_type": "workspace",
      "name": "pi-core-service (Converted)",
      "description": "Auto-converted from Postman by ChatGPT"
    },
    {
      "_id": "fld_1d41a75ff2934f6bb41884c9",
      "_type": "request_group",
      "parentId": "wrk_3ee6581da8f64f7d87f9411f",
      "name": "pi-core-service"
    },
    {
      "_id": "fld_53c67f126914419cbed870ea",
      "_type": "request_group",
      "parentId": "fld_1d41a75ff2934f6bb41884c9",
      "name": "Setup (Root Pre-script)"
    },
    {
      "_id": "req_80ea1f68ed0b4809b255fcd6",
      "_type": "request",
      "parentId": "fld_53c67f126914419cbed870ea",
      "name": "00 - Load utils_script",
      "method": "GET",
      "url": "https://example.invalid/utils",
      "headers": [],
      "parameters": [],
      "body": {
        "text": ""
      },
      "preRequestScript": "insomnia.environment.set('pi-core-service_utils_script', \"//depends on set up env + healthcheck, run the appropriate setup request first\\n//setting variables for a request via pre-request script does not work. (Verify this again.) Instead, return the updated value, then set the appropriate variable to the returned value in the request-level pre-request script.\\nutils = {\\n    setTest: function(prop) {\\n        //insomnia.environment.set('pi-core-service_TESTVAR', prop);\\n        console.log(\\\"TESTVAR: \\\")// + insomnia.environment.get('pi-core-service_TESTVAR'));\\n    },\\n\\n    //creates an object containing return variables from an enroll request and updates their named variables with their values; to be used in tests. All other functions are to be used in pre-request scripts\\n    //props is an array of variable names as strings\\n    //jsonData is the data from the response\\n    updateSavedEnrollVars: function(props, jsonData) {\\n        props.forEach((prop) => pm.collectionVariables.set(prop,jsonData.cardMetaData.prop));\\n            return props;\\n    },\\n\\n    updateConsumerId: function(prop) {\\n        if(prop){ \\n            return(insomnia.environment.get('pi-core-service_consumerId') + Math.floor(Math.random() * Math.pow(2, 16)) + 1);\\n        } else {\\n            return insomnia.environment.get('pi-core-service_consumerId');\\n        }\\n    },\\n\\n    updateConsumerIdWithMdesErrorHandling: function() {\\n        utils.updateConsumerId();\\n        //calls stage request for given request (using updated consumerId)\\n        //utils.updateConsumerId();\\n        //switches back to kick1 request for given request\\n        \\n    },\\n\\n    //sets the appropriate non-synapse method type; depends on {{ _['pi-core-service_METHOD'] }} as the method type\\n    setMethod: function(methodType) {\\n        if(\\\"STAGE\\\"===insomnia.environment.get('pi-core-service_env') | \\\"ITF\\\"===insomnia.environment.get('pi-core-service_env') | \\\"MTF\\\"===insomnia.environment.get('pi-core-service_env')){\\n            return({method:\\\"POST\\\"});\\n        } else if(\\\"localhost\\\"===insomnia.environment.get('pi-core-service_env') | \\\"kick-one\\\"===insomnia.environment.get('pi-core-service_env')){\\n            return({method: methodType.toUpperCase()});\\n        }\\n    },\\n\\n    //builds the url depending on the array of prop Strings provided\\n    makeUrl: function(props) {\\n        if(\\\"STAGE\\\"===insomnia.environment.get('pi-core-service_env') | \\\"ITF\\\"===insomnia.environment.get('pi-core-service_env') | \\\"MTF\\\"===insomnia.environment.get('pi-core-service_env')){\\n            return utils.setSynapseUrl();\\n        } else if(\\\"localhost\\\"===insomnia.environment.get('pi-core-service_env') | \\\"kick-one\\\"===insomnia.environment.get('pi-core-service_env')){\\n            return new utils.DirectUrlBuilder()\\n            .addHost()\\n            .addEndpoint()\\n            .addUrls(props)\\n            .build();\\n        }\\n    },\\n\\n    //sets the url for a synapse-based host based on the cardservice-synapse-url from set up\\n    setSynapseUrl: function() {\\n        if(\\\"STAGE\\\"===insomnia.environment.get('pi-core-service_env')){\\n            return insomnia.environment.get('pi-core-service_cardservice-synapse-url');\\n        }else if(\\\"ITF\\\"===insomnia.environment.get('pi-core-service_env')){\\n            return insomnia.environment.get('pi-core-service_cardservice-synapse-url');\\n        }else if(\\\"MTF\\\"===insomnia.environment.get('pi-core-service_env')){\\n            return insomnia.environment.get('pi-core-service_cardservice-synapse-url');\\n        }\\n    },\\n\\n    //representation of non-synapse url\\n    DirectUrl: class DirectUrl {\\n        constructor(){ this.urlString = \\\"\\\"; }\\n    },\\n\\n    //builds a non-synapse url\\n    DirectUrlBuilder: class DirectUrlBuilder {\\n        constructor() { this.directUrl = new utils.DirectUrl(); }\\n\\n        //adds the host to url\\n        addHost() {\\n            if(\\\"kick-one\\\"=== insomnia.environment.get('pi-core-service_env')){\\n                this.directUrl.urlString += insomnia.environment.get('pi-core-service_cardservice-kick-one-url'); \\n            }else if(\\\"localhost\\\"===insomnia.environment.get('pi-core-service_env')){\\n                this.directUrl.urlString += insomnia.environment.get('pi-core-service_cardservice-local-url');\\n            }\\n            return this;\\n        }\\n\\n        //adds the endpoint to url\\n        addEndpoint() {\\n            this.directUrl.urlString += insomnia.environment.get('pi-core-service_endPoint');\\n            return this;\\n        }\\n\\n        //adds a string to url\\n        addToUrl(prop) {\\n            this.directUrl.urlString += prop;\\n            return this;\\n        }\\n\\n        //adds an array of strings to url in order\\n        addUrls(props) {\\n            props.forEach((prop) => this.directUrl.urlString += prop);\\n            return this;\\n        }\\n\\n        //generates the url String\\n        build() {\\n            return this.directUrl.urlString;\\n        }\\n    }\\n};\");\ninsomnia.test('Loaded pi-core-service utils_script into environment', () => {\n  insomnia.expect(!!insomnia.environment.get('pi-core-service_utils_script')).to.equal(true);\n});",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_1fac18dbb7784a1ebab07691",
      "_type": "request_group",
      "parentId": "fld_1d41a75ff2934f6bb41884c9",
      "name": "Set up Env + Headers + Healthcheck"
    },
    {
      "_id": "fld_0a0083a0d1af4f95adcf2441",
      "_type": "request_group",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "ITF"
    },
    {
      "_id": "req_36dd406f9bfb4f44af9c6020",
      "_type": "request",
      "parentId": "fld_0a0083a0d1af4f95adcf2441",
      "name": "ITF-OCTOPUS-TRIDENT-FPAN",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-itf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"2221190589104775\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"2221190529595801\",\n    \"expiryDate\": \"0524\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"maestro\",\n    \"issuerCountryCode\": \"BR\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"2221197038681840\",\n    \"expiryDate\": \"0524\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"NON_TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"2221198005866067\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"2221194275974707\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  }\n];\n\nvar sampleDeviceTurCards = [\n  {\n    \"deviceTur\": \"DWSPMC0000114393c9efc48326844d6cbcc360d1c83fe237\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"STATIC\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC00001143933e02555e1dd144438d83741acfb3f8f3\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"STATIC\"\n  },\n  {\n    \"deviceTur\": \"DWSPMC0000114393c9efc48326844d6cbcc360d1c83fe237\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"CLOUD\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC00001143933e02555e1dd144438d83741acfb3f8f3\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"CLOUD\"\n  },\n    {\n        \"deviceTur\": \"DWSPMC00001143937c371229c7744372b237508ca7f3d015\",\n        \"expiryDate\": \"0124\",\n        \"tokenRequestorId\": \"50191159210\",\n        \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n        \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n        \"paymentNetworkName\": \"mastercard\",\n        \"issuerCountryCode\": \"US\",\n        \"tokeType\": \"CLOUD\"\n    }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\n//var singleTurBasedCard = _.sample(sampleDeviceTurCards);\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"ITF\");\nconst envInstanceURL = \"https://blue-src-itf-pi-core-service.apps.stl.pcfstage00.mastercard.int\"\ninsomnia.environment.set('pi-core-service_cardservice-itf-url', envInstanceURL);\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-src-itf-synapse-test-harness.apps.stl.pcfstage00.mastercard.int/api/callWithPrism\");\n\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Synapse Header data \n// insomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\n//insomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"A50DA021\");\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"ITF\");\ninsomnia.environment.set('pi-core-service_card-art-service-name', \"card-art-service-getAssets\");\nconsole.log(\"primaryAccountNumber:\", singleCard.primaryAccountNumber)\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\n// insomnia.environment.set('pi-core-service_deviceTokenUniqueReference', singleTurBasedCard.deviceTur);\n// insomnia.environment.set('pi-core-service_deviceTurExpiryDate', singleTurBasedCard.expiryDate);\n// insomnia.environment.set('pi-core-service_deviceTurPrimaryAccountNumberSource', singleTurBasedCard.primaryAccountNumberSource);\n// insomnia.environment.set('pi-core-service_deviceTurProgramId', singleTurBasedCard.programId);\n// insomnia.environment.set('pi-core-service_deviceTurTokenRequestorId', singleTurBasedCard.tokenRequestorId);\n\n//Logging it to console for debugging\nconsole.log(\"singleCard Picked: \" + JSON.stringify(singleCard));\n//console.log(\"singleDeviceTur Picked: \" + singleTurBasedCard.deviceTur);\n\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5400170528938893\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-itf-url'));",
      "afterResponseScript": "//Update cardservice-itf-url to cardservice-synapse-url path\r\n//insomnia.environment.set('pi-core-service_cardservice-itf-url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));"
    },
    {
      "_id": "req_2a3e210a22ec4a85885acb41",
      "_type": "request",
      "parentId": "fld_0a0083a0d1af4f95adcf2441",
      "name": "ITF-OCTOPUS-TRIDENT-TUR",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-itf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5207990300064583\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"6799974204271546\",\n    \"expiryDate\": \"0524\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"maestro\",\n    \"issuerCountryCode\": \"BR\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204248992891489\",\n    \"expiryDate\": \"0524\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"NON_TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207990300064591\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"2221070000064586\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  }\n];\n\nvar sampleDeviceTurCards = [\n  {\n    \"deviceTur\": \"DAPLMC000011439354be5cc97d224297a52d8bcc0551600c\",\n    \"devicePur\": \"FAPLMC00001143937d251bfe14ac4306a02ddfe292279b6d\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokenType\": \"STATIC\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC00001143933e02555e1dd144438d83741acfb3f8f3\",\n    \"devicePur\": \"FAPLMC000011439366ccae8af3cf4ae5a8cafe7f32048ef1\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokenType\": \"STATIC\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC00001143936bdb578d38c04060aea1f2678ae66d14\",\n    \"devicePur\": \"FAPLMC000011439367dacd9cfc734bd7817e3e57e866c365\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokenType\": \"CLOUD\"\n  },\n  {\n    \"deviceTur\": \"DWSPMC0000118254e1369ba2a1544cb9b54bc0543d0b83cb\",\n    \"devicePur\": \"FWSPMC0000118254bf4ad6c2a043451c9cc8531b22e8cf8b\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokenType\": \"CLOUD\"\n  },\n    {\n        \"deviceTur\": \"DAPLMC00001143932f5184b3d21a45a8b626ae12a063cc10\",\n        \"devicePur\": \"FAPLMC00001143937d251bfe14ac4306a02ddfe292279b6d\",\n        \"expiryDate\": \"0124\",\n        \"tokenRequestorId\": \"50191159210\",\n        \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n        \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n        \"paymentNetworkName\": \"mastercard\",\n        \"issuerCountryCode\": \"US\",\n        \"tokenType\": \"CLOUD\"\n    }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\n//var singleCard = _.sample(sampleCards);\nvar singleTurBasedCard = _.sample(sampleDeviceTurCards);\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"ITF\");\nconst envInstanceURL = \"https://blue-src-itf-pi-core-service.apps.stl.pcfstage00.mastercard.int\"\ninsomnia.environment.set('pi-core-service_cardservice-itf-url', envInstanceURL);\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-src-itf-synapse-test-harness.apps.stl.pcfstage00.mastercard.int/api/callWithPrism\");\n\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Synapse Header data \n// insomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\n//insomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"A50DA021\");\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"ITF\");\ninsomnia.environment.set('pi-core-service_card-art-service-name', \"card-art-service-getAssets\");\n//console.log(\"primaryAccountNumber:\", singleCard.primaryAccountNumber)\n// insomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\n// insomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\n// insomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\n// insomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\n// insomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\ninsomnia.environment.set('pi-core-service_deviceTokenUniqueReference', singleTurBasedCard.deviceTur);\ninsomnia.environment.set('pi-core-service_devicePanUniqueReference', singleTurBasedCard.devicePur);\ninsomnia.environment.set('pi-core-service_deviceTurExpiryDate', singleTurBasedCard.expiryDate);\ninsomnia.environment.set('pi-core-service_deviceTurPrimaryAccountNumberSource', singleTurBasedCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_deviceTurProgramId', singleTurBasedCard.programId);\ninsomnia.environment.set('pi-core-service_program-id', singleTurBasedCard.programId);\ninsomnia.environment.set('pi-core-service_deviceTurTokenRequestorId', singleTurBasedCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_deviceTurTokenType', singleTurBasedCard.tokenType);\nconsole.log(\"deviceTokenUniqueReference:\", singleTurBasedCard.deviceTur)\n\n//Logging it to console for debugging\n//console.log(\"singleCard Picked: \" + singleCard.primaryAccountNumber);\nconsole.log(\"singleDeviceTur TUR Picked: \" + singleTurBasedCard.deviceTur);\nconsole.log(\"singleDeviceTur deviceTurTokenType picked: \" + singleTurBasedCard.tokenType);\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5400170528938893\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-itf-url'));",
      "afterResponseScript": "//Update cardservice-itf-url to cardservice-synapse-url path\r\n//insomnia.environment.set('pi-core-service_cardservice-itf-url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));"
    },
    {
      "_id": "req_8cf005a9a287420196cba04a",
      "_type": "request",
      "parentId": "fld_0a0083a0d1af4f95adcf2441",
      "name": "ITF FPAN",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-itf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5424150109211052\",\n    \"expiryDate\": \"0830\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207990300000058\",\n    \"expiryDate\": \"0929\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207980079301191\",\n    \"expiryDate\": \"1124\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRCCLOUDGOOGLE\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207990309165142\",\n    \"expiryDate\": \"1124\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC_C2P#TPW-E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"6799974261996126\",\n    \"expiryDate\": \"0529\",\n    \"tokenRequestorId\": \"50130906700\",\n    \"primaryAccountNumberSource\": \"CARD_ON_FILE\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT#MAC2PSRCI-Vitrine_Test_Merchant_1#01\",\n    \"paymentNetworkName\": \"maestro\",\n    \"issuerCountryCode\": \"BR\"\n  },\n  {\n    \"primaryAccountNumber\": \"2221192415392665\",\n    \"expiryDate\": \"1024\",\n    \"tokenRequestorId\": \"50179582000\",\n    \"primaryAccountNumberSource\": \"CARD_ON_FILE\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO#VITRINE_ITF_SVO_DPA#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207980075342629\",\n    \"expiryDate\": \"0934\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO#E2E-TEST_DPA_1#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207980005748903\",\n    \"expiryDate\": \"0535\",\n    \"tokenRequestorId\": \"50117672900\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO_SHARED#PROJECT_PFM-CFEN2#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5424280342392284\",\n    \"expiryDate\": \"0727\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"AUTOFILL#Google_Inc-GOOGLE_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207980045536573\",\n    \"expiryDate\": \"0926\",\n    \"tokenRequestorId\": \"50170064072\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#FAR_EASTERN_INTERNATIONAL_BANK-DE277762_CPOBO_ITF_01#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\nvar sampleDeviceTurCards = [\n  {\n    \"deviceTur\": \"DAPLMC000011439354be5cc97d224297a52d8bcc0551600c\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC000011439380e9b9c3bd8a4592b21addb582bc0855\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-Manitoba-direct#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"deviceTur\": \"FAPLMC00001143937d251bfe14ac4306a02ddfe292279b6d\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-Manitoba-direct#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC0000114393cd73c340a4964523b5bf679b5e4384b5\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_MERCHANT_OBO#Manitoba-E2ETestDPA3#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC000011439314e25d74edf94467b4a59fbbdf32e2e6\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50129218317\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#ANCILIA_CDIRECTE2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC00001143933e02555e1dd144438d83741acfb3f8f3\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50190826500\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_MERCHANT_OBO#MANITOBA-ANCILIAPROD-MPAN_OBO_MER7#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC00001143939ebf8624d6eb43eab32cdfea14de8011\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\nvar singleTurBasedCard = _.sample(sampleDeviceTurCards);\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"ITF\");\nconst envInstanceURL = \"https://blue-src-itf-pi-core-service.apps.stl.pcfstage00.mastercard.int\"\ninsomnia.environment.set('pi-core-service_cardservice-itf-url', envInstanceURL);\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-src-itf-synapse-test-harness.apps.stl.pcfstage00.mastercard.int/api/callWithPrism\");\n\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Synapse Header data \n// insomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\n//insomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"A50DA021\");\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"A50DA021,ITF\");\ninsomnia.environment.set('pi-core-service_card-art-service-name', \"card-art-service-getAssets\");\n\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\ninsomnia.environment.set('pi-core-service_deviceTokenUniqueReference', singleTurBasedCard.deviceTur);\ninsomnia.environment.set('pi-core-service_deviceTurExpiryDate', singleTurBasedCard.expiryDate);\ninsomnia.environment.set('pi-core-service_deviceTurPrimaryAccountNumberSource', singleTurBasedCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_deviceTurProgramId', singleTurBasedCard.programId);\ninsomnia.environment.set('pi-core-service_deviceTurTokenRequestorId', singleTurBasedCard.tokenRequestorId);\n\n//Logging it to console for debugging\nconsole.log(\"singleCard Picked: \" + singleCard.primaryAccountNumber);\nconsole.log(\"singleDeviceTur Picked: \" + singleTurBasedCard.deviceTur);\n\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5400170528938893\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-itf-url'));",
      "afterResponseScript": "//Update cardservice-itf-url to cardservice-synapse-url path\r\n//insomnia.environment.set('pi-core-service_cardservice-itf-url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));"
    },
    {
      "_id": "req_9938d215a89f4fe9b5618916",
      "_type": "request",
      "parentId": "fld_0a0083a0d1af4f95adcf2441",
      "name": "ITF TUR",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-itf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5424150109211052\",\n    \"expiryDate\": \"0830\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207990300000058\",\n    \"expiryDate\": \"0929\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207980079301191\",\n    \"expiryDate\": \"1124\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRCCLOUDGOOGLE\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207990309165142\",\n    \"expiryDate\": \"1124\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC_C2P#TPW-E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"6799974261996126\",\n    \"expiryDate\": \"0529\",\n    \"tokenRequestorId\": \"50130906700\",\n    \"primaryAccountNumberSource\": \"CARD_ON_FILE\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT#MAC2PSRCI-Vitrine_Test_Merchant_1#01\",\n    \"paymentNetworkName\": \"maestro\",\n    \"issuerCountryCode\": \"BR\"\n  },\n  {\n    \"primaryAccountNumber\": \"2221192415392665\",\n    \"expiryDate\": \"1024\",\n    \"tokenRequestorId\": \"50179582000\",\n    \"primaryAccountNumberSource\": \"CARD_ON_FILE\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO#VITRINE_ITF_SVO_DPA#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207980075342629\",\n    \"expiryDate\": \"0934\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO#E2E-TEST_DPA_1#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207980005748903\",\n    \"expiryDate\": \"0535\",\n    \"tokenRequestorId\": \"50117672900\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO_SHARED#PROJECT_PFM-CFEN2#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5424280342392284\",\n    \"expiryDate\": \"0727\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"AUTOFILL#Google_Inc-GOOGLE_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207980045536573\",\n    \"expiryDate\": \"0926\",\n    \"tokenRequestorId\": \"50170064072\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#FAR_EASTERN_INTERNATIONAL_BANK-DE277762_CPOBO_ITF_01#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\nvar sampleDeviceTurCards = [\n  {\n    \"deviceTur\": \"DAPLMC000011439354be5cc97d224297a52d8bcc0551600c\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC000011439380e9b9c3bd8a4592b21addb582bc0855\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-Manitoba-direct#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"deviceTur\": \"FAPLMC00001143937d251bfe14ac4306a02ddfe292279b6d\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-Manitoba-direct#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC0000114393cd73c340a4964523b5bf679b5e4384b5\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_MERCHANT_OBO#Manitoba-E2ETestDPA3#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC000011439314e25d74edf94467b4a59fbbdf32e2e6\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50129218317\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#ANCILIA_CDIRECTE2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC00001143933e02555e1dd144438d83741acfb3f8f3\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50190826500\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_MERCHANT_OBO#MANITOBA-ANCILIAPROD-MPAN_OBO_MER7#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC00001143939ebf8624d6eb43eab32cdfea14de8011\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\n//var singleCard = _.sample(sampleCards);\nvar singleTurBasedCard = _.sample(sampleDeviceTurCards);\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"ITF\");\nconst envInstanceURL = \"https://blue-src-itf-pi-core-service.apps.stl.pcfstage00.mastercard.int\"\ninsomnia.environment.set('pi-core-service_cardservice-itf-url', envInstanceURL);\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-src-itf-synapse-test-harness.apps.stl.pcfstage00.mastercard.int/api/callWithPrism\");\n\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Synapse Header data \n// insomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\n//insomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"A50DA021\");\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"ITF\");\ninsomnia.environment.set('pi-core-service_card-art-service-name', \"card-art-service-getAssets\");\n\n// insomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\n// insomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\n// insomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\n// insomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\n// insomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\ninsomnia.environment.set('pi-core-service_deviceTokenUniqueReference', singleTurBasedCard.deviceTur);\ninsomnia.environment.set('pi-core-service_deviceTurExpiryDate', singleTurBasedCard.expiryDate);\ninsomnia.environment.set('pi-core-service_deviceTurPrimaryAccountNumberSource', singleTurBasedCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_program-id', singleTurBasedCard.programId);\ninsomnia.environment.set('pi-core-service_deviceTurProgramId', singleTurBasedCard.programId);\ninsomnia.environment.set('pi-core-service_deviceTurTokenRequestorId', singleTurBasedCard.tokenRequestorId);\n\n//Logging it to console for debugging\nconsole.log(\"singleDeviceTur Picked: \" + singleTurBasedCard.deviceTur);\n\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5400170528938893\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-itf-url'));",
      "afterResponseScript": "//Update cardservice-itf-url to cardservice-synapse-url path\r\n//insomnia.environment.set('pi-core-service_cardservice-itf-url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));"
    },
    {
      "_id": "req_729a633bce83414cb2ef4bb5",
      "_type": "request",
      "parentId": "fld_0a0083a0d1af4f95adcf2441",
      "name": "ITF AFM Mani FACADE",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-itf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nconst headerCorrelationId = uuidv4();\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5207990300064583\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"6799974204271546\",\n    \"expiryDate\": \"0524\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"maestro\",\n    \"issuerCountryCode\": \"BR\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204248992891489\",\n    \"expiryDate\": \"0524\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"NON_TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"5207990300064591\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"2221070000064586\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  }\n];\n\nvar sampleDeviceTurCards = [\n  {\n    \"deviceTur\": \"DWSPMC0000114393c9efc48326844d6cbcc360d1c83fe237\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"STATIC\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC00001143933e02555e1dd144438d83741acfb3f8f3\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"STATIC\"\n  },\n  {\n    \"deviceTur\": \"DWSPMC0000114393c9efc48326844d6cbcc360d1c83fe237\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"CLOUD\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC00001143933e02555e1dd144438d83741acfb3f8f3\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"CLOUD\"\n  },\n    {\n        \"deviceTur\": \"DWSPMC00001143937c371229c7744372b237508ca7f3d015\",\n        \"expiryDate\": \"0124\",\n        \"tokenRequestorId\": \"50191159210\",\n        \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n        \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n        \"paymentNetworkName\": \"mastercard\",\n        \"issuerCountryCode\": \"US\",\n        \"tokeType\": \"CLOUD\"\n    }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\n//var singleTurBasedCard = _.sample(sampleDeviceTurCards);\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"ITF\");\nconst envInstanceURL = \"https://pi-core-service-facade.apps.stl.pcfstage00.mastercard.int\";\n// const envInstanceURL = \"https://blue-src-itf-pi-core-service.apps.stl.pcfstage00.mastercard.int\";\n\ninsomnia.environment.set('pi-core-service_cardservice-itf-url', envInstanceURL);\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://af-test-harness-facade.apps.stl.pcfstage00.mastercard.int/api/callWithAppFramework\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n//Synapse Header data\ninsomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\n// insomnia.environment.set('pi-core-service_correlation-id', \"3cd80a1f-f13a-42c2-b141-17da8c287765\");\nconsole.log(\"correlation-id used:\", headerCorrelationId);\ninsomnia.environment.set('pi-core-service_correlation-id', headerCorrelationId);\n\n//insomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"A50DA021\");\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"FACADE\");\ninsomnia.environment.set('pi-core-service_card-art-service-name', \"card-art-service-getAssets\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\n// insomnia.environment.set('pi-core-service_deviceTokenUniqueReference', singleTurBasedCard.deviceTur);\n// insomnia.environment.set('pi-core-service_deviceTurExpiryDate', singleTurBasedCard.expiryDate);\n// insomnia.environment.set('pi-core-service_deviceTurPrimaryAccountNumberSource', singleTurBasedCard.primaryAccountNumberSource);\n// insomnia.environment.set('pi-core-service_deviceTurProgramId', singleTurBasedCard.programId);\n// insomnia.environment.set('pi-core-service_deviceTurTokenRequestorId', singleTurBasedCard.tokenRequestorId);\n\n//Logging it to console for debugging\nconsole.log(\"singleCard Picked: \" + JSON.stringify(singleCard));\n//console.log(\"singleDeviceTur Picked: \" + JSON.stringify(singleTurBasedCard));\n\nconst donerPrimaryAccountNumber= \"5424150404794208\"; //\ninsomnia.environment.set('pi-core-service_donerPrimaryAccountNumber', donerPrimaryAccountNumber);\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-yellowPath', \"5455031509212647\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-GreenPath', \"5455031509868448\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5400170000000006\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized-yellowPath-3DS', \"5204290703576918\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-nld-maestro', \"6392410225083665267\");",
      "afterResponseScript": "//Update cardservice-itf-url to cardservice-synapse-url path\r\n//insomnia.environment.set('pi-core-service_cardservice-itf-url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));"
    },
    {
      "_id": "req_7f271220f8cc4c4fb059a028",
      "_type": "request",
      "parentId": "fld_0a0083a0d1af4f95adcf2441",
      "name": "ITF AFM Mani Urgent URLs",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-itf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nconst headerCorrelationId = uuidv4();\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"ITF\");\nconst envInstanceURL = \"https://pi-core-service-new-facades.apps.stl.pcfstage00.mastercard.int\";\n// const envInstanceURL = \"https://pi-core-service-new-facade.apps.stl.pcfstage00.mastercard.int\";\n// const envInstanceURL = \"https://blue-src-itf-pi-core-service.apps.stl.pcfstage00.mastercard.int\";\n\ninsomnia.environment.set('pi-core-service_cardservice-itf-url', envInstanceURL);\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://af-test-harness-facade.apps.stl.pcfstage00.mastercard.int/api/callWithAppFramework\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n//Synapse Header data\ninsomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\n// insomnia.environment.set('pi-core-service_correlation-id', \"3cd80a1f-f13a-42c2-b141-17da8c287765\");\nconsole.log(\"correlation-id used:\", headerCorrelationId);\ninsomnia.environment.set('pi-core-service_correlation-id', headerCorrelationId);\n\n//insomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"A50DA021\");\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"FACADE\");\ninsomnia.environment.set('pi-core-service_card-art-service-name', \"card-art-service-getAssets\");\nconst primaryAccountNumber= \"5424150109211052\"  \n//  \"5424150109269191\"; \"5424150109290650\"; \"5424150404794208\";\n//  \"5424150213669328\";\n// 5424150109211052\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', primaryAccountNumber);\nconst donerPrimaryAccountNumber= \"5424150404794208\"; //\ninsomnia.environment.set('pi-core-service_donerPrimaryAccountNumber', donerPrimaryAccountNumber);\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-yellowPath', \"5455031509212647\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-GreenPath', \"5455031509868448\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5400170000000006\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized-yellowPath-3DS', \"5204290703576918\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-nld-maestro', \"6392410225083665267\");",
      "afterResponseScript": "//Update cardservice-itf-url to cardservice-synapse-url path\r\n//insomnia.environment.set('pi-core-service_cardservice-itf-url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));"
    },
    {
      "_id": "fld_dea47ad78e644de2aed88478",
      "_type": "request_group",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "MTF"
    },
    {
      "_id": "req_b90f00ab1e6d41efa394176d",
      "_type": "request",
      "parentId": "fld_dea47ad78e644de2aed88478",
      "name": "MTF-STL-OCTOPUS-TRIDENT-FPAN",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-mtf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5204245400064584\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"paymentCardType\": \"CREDIT\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204245400064584\",\n    \"expiryDate\": \"0434\",\n    \"tokenRequestorId\": \"50278823000\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#DEV-MANITOBA-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"paymentCardType\": \"CREDIT\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204731620064587\",\n    \"expiryDate\": \"0531\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"paymentCardType\": \"DEBIT\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120340000000244\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50203424700\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#DOCUMENTATION-UPN2#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"paymentCardType\": \"CREDIT\"\n  },\n  {\n    \"primaryAccountNumber\": \"52047350497201587\",\n    \"expiryDate\": \"0532\",\n    \"tokenRequestorId\": \"50203424700\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#DOCUMENTATION-UPN2#01\",\n    \"paymentNetworkName\": \"maestro\",\n    \"issuerCountryCode\": \"US\",\n    \"paymentCardType\": \"CREDIT\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120350200064593\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ON_FILE\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"paymentCardType\": \"CREDIT\"\n  },\n  {\n    \"primaryAccountNumber\": \"5473501080064599\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ON_FILE\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"NZ\",\n    \"paymentCardType\": \"CREDIT\"\n  }\n];\n\nvar sampleDeviceTurCards = [\n  {\n    \"deviceTur\": \"DAPLMC00001441365785a6a392de431b85ced4ea1c335eed\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_MERCHANT_OBO#Manitoba-E2ETestDPA5#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\n//var singleTurBasedCard = _.sample(sampleDeviceTurCards);\n\n//Env-URLs\n//https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\ninsomnia.environment.set('pi-core-service_env', \"MTF\");\ninsomnia.environment.set('pi-core-service_cardservice-mtf-url', \"https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#ApplePayCert#01\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\"); //MTF-STL specific.\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\n// insomnia.environment.set('pi-core-service_deviceTokenUniqueReference', singleTurBasedCard.deviceTur);\n// insomnia.environment.set('pi-core-service_deviceTurExpiryDate', singleTurBasedCard.expiryDate);\n// insomnia.environment.set('pi-core-service_deviceTurPrimaryAccountNumberSource', singleTurBasedCard.primaryAccountNumberSource);\n// insomnia.environment.set('pi-core-service_deviceTurProgramId', singleTurBasedCard.programId);\n// insomnia.environment.set('pi-core-service_deviceTurTokenRequestorId', singleTurBasedCard.tokenRequestorId);\n\n//Logging it to console for debugging'\nJSON.stringify(singleCard)\nconsole.log(\"singleCard Picked: \" + JSON.stringify(singleCard));\n//console.log(\"singleDeviceTur Picked: \" + singleTurBasedCard.deviceTur);\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5186001756871797\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-mtf-url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_94ecca5744454c689841a858",
      "_type": "request",
      "parentId": "fld_dea47ad78e644de2aed88478",
      "name": "MTF-STL-OCTOPUS-TRIDENT-TUR",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-mtf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5204245400064584\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"paymentCardType\": \"CREDIT\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204245400064584\",\n    \"expiryDate\": \"0434\",\n    \"tokenRequestorId\": \"50278823000\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#DEV-MANITOBA-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"paymentCardType\": \"CREDIT\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204731620064587\",\n    \"expiryDate\": \"0531\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"paymentCardType\": \"DEBIT\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120340000000244\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50203424700\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#DOCUMENTATION-UPN2#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"paymentCardType\": \"CREDIT\"\n  },\n  {\n    \"primaryAccountNumber\": \"52047350497201587\",\n    \"expiryDate\": \"0532\",\n    \"tokenRequestorId\": \"50203424700\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#DOCUMENTATION-UPN2#01\",\n    \"paymentNetworkName\": \"maestro\",\n    \"issuerCountryCode\": \"US\",\n    \"paymentCardType\": \"CREDIT\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120350200064593\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ON_FILE\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"paymentCardType\": \"CREDIT\"\n  },\n  {\n    \"primaryAccountNumber\": \"5473501080064599\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ON_FILE\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"NZ\",\n    \"paymentCardType\": \"CREDIT\"\n  }\n];\n\nvar sampleDeviceTurCards = [\n  {\n    \"deviceTur\": \"DAPLMC00001441365785a6a392de431b85ced4ea1c335eed\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_MERCHANT_OBO#Manitoba-E2ETestDPA5#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokenType\": \"CLOUD\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC00001441361ac692b044f046ee9451003182bad3da\",\n    \"expiryDate\": \"0725\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-Manitoba-direct#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokenType\": \"CLOUD\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC0000144136aaa21cfefa624312a7e0a30f2dea7a7a\",\n    \"expiryDate\": \"0725\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_mtf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokenType\": \"STATIC\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC0000144136f222906255114082ab6b511ac6bced64\",\n    \"expiryDate\": \"0725\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokenType\": \"CLOUD\"\n  }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\n//var singleCard = _.sample(sampleCards);\n//var singleTurBasedCard = _.sample(sampleDeviceTurCards); // random select\nvar singleTurBasedCard = sampleDeviceTurCards[3];\n\n//Env-URLs\n//https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\ninsomnia.environment.set('pi-core-service_env', \"MTF\");\ninsomnia.environment.set('pi-core-service_cardservice-mtf-url', \"https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#ApplePayCert#01\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\"); //MTF-STL specific.\n// insomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\n// insomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\n// insomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\n// insomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\n// insomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\ninsomnia.environment.set('pi-core-service_deviceTokenUniqueReference', singleTurBasedCard.deviceTur);\ninsomnia.environment.set('pi-core-service_deviceTurExpiryDate', singleTurBasedCard.expiryDate);\ninsomnia.environment.set('pi-core-service_deviceTurPrimaryAccountNumberSource', singleTurBasedCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_deviceTurProgramId', singleTurBasedCard.programId);\ninsomnia.environment.set('pi-core-service_program-id', singleTurBasedCard.programId);\ninsomnia.environment.set('pi-core-service_deviceTurTokenType', singleTurBasedCard.tokenType);\ninsomnia.environment.set('pi-core-service_deviceTurTokenRequestorId', singleTurBasedCard.tokenRequestorId);\n\n//Logging it to console for debugging\n// console.log(\"singleCard Picked: \" + singleCard.primaryAccountNumber);\nconsole.log(\"singleDeviceTur Picked: \" + JSON.stringify(singleTurBasedCard) );\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5186001756871797\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-mtf-url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_31765d36245043aea20b6990",
      "_type": "request",
      "parentId": "fld_dea47ad78e644de2aed88478",
      "name": "MTF-STL",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-mtf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\n//Available Cards\nvar sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\n\n//Env-URLs\n//https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\ninsomnia.environment.set('pi-core-service_env', \"MTF\");\ninsomnia.environment.set('pi-core-service_cardservice-mtf-url', \"https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#ApplePayCert#01\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B,UP\"); //MTF-STL specific.\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard);\n\n//Logging it to console for debugging\nconsole.log(\"singleCard Picked: \" + singleCard);\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5186001756871797\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-mtf-url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_bba2fa6afe0b44d2b4ffbd77",
      "_type": "request",
      "parentId": "fld_dea47ad78e644de2aed88478",
      "name": "MTF-STL-FPAN",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-mtf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"6799996413566366\",\n    \"expiryDate\": \"0526\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120340000064505\",\n    \"expiryDate\": \"0832\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120348371534907\",\n    \"expiryDate\": \"0336\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120343745572568\",\n    \"expiryDate\": \"0432\",\n    \"tokenRequestorId\": \"50273580900\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO_SHARED#SRC4M_E2E-PROGRAM_NAME_SHARED_MTF_2#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120341704364910\",\n    \"expiryDate\": \"0731\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204731620064595\",\n    \"expiryDate\": \"0531\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204731620064595\",\n    \"expiryDate\": \"0531\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\nvar sampleDeviceTurCards = [\n  {\n    \"deviceTur\": \"DAPLMC00001441367dbc170df4734b1791e80f603ed427b1\",\n    \"expiryDate\": \"0725\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-Manitoba-direct#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\nvar singleTurBasedCard = _.sample(sampleDeviceTurCards);\n\n//Env-URLs\n//https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\ninsomnia.environment.set('pi-core-service_env', \"MTF\");\ninsomnia.environment.set('pi-core-service_cardservice-mtf-url', \"https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#ApplePayCert#01\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\"); //MTF-STL specific.\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\ninsomnia.environment.set('pi-core-service_deviceTokenUniqueReference', singleTurBasedCard.deviceTur);\ninsomnia.environment.set('pi-core-service_deviceTurExpiryDate', singleTurBasedCard.expiryDate);\ninsomnia.environment.set('pi-core-service_deviceTurPrimaryAccountNumberSource', singleTurBasedCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_deviceTurProgramId', singleTurBasedCard.programId);\ninsomnia.environment.set('pi-core-service_deviceTurTokenRequestorId', singleTurBasedCard.tokenRequestorId);\n\n//Logging it to console for debugging\nconsole.log(\"singleCard Picked: \" + singleCard.primaryAccountNumber);\nconsole.log(\"singleDeviceTur Picked: \" + singleTurBasedCard.deviceTur);\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5186001756871797\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-mtf-url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_90999cd82609437fbf610f16",
      "_type": "request",
      "parentId": "fld_dea47ad78e644de2aed88478",
      "name": "MTF-STL-TUR",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-mtf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"6799996413566366\",\n    \"expiryDate\": \"0526\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120340000064505\",\n    \"expiryDate\": \"0832\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120348371534907\",\n    \"expiryDate\": \"0336\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120343745572568\",\n    \"expiryDate\": \"0432\",\n    \"tokenRequestorId\": \"50273580900\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO_SHARED#SRC4M_E2E-PROGRAM_NAME_SHARED_MTF_2#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120341704364910\",\n    \"expiryDate\": \"0731\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204731620064595\",\n    \"expiryDate\": \"0531\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204731620064595\",\n    \"expiryDate\": \"0531\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\nvar sampleDeviceTurCards = [\n  {\n    \"deviceTur\": \"DAPLMC00001441367dbc170df4734b1791e80f603ed427b1\",\n    \"expiryDate\": \"0725\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-Manitoba-direct#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\nvar singleTurBasedCard = _.sample(sampleDeviceTurCards);\n\n//Env-URLs\n//https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\ninsomnia.environment.set('pi-core-service_env', \"MTF\");\ninsomnia.environment.set('pi-core-service_cardservice-mtf-url', \"https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#ApplePayCert#01\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\"); //MTF-STL specific.\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\ninsomnia.environment.set('pi-core-service_deviceTokenUniqueReference', singleTurBasedCard.deviceTur);\ninsomnia.environment.set('pi-core-service_deviceTurExpiryDate', singleTurBasedCard.expiryDate);\ninsomnia.environment.set('pi-core-service_deviceTurPrimaryAccountNumberSource', singleTurBasedCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_deviceTurProgramId', singleTurBasedCard.programId);\ninsomnia.environment.set('pi-core-service_deviceTurTokenRequestorId', singleTurBasedCard.tokenRequestorId);\n\n//Logging it to console for debugging\nconsole.log(\"singleCard Picked: \" + singleCard.primaryAccountNumber);\nconsole.log(\"singleDeviceTur Picked: \" + singleTurBasedCard.deviceTur);\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5186001756871797\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-mtf-url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_6275f295914a4c0da2aafe6e",
      "_type": "request",
      "parentId": "fld_dea47ad78e644de2aed88478",
      "name": "MTF-KSC",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-mtf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"MTF\");\n//const envInstanceURL = \"https://blue-pre-prod-paymentinstrument-services.apps.stl.pcfprod00.mastercard.int\";\nconst envInstanceURL = \"https://blue-src-mtf-synapse-test-harness.apps.ksc.pcfprod00.mastercard.int\";\ninsomnia.environment.set('pi-core-service_cardservice-mtf-url', envInstanceURL);\n\n//insomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-src-mtf-synapse-test-harness.apps.ksc.pcfprod00.mastercard.int/api/callWithPrism\");\n\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#ApplePayCert#01\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', \"3cd80a1f-f13a-42c2-b141-17da8c287765\");\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"4F339BE7\"); //MTF-KSC specific TAG.\n\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', \"5120347732622518\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5186001756871797\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-mtf-url'));\n\n// const donerPrimaryAccountNumber= \"5120347732622518\";\n// insomnia.environment.set('pi-core-service_donerPrimaryAccountNumber', donerPrimaryAccountNumber);",
      "afterResponseScript": ""
    },
    {
      "_id": "req_dcbffd217a9e44beb28d8242",
      "_type": "request",
      "parentId": "fld_dea47ad78e644de2aed88478",
      "name": "setup MTF-PNQ-sometimes-traffic-goes-to-opposite-change-endpoint-and-synapse-tag-to-switch",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-mtf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"MTF\");\n//const envInstanceURL = \"https://blue-pre-prod-paymentinstrument-services.apps.stl.pcfprod00.mastercard.int\";\nconst envInstanceURL = \"https://blue-src-mtf-synapse-test-harness.apps.pnq.trd-prod-pas.mastercard.int\";\ninsomnia.environment.set('pi-core-service_cardservice-mtf-url', envInstanceURL);\n\n//insomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-src-mtf-synapse-test-harness.apps.pnq.trd-prod-pas.mastercard.int/api/callWithPrism\");\n\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#ApplePayCert#01\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', \"3cd80a1f-f13a-42c2-b141-17da8c287765\");\n//insomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"1F52E671\"); //IOS-STL TAG\n\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"ACCA8D5B\"); //IOS-PNQ TAG\n\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', \"2223520120139831\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5186001756871797\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-mtf-url'));\n\n// const donerPrimaryAccountNumber= \"5120347732622518\";\n// insomnia.environment.set('pi-core-service_donerPrimaryAccountNumber', donerPrimaryAccountNumber);",
      "afterResponseScript": ""
    },
    {
      "_id": "req_8a3ce93f9df1412fa792fee4",
      "_type": "request",
      "parentId": "fld_dea47ad78e644de2aed88478",
      "name": "setup MTF-DEL-sometimes-traffic-goes-to-opposite-change-endpoint-and-synapse-tag-to-switch",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-mtf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"MTF\");\n//const envInstanceURL = \"https://blue-pre-prod-paymentinstrument-services.apps.stl.pcfprod00.mastercard.int\";\nconst envInstanceURL = \"https://blue-src-mtf-synapse-test-harness.apps.del.trd-prod-pas.mastercard.int\";\ninsomnia.environment.set('pi-core-service_cardservice-mtf-url', envInstanceURL);\n\n//insomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-src-mtf-synapse-test-harness.apps.del.trd-prod-pas.mastercard.int/api/callWithPrism\");\n\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#ApplePayCert#01\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', \"3cd80a1f-f13a-42c2-b141-17da8c287765\");\n\n//insomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"1F52E671\"); //IOS-STL TAG\n\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"ACCA8D5B\"); //IOS-PNQ TAG\n\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', \"5299920970807317\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5186001756871797\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-mtf-url'));\n\n// const donerPrimaryAccountNumber= \"5120347732622518\";\n// insomnia.environment.set('pi-core-service_donerPrimaryAccountNumber', donerPrimaryAccountNumber);",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_9788410fb34c4199803db8a4",
      "_type": "request_group",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "MTF-Product-Test-Data"
    },
    {
      "_id": "req_5dc7ecf9b3714934b5ef2780",
      "_type": "request",
      "parentId": "fld_9788410fb34c4199803db8a4",
      "name": "MTF-STL-Tokenized-US-CREDIT-16digit-51**range",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-mtf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5120350138237782\",\n    \"expiryDate\": \"0526\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120350140959639\",\n    \"expiryDate\": \"0832\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120350162577483\",\n    \"expiryDate\": \"0336\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120350164082722\",\n    \"expiryDate\": \"0432\",\n    \"tokenRequestorId\": \"50273580900\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO_SHARED#SRC4M_E2E-PROGRAM_NAME_SHARED_MTF_2#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120350198058805\",\n    \"expiryDate\": \"0731\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\n\n//Env-URLs\n//https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\ninsomnia.environment.set('pi-core-service_env', \"MTF\");\ninsomnia.environment.set('pi-core-service_cardservice-mtf-url', \"https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\"); //MTF-STL specific.\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\n//Logging it to console for debugging\nconsole.log(\"singleCard Picked: \" + singleCard.primaryAccountNumber);",
      "afterResponseScript": ""
    },
    {
      "_id": "req_3f54570efd534515a3a0deda",
      "_type": "request",
      "parentId": "fld_9788410fb34c4199803db8a4",
      "name": "MTF-STL-Tokenized-US-CROSS-PROGRAM-16digit-5120350**range",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-mtf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5120350128333740\",\n    \"expiryDate\": \"0526\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120350146300937\",\n    \"expiryDate\": \"0832\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120350180703434\",\n    \"expiryDate\": \"0336\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120350185217745\",\n    \"expiryDate\": \"0432\",\n    \"tokenRequestorId\": \"50273580900\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5120350199592372\",\n    \"expiryDate\": \"0731\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\n\n//Env-URLs\n//https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\ninsomnia.environment.set('pi-core-service_env', \"MTF\");\ninsomnia.environment.set('pi-core-service_cardservice-mtf-url', \"https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\"); //MTF-STL specific.\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\n//Logging it to console for debugging\nconsole.log(\"singleCard Picked: \" + singleCard.primaryAccountNumber);",
      "afterResponseScript": ""
    },
    {
      "_id": "req_facb415e009e4fc6a6bf2d28",
      "_type": "request",
      "parentId": "fld_9788410fb34c4199803db8a4",
      "name": "MTF-STL-NON-Tokenized-US-CREDIT-16digit-518600**range",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-mtf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5186001712204836\",\n    \"expiryDate\": \"0526\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5186001725101649\",\n    \"expiryDate\": \"0832\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5186001726968848\",\n    \"expiryDate\": \"0336\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5186001772538909\",\n    \"expiryDate\": \"0432\",\n    \"tokenRequestorId\": \"50273580900\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO_SHARED#SRC4M_E2E-PROGRAM_NAME_SHARED_MTF_2#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\n\n//Env-URLs\n//https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\ninsomnia.environment.set('pi-core-service_env', \"MTF\");\ninsomnia.environment.set('pi-core-service_cardservice-mtf-url', \"https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\"); //MTF-STL specific.\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\n//Logging it to console for debugging\nconsole.log(\"singleCard Picked: \" + singleCard.primaryAccountNumber);",
      "afterResponseScript": ""
    },
    {
      "_id": "req_2e9bed9d1a034b129e845337",
      "_type": "request",
      "parentId": "fld_9788410fb34c4199803db8a4",
      "name": "MTF-STL-Tokenized-US-DEBIT-16digit-52**range",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-mtf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5204731620999188\",\n    \"expiryDate\": \"0526\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204731622759507\",\n    \"expiryDate\": \"0832\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204731626614963\",\n    \"expiryDate\": \"0336\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204731626923034\",\n    \"expiryDate\": \"0432\",\n    \"tokenRequestorId\": \"50273580900\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO_SHARED#SRC4M_E2E-PROGRAM_NAME_SHARED_MTF_2#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204731628214986\",\n    \"expiryDate\": \"0731\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\n\n//Env-URLs\n//https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\ninsomnia.environment.set('pi-core-service_env', \"MTF\");\ninsomnia.environment.set('pi-core-service_cardservice-mtf-url', \"https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\"); //MTF-STL specific.\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\n//Logging it to console for debugging\nconsole.log(\"singleCard Picked: \" + singleCard.primaryAccountNumber);",
      "afterResponseScript": ""
    },
    {
      "_id": "req_0882810bf7f54f138c0c015a",
      "_type": "request",
      "parentId": "fld_9788410fb34c4199803db8a4",
      "name": "MTF-STL-Tokenized-NE-CREDIT-Maestro-19digit-52**range(NMS)",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-mtf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5204735063254384533\",\n    \"expiryDate\": \"0526\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204735063907870789\",\n    \"expiryDate\": \"0832\",\n    \"tokenRequestorId\": \"50297129100\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204735065743380808\",\n    \"expiryDate\": \"0336\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204735066813540842\",\n    \"expiryDate\": \"0432\",\n    \"tokenRequestorId\": \"50273580900\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO_SHARED#SRC4M_E2E-PROGRAM_NAME_SHARED_MTF_2#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5204735067206705471\",\n    \"expiryDate\": \"0731\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\n\n//Env-URLs\n//https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\ninsomnia.environment.set('pi-core-service_env', \"MTF\");\ninsomnia.environment.set('pi-core-service_cardservice-mtf-url', \"https://blue-pre-prod-pi-core-service.apps.stl.pcfprod00.mastercard.int\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\"); //MTF-STL specific.\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\n//Logging it to console for debugging\nconsole.log(\"singleCard Picked: \" + singleCard.primaryAccountNumber);",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_ce81437713954c72a9d66395",
      "_type": "request_group",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "PERF"
    },
    {
      "_id": "req_70f3014e67f940aa9b81ea97",
      "_type": "request",
      "parentId": "fld_ce81437713954c72a9d66395",
      "name": "PERF src-perf-87480080-synapse-test-harnes",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-perf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nconst headerCorrelationId = uuidv4();\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5455020095703101\",\n    \"expiryDate\": \"0428\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": null,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"5409220502159791\",\n    \"expiryDate\": \"0425\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#Performancetesting#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"5409220263190811\",\n    \"expiryDate\": \"0428\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#Performancetesting#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n   {\n    \"primaryAccountNumber\": \"5409224791491071\",\n    \"expiryDate\": \"0428\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n     {\n    \"primaryAccountNumber\": \"5409223048434546\",\n    \"expiryDate\": \"0428\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#Performancetesting#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  }\n];\n\nvar sampleDeviceTurCards = [\n  {\n    \"deviceTur\": \"DWSPMC0000114393c9efc48326844d6cbcc360d1c83fe237\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"STATIC\"\n  }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\n//var singleTurBasedCard = _.sample(sampleDeviceTurCards);\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"ITF\");\n\nconst envInstanceURL = \"https://blue-src-perf-87480080-pi-core-service.apps.stl.pcfstage00.mastercard.int\";\ninsomnia.environment.set('pi-core-service_cardservice-perf-url', envInstanceURL);\n\nconst envTestHarnessURL = \"https://blue-src-perf-87480080-synapse-test-harnes.apps.stl.pcfstage00.mastercard.int/api/callWithPrism\"\n\n//APP_FRAMEWORK URL\n// insomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-src-perf-87480080-synapse-test-harnes.apps.stl.pcfstage00.mastercard.int/api/callWithAppFramework\");\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', envTestHarnessURL);\n\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n//Synapse Header data\ninsomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\n// insomnia.environment.set('pi-core-service_correlation-id', \"3cd80a1f-f13a-42c2-b141-17da8c287765\");\nconsole.log(\"correlation-id used:\", headerCorrelationId);\ninsomnia.environment.set('pi-core-service_correlation-id', headerCorrelationId);\n\n//insomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"A50DA021\");\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"PERF\");\ninsomnia.environment.set('pi-core-service_card-art-service-name', \"card-art-service-getAssets\");\n//insomnia.environment.set('pi-core-service_primaryAccountNumber', \"5424150109269191\");\n\nconsole.log(\"primaryAccountNumber:\", singleCard.primaryAccountNumber)\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\nconsole.log(\"singleCard Picked: \" + JSON.stringify(singleCard));",
      "afterResponseScript": "//Update cardservice-itf-url to cardservice-synapse-url path\r\n//insomnia.environment.set('pi-core-service_cardservice-itf-url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));"
    },
    {
      "_id": "req_77ec4004d9fa49ed824b7454",
      "_type": "request",
      "parentId": "fld_ce81437713954c72a9d66395",
      "name": "PERF urgent direct instance URL update",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-direct-perf-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"kick-one\");\n\n// const envInstanceURL = \"https://src-perf-pi-core-service-v2-fix-blue.apps.stl.pcfstage00.mastercard.int\";\nconst envInstanceURL = \"https://blue-src-perf-87480080-pi-core-service.apps.stl.pcfstage00.mastercard.int\";\n\ninsomnia.environment.set('pi-core-service_cardservice-direct-perf-url', envInstanceURL);\ninsomnia.environment.set('pi-core-service_cardservice-kick-one-url', envInstanceURL);\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-kick-one-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', \"3cd80a1f-f13a-42c2-b141-17da8c287765\");\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\");\ninsomnia.environment.set('pi-core-service_card-art-service-name', \"card-art-service-getAssets\");\n\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', \"5455031500000439\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5400170000064598\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', \"https://blue-src-stage-paymentinstrument-services.apps.stl.pcfstage00.mastercard.int\"); //stage for card-art???",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_a0f28445ebf244fe9ad5b85d",
      "_type": "request_group",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "STAGE"
    },
    {
      "_id": "req_4c789c9ec63648848d02a6b8",
      "_type": "request",
      "parentId": "fld_a0f28445ebf244fe9ad5b85d",
      "name": "STAGE",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-stage-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Env-URLs\n\ninsomnia.environment.set('pi-core-service_env', \"STAGE\");\nconst envInstanceURL = \"https://blue-src-stage-pi-core-service.apps.stl.pcfstage00.mastercard.int\"\ninsomnia.environment.set('pi-core-service_cardservice-stage-url', envInstanceURL);\n\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-src-stage-af-test-harness.apps.stl.pcfstage00.mastercard.int/api/callWithAppFramework\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\");\ninsomnia.environment.set('pi-core-service_card-art-service-name', \"card-art-service-getAssets\");\n\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', \"5455031500815828\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5400170005907163\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-stage-url'));\n\n// const donerPrimaryAccountNumber= \"5455031500000520\" //\"5204731620064520\";\n// insomnia.environment.set('pi-core-service_donerPrimaryAccountNumber', donerPrimaryAccountNumber);",
      "afterResponseScript": ""
    },
    {
      "_id": "req_a5d2d7af92f64db58532f62b",
      "_type": "request",
      "parentId": "fld_a0f28445ebf244fe9ad5b85d",
      "name": "STAGE-TRIDENT-TDS-FPAN-OCTOPUS-DEVICETUR",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-stage-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5455031500001783\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"5455031500001403\",\n    \"expiryDate\": \"0524\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"maestro\",\n    \"issuerCountryCode\": \"BR\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"5455031503383022\",\n    \"expiryDate\": \"0524\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"NON_TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"5455031506717697\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"5455031506845803\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  }\n];\n\nvar sampleDeviceTurCards = [\n  {\n    \"deviceTur\": \"DM4MMC00000000014be67e2beb62453e8d245e317ec60b31\",\n    \"devicePur\": \"FM4MMC000000000183e8d4e9da684a69a41a99493aeb0c43\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"STATIC\"\n  },\n  {\n    \"deviceTur\": \"DM4MMC0000000001fdcd91c79cca4aa590565cc430397269\",\n    \"devicePur\": \"FM4MMC000000000183e8d4e9da684a69a41a99493aeb0c43\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"STATIC\"\n  },\n  {\n    \"deviceTur\": \"DM4MMC0000000001ba3156874c5548389c6f8157a08da02e\",\n    \"devicePur\": \"FM4MMC000000000129158f31dbe243dba566236be93ec78d\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"CLOUD\"\n  },\n  {\n    \"deviceTur\": \"DM4MMC0000000001a0b878c128de43128ccc72b3bbbaed8c\",\n    \"devicePur\": \"FM4MMC0000000001e2b7a034f0ff4518897691167dc1b4fd\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"CLOUD\"\n  },\n    {\n        \"deviceTur\": \"DM4MMC0000000001c9611a4865244988941fc78cba91b7b4\",\n        \"devicePur\": \"FM4MMC000000000162a9b8f133af44f0a5919d6385cc99a2\",\n        \"expiryDate\": \"0124\",\n        \"tokenRequestorId\": \"50191159210\",\n        \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n        \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n        \"paymentNetworkName\": \"mastercard\",\n        \"issuerCountryCode\": \"US\",\n        \"tokeType\": \"CLOUD\"\n    }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\nvar singleTurBasedCard = _.sample(sampleDeviceTurCards);\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"STAGE\");\nconst envInstanceURL = \"https://blue-src-stage-pi-core-service.apps.stl.pcfstage00.mastercard.int\"\ninsomnia.environment.set('pi-core-service_cardservice-stage-url', envInstanceURL);\n\ninsomnia.environment.set('pi-core-service_cardservice-synapse-url', \"https://blue-src-stage-synapse-test-harness.apps.stl.pcfstage00.mastercard.int/api/callWithPrism\");\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-synapse-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\n\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\");\ninsomnia.environment.set('pi-core-service_card-art-service-name', \"card-art-service-getAssets\");\n\nconsole.log(\"primaryAccountNumber:\", singleCard.primaryAccountNumber)\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\ninsomnia.environment.set('pi-core-service_deviceTokenUniqueReference', singleTurBasedCard.deviceTur);\ninsomnia.environment.set('pi-core-service_devicePanUniqueReference', singleTurBasedCard.devicePur);\n\ninsomnia.environment.set('pi-core-service_deviceTurExpiryDate', singleTurBasedCard.expiryDate);\ninsomnia.environment.set('pi-core-service_deviceTurPrimaryAccountNumberSource', singleTurBasedCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_deviceTurProgramId', singleTurBasedCard.programId);\ninsomnia.environment.set('pi-core-service_deviceTurTokenRequestorId', singleTurBasedCard.tokenRequestorId);\n\n//Logging it to console for debugging\nconsole.log(\"singleCard Picked: \" + JSON.stringify(singleCard));\nconsole.log(\"singleDeviceTur Picked: \" + singleTurBasedCard.deviceTur);\n\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5400170000064598\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-stage-url'));\n\n// const donerPrimaryAccountNumber= \"5455031500000520\" //\"5204731620064520\";\n// insomnia.environment.set('pi-core-service_donerPrimaryAccountNumber', donerPrimaryAccountNumber);",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_71b8396d43a54367989e4320",
      "_type": "request_group",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "Kick-One"
    },
    {
      "_id": "req_1f1b64da6cec4d58a0814daa",
      "_type": "request",
      "parentId": "fld_71b8396d43a54367989e4320",
      "name": "Kick-one-pi-core-service-ms-Legacy",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-kick-one-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"kick-one\");\n\n// const envInstanceURL = \"https://src-kick-one-pi-core-service-v2-blue.apps.stl.pcfstage00.mastercard.int\";\nconst envInstanceURL = \"https://pi-core-service-parimal.apps.stl.pcfstage00.mastercard.int\";\n//const envInstanceURL = \"https://pi-core-service-ms.apps.stl.pcfstage00.mastercard.int\";\n// const envInstanceURL = \"https://blue-src-perf-87480080-pi-core-service.apps.stl.pcfstage00.mastercard.int\";\n\ninsomnia.environment.set('pi-core-service_cardservice-kick-one-url', envInstanceURL);\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-kick-one-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', \"3cd80a1f-f13a-42c2-b141-17da8c287765\");\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\");\ninsomnia.environment.set('pi-core-service_card-art-service-name', \"card-art-service-getAssets\");\n\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', \"5455031500000439\");\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5400170000064598\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', \"https://blue-src-stage-paymentinstrument-services.apps.stl.pcfstage00.mastercard.int\"); //stage for card-art???",
      "afterResponseScript": ""
    },
    {
      "_id": "req_474d5c3028e64fb697991d7d",
      "_type": "request",
      "parentId": "fld_71b8396d43a54367989e4320",
      "name": "Kick-one-pi-core-service-stage-ms-NEW-MODEL",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-kick-one-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"kick-one\");\n\n// const envInstanceURL = \"https://pi-core-service-ms.apps.stl.pcfstage00.mastercard.int\";\nconst envInstanceURL = \"https://src-pi-core-service-v2-latency-blue.apps.stl.pcfstage00.mastercard.int\";\n\n// const envInstanceURL = \"https://pi-core-service-jenny.apps.stl.pcfstage00.mastercard.int\";\n\n// const envInstanceURL = \"https://perf-smoke1-pi-core-service-saveupdate-Refactorcode.apps.stl.pcfstage00.mastercard.int\";\n\n// const envInstanceURL = \"https://src-pi-core-service-zoe-blue.apps.stl.pcfstage00.mastercard.int\";\n\n// const envInstanceURL = \"https://src-stage-v2-pi-core-service-blue.apps.stl.pcfstage00.mastercard.int\";\n\ninsomnia.environment.set('pi-core-service_cardservice-kick-one-url', envInstanceURL);\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-kick-one-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', \"3cd80a1f-f13a-42c2-b141-17da8c287765\");\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\");\ninsomnia.environment.set('pi-core-service_card-art-service-name', \"card-art-service-getAssets\");\n\n// insomnia.environment.set('pi-core-service_primaryAccountNumber', \"5455031500000439\");\n// insomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5400170000064598\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', \"https://blue-src-stage-paymentinstrument-services.apps.stl.pcfstage00.mastercard.int\"); //stage for card-art???",
      "afterResponseScript": ""
    },
    {
      "_id": "req_7d3b63b732734cda85bb6c86",
      "_type": "request",
      "parentId": "fld_71b8396d43a54367989e4320",
      "name": "kick-one-OCTOPUS-TRIDENT-FPAN",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-kick-one-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5207990300064583\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"6799974204271546\",\n    \"expiryDate\": \"0524\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"maestro\",\n    \"issuerCountryCode\": \"BR\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n//   {\n//     \"primaryAccountNumber\": \"5204248992891489\",\n//     \"expiryDate\": \"0524\",\n//     \"tokenRequestorId\": \"50123197928\",\n//     \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n//     \"cvc2\": 123,\n//     \"programId\": \"SRC\",\n//     \"paymentNetworkName\": \"mastercard\",\n//     \"issuerCountryCode\": \"US\",\n//     \"Tokenized\": \"NON_TOKENIZED\"\n//   },\n  {\n    \"primaryAccountNumber\": \"5207990300064591\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  },\n  {\n    \"primaryAccountNumber\": \"2221070000064586\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"Tokenized\": \"TOKENIZED\"\n  }\n];\n\nvar sampleDeviceTurCards = [\n  {\n    \"deviceTur\": \"DWSPMC0000114393c9efc48326844d6cbcc360d1c83fe237\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"STATIC\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC00001143933e02555e1dd144438d83741acfb3f8f3\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"STATIC\"\n  },\n  {\n    \"deviceTur\": \"DWSPMC0000114393c9efc48326844d6cbcc360d1c83fe237\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"CLOUD\"\n  },\n  {\n    \"deviceTur\": \"DAPLMC00001143933e02555e1dd144438d83741acfb3f8f3\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\",\n    \"tokeType\": \"CLOUD\"\n  },\n    {\n        \"deviceTur\": \"DWSPMC00001143937c371229c7744372b237508ca7f3d015\",\n        \"expiryDate\": \"0124\",\n        \"tokenRequestorId\": \"50191159210\",\n        \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n        \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\",\n        \"paymentNetworkName\": \"mastercard\",\n        \"issuerCountryCode\": \"US\",\n        \"tokeType\": \"CLOUD\"\n    }\n];\n\n//Available Cards\n//var sampleCards = [ \"5424150109211052\" ];\n\n//Pick a Card\nvar singleCard = _.sample(sampleCards);\n//var singleTurBasedCard = _.sample(sampleDeviceTurCards);\n\n//Env-URLs\ninsomnia.environment.set('pi-core-service_env', \"kick-one\");\nconst envInstanceURL = \"https://src-kick-one-pi-core-service-v2-blue.apps.stl.pcfstage00.mastercard.int\";\n\ninsomnia.environment.set('pi-core-service_cardservice-kick-one-url', envInstanceURL);\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-kick-one-url'));\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\ninsomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\n\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\");\ninsomnia.environment.set('pi-core-service_card-art-service-name', \"card-art-service-getAssets\");\n\nconsole.log(\"primaryAccountNumber:\", singleCard.primaryAccountNumber)\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\n\n// insomnia.environment.set('pi-core-service_deviceTokenUniqueReference', singleTurBasedCard.deviceTur);\n// insomnia.environment.set('pi-core-service_deviceTurExpiryDate', singleTurBasedCard.expiryDate);\n// insomnia.environment.set('pi-core-service_deviceTurPrimaryAccountNumberSource', singleTurBasedCard.primaryAccountNumberSource);\n// insomnia.environment.set('pi-core-service_deviceTurProgramId', singleTurBasedCard.programId);\n// insomnia.environment.set('pi-core-service_deviceTurTokenRequestorId', singleTurBasedCard.tokenRequestorId);\n\n//Logging it to console for debugging\nconsole.log(\"singleCard Picked: \" + JSON.stringify(singleCard));\n//console.log(\"singleDeviceTur Picked: \" + singleTurBasedCard.deviceTur);\n\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5400170000064598\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', insomnia.environment.get('pi-core-service_cardservice-stage-url'));\n\n// const donerPrimaryAccountNumber= \"5455031500000520\" //\"5204731620064520\";\n// insomnia.environment.set('pi-core-service_donerPrimaryAccountNumber', donerPrimaryAccountNumber);",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_5478f954082241f2aed69b68",
      "_type": "request_group",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "Local"
    },
    {
      "_id": "fld_5b0795bba079467aa68f0db5",
      "_type": "request_group",
      "parentId": "fld_5478f954082241f2aed69b68",
      "name": "quick-test-with-local-dev-cloud"
    },
    {
      "_id": "req_b22048374cb54a1a8aab4fc4",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "enroll1-fpan",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-kick-one-url'] }}/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5207980044838061\",\n    \"expiryDate\": \"1026\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_c81e25ebb7c04c03b30144e6",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "enroll2-fpan",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5207990300064591\",\n    \"expiryDate\": \"1026\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_a228882d2ce54f40904a67fb",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "enroll3-fpan",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5207980059728876\",\n    \"expiryDate\": \"1026\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_46a06289296d455aba52907e",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "cross-enroll",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"sourceCardId\": \"3vVNepKBSLei-0d9zp_xhg000000000000US\",\n    \"sourceProgramId\": \"SRC\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#Manitoba-E2EDonorProgram#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_71b55a8a96dd4176b2741231",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "TUR Enrollment",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC0000000004CQMXHVHQ6DZLMH2TBQD4ZROPGWNFTAMIH\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_b27e22dca57b4c579842d08e",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "PUR based Enrollment",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"panUniqueReference\": \"FTC2MC000011439380b16e746a7646c496d36ba8bb87b6a2\",\n    \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"c915184f-c22a-4cc8-96a3-09420aa5e228\",\n    \"clientRoutingId\": \"clientRoutingId687\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#Manitoba-E2EDonorProgram#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_820b82b91caf4802afbc4eca",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Token Enrollment (Static)",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5382527232496496\",\n    \"expiryDate\": \"1025\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"981\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_1d3e88507c0d4294af03b494",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Token Enrollment (Static) Duplicate",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5382527232496496\",\n    \"expiryDate\": \"1025\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"981\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_229cb6b2c06d47f0ab5a9a91",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "TOKEN ENNROLLMENT (CLOUD)",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5382521276286756\",\n    \"expiryDate\": \"1025\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"981\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"cardHolderName\": \"Mani Srini\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_2ff1349345a14fa1a4a3fd35",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "TOKEN ENNROLLMENT DPAN (CLOUD)",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"6186004605241178\",\n    \"expiryDate\": \"0929\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"490\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd80a1f-f13a-42c2-b141-17da8c287765",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_4524d93d32bd4c6ead19826e",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "TOKEN ENNROLLMENT DPAN (CLOUD) Duplicate",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"6186004605241178\",\n    \"expiryDate\": \"0929\",\n    \"consumerId\": \"d241d815-b257-42de-b66f-c0c867485f60\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"490\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd80a1f-f13a-42c2-b141-17da8c287765",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_0d6ca69a588f4f7a86d18002",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "TOKEN ENNROLLMENT (CLOUD) Duplicate check by consumerId",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"6186004605241178\",\n    \"expiryDate\": \"0730\",\n    \"xxoriginalExpiryDate\": \"0932\",\n    \"xxnewExpiryDate\": \"0730\",\n    \"consumerId\": \"22a961ca-9478-4e4b-8b0f-035dc5c71d3147\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"490\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}\n//"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_9a123945d7ef46e1bb9727ba",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "TOKEN ENNROLLMENT (CLOUD) Duplicate check by consumerId kick1",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"6186004605241178\",\n    \"expiryDate\": \"0733\",\n    \"xxoriginalExpiryDate\": \"0932\",\n    \"xxnewExpiryDate\": \"0730\",\n    \"consumerId\": \"23a961ca-9478-6e4b-9b0f-035dc5c71d1145\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"490\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}\n//"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_817f8e7073134b84aa5f6d4b",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "TOKEN ENNROLLMENT (CLOUD) Duplicate check by programid and no consumerid",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"6186004605241178\",\n    \"expiryDate\": \"0730\",\n    \"xxoriginalExpiryDate\": \"0932\",\n    \"xxnewExpiryDate\": \"0730\",\n    \"consumerId\": null,\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"490\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}\n//"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#02",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_230dc0f9c8924e48b990c408",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "TOKEN ENNROLLMENT (CLOUD) Duplicate check by programid and no consumerid kick1",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"6186004605241178\",\n    \"expiryDate\": \"0730\",\n    \"xxoriginalExpiryDate\": \"0932\",\n    \"xxnewExpiryDate\": \"0730\",\n    \"consumerId\": null,\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"490\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}\n//"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#02",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_775d9954b8af4991b248dcdd",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "PAYMENT Account Enrollment (STATIC)",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5382522773711981\",\n    \"expiryDate\": \"1025\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"981\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"cardHolderName\": \"PBA Static\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_35307bd523cb4e2f95182cce",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "PAYMENT Account Enrollment (STATIC) Duplicate",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5382522773711981\",\n    \"expiryDate\": \"1025\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"981\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"cardHolderName\": \"PBA Static\",\n    \"consumerId\": \"cecd032d-92c5-42e0-b981-c59110309029\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_40df7de311234742841d797e",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "PAYMENT ACCOUNT Enrollment (CLOUD)",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5382527232496496\",\n    \"expiryDate\": \"1025\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"981\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"cardHolderName\": \"pba cloud\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_986afc1151d84cd692e8b513",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Migrate Token Enrollment",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DAPLMC0000114393edf01e1db4e647b28230d3f84349385c\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"enrollmentType\": \"MIGRATE_TOKEN\",\n    \"cardHolderName\": \"migrate token\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_b4993ab431494dcfad4da099",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Push Account Receipt Enrollment",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Peter Parker\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"pushAccountReceipt\": \"MCC-STL-E9F77A33-DC79-4339-B091-58B20061CHEZ\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_4cf6852447b04aae810c5e4b",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "BFC FPAN_MULTI_TOKEN",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumber\": \"5207990374926139\",\n    \"expiryDate\": \"0829\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"Multi Token\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50136141297\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_986d94d20bb04f7fb25caada",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "BFC FPAN_MULTI_TOKEN Copy",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumber\": \"5207990374926139\",\n    \"expiryDate\": \"0829\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"Multi Token\",\n    \"consumerId\": null,\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50136141297\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_90be12bc07e84fb5a6e70e8d",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Wallet Enroll",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/wallets/enroll",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"card\": {\n        \"prefix\": \"512035\",\n        \"suffix\": \"7782\",\n        \"productConfig\": {\n            \"cardArtUrl\": \"https://stage.assets.mastercard.com/card-art/combined-image-asset/MyBank-mastercard.png\",\n            \"shortDescription\": \"mastercard\"\n        }\n    },\n    \"consumer\": {\n        \"id\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n    },\n    \"metadata\": {\n        \"countryInfo\": {\n            \"format\": \"ALPHA2\",\n            \"code\": \"US\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/wallets/enroll",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_7771cd6c60e24c598d009ed5",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Non-Tokenized-FPAN",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5400170000000030\",\n    \"expiryDate\": \"0824\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cardHolderName\": \"Auth Method\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "4e5eef8e-712d-4cdf-8949-92e545077b20_1to1fpan",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_658ad04f28924f11a78982ec",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Non-Tokenized-forceful-enrollAsFpanOnly=true",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5207980059728876\",\n    \"expiryDate\": \"1026\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"enrollAsFpanOnly\": true,\n    \"tokenType\": \"CLOUD\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_a8b7e60065e244f4a635a32d",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Poly Transaction Credentials (UCAFV0) for FPAN enrolled card",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/polytransactioncredentials",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"iMrA892mQ0-LVn_GryFGNA000000000000US\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            }\n        }\n    ],\n    \"fpanRequested\": false,\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/polytransactioncredentials",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT#E2E-Manitoba-direct#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_2bd93ebdade84225ab3fee93",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Poly Transaction Credentials (UCAFV0) for Migrated card",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/polytransactioncredentials",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"vz-4uAo7RQiRpSAayMdzYw000000000000US\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            }\n        }\n    ],\n    \"fpanRequested\": false,\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/polytransactioncredentials",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_9397b9d5bc8248d2be003a9e",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Poly Transaction Credentials ALL-IN-ONE for FPAN enroll card",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/polytransactioncredentials",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"G_s3EVcmRiSO1gSFYLC9BQ000000000000US\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        },\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12339\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/polytransactioncredentials",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_a27af90445c34f6bb4853883",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Poly Transaction Credentials ALL-IN-ONE for Migrated card",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/polytransactioncredentials",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"vz-4uAo7RQiRpSAayMdzYw000000000000US\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        },\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12339\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/polytransactioncredentials",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_e921c67c6f5948cba1f3d21c",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "PolyTransaction Credentials (UCAFV3) for FPAN enroll card",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/polytransactioncredentials",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"se1z3w1YSFaTOOvODQTjsA000000000000US\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            }\n        }\n    ],\n    \"fpanRequested\": false,\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/polytransactioncredentials",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_9c5e03965d304905a45e63bf",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "PolyTransaction Credentials (UCAFV3) for Migrate card",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/polytransactioncredentials",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"vz-4uAo7RQiRpSAayMdzYw000000000000US\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            }\n        }\n    ],\n    \"fpanRequested\": false,\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\n}\n// TOKEN/TUR must be avilable in simulator before you run this request"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/polytransactioncredentials",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "1292ef56-8949-4e29-858f-4424b40ec0a4",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_effdc52f8ddc4142a9a3a721",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "PolyTransaction Credentials (UCAFV3) for Push Account Receipt",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/polytransactioncredentials",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"gGesurKXShSIMSZIGOvNtw000000000000US\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            }\n        }\n    ],\n    \"fpanRequested\": false,\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\n}\n// TOKEN/TUR must be avilable in simulator before you run this request"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/polytransactioncredentials",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "1292ef56-8949-4e29-858f-4424b40ec0a4",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,is-priority-get-rateLimiter-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_1d14ac2b4ba94be6b32f0220",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Get CardByCardID",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/dl_mleD8T1iUwQbezoBiWA000000000000US",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}JnsIUMtUTgyzAlbTpumyOg000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "silentverify-for-jenny-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_d441b0fa03ca43c1897459a5",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Get CardByCardID Copy",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/a9c20e7f-efca-4617-9d9d-1885a1947b11?accountInformation=token-cloud",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "token-cloud"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}JnsIUMtUTgyzAlbTpumyOg000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "silentverify-for-jenny-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_dd0213aebfc648f497f1a60e",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "DELETE by ConsumerID",
      "method": "DELETE",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/delete/consumer/22a961ca-9478-4e4b-8b0f-035dc5c71d3144",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/delete/consumer/22a961ca-9478-4e4b-8b0f-035dc5c71d3144",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "mani-e2e-delete-consumer-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_54f2903ff487412aabdf25bc",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Delete by TUR",
      "method": "DELETE",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card?tokenUniqueReference=DM4MMC0000000007HCACL8F4UPOEYQAXZICF8YYF1LIPHDUFG",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "tokenUniqueReference",
          "value": "DM4MMC0000000007HCACL8F4UPOEYQAXZICF8YYF1LIPHDUFG"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd80a1f-f13a-42c2-b141-17da8c287765",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_0111c975366c42c7a88d813d",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "Update consent",
      "method": "PUT",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/card/x0d7NnL4TTaBCGK1onS75g000000000000US",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"method\": \"CONSENT\",\n    \"type\": \"TEXT_TO_CARDHOLDER_NUMBER\",\n    \"authTime\": \"2023-11-28T00:18:18.106Z\",\n    \"status\": \"ISS_AUTH_VERIFIED\",\n    \"additionalAuthData\": {\n        \"transactionReferenceId\": \" dbc55444496a4896b41c5d5e2dd111c5\",\n        \"responseCode\": \"SUCCESS\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/x0d7NnL4TTaBCGK1onS75g000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd80a1f-f13a-42c2-b141-17da8c287765",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_2fa737739de94984b90a66bc",
      "_type": "request",
      "parentId": "fld_5b0795bba079467aa68f0db5",
      "name": "UPDATE-BATCH by TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/paymentinstrument/src/1/0/batch/card/update",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"test-3\",\n    \"items\": [\n        {\n            \"identity\": {\n                \"id\": \"test-id-3\",\n                \"digitalData\": \"DM4MMC000000000BYQT2AANN2NBMYT75RLYGGFO3GUTHI7ALI\",\n                \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n                \"additionalData\": {\n                    \"key1\": \"value1\",\n                    \"key2\": \"value2\"\n                }\n            },\n            \"data\": {\n                \"cardId\": \"Mt-LO95pR36gbT787hmWsQ000000000000US\",\n                \"consumerId\": \"98635f52-210f-4673-b47e-cd21efac2988\",\n                \"tokenMetaData\": {\n                    \"productConfig\": {\n                        \"brandLogoAssetId\": \"4kcymbr6b2kkb6sesdct\",\n                        \"isCoBranded\": \"false\",\n                        \"foregroundColor\": \"FF0000\",\n                        \"customerServiceUrl\": \"www.citibank.com\",\n                        \"termsAndConditionsUrl\": \"https: //test.com\" ,\n                        \"issuerProductConfigCode\": \"TESTCONFIG\",\n                        \"issuerName\": \"Citi Bank\",\n                        \"shortDescription\": \"Citi Bank Product Configuration v2 mode\",\n                        \"longDescription\": \"v2 Citi Bank Product Configuration for Manitoba over the MDES platform\",\n                        \"cardBackgroundCombinedAssetId\": \"d06f8439-3cb3-47a8-80ae-ce4630db2b8f\"\n                    }\n                }\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/update",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/update\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"update\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_6d9309f68f9a483c8e554ece",
      "_type": "request",
      "parentId": "fld_5478f954082241f2aed69b68",
      "name": "Local",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-local-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Env-URLs\nconst envInstanceURL = \"http://localhost:8080\";\n// const envInstanceURL = \"https://src-pi-core-service-v2-latency-blue.apps.stl.pcfstage00.mastercard.int\";\n// const envInstanceURL = \"https://src-perf-pi-core-service-v2-blue.apps.stl.pcfstage00.mastercard.int\";\n// const envInstanceURL = \"https://src-perf-pi-core-service-v2-fix-blue.apps.stl.pcfstage00.mastercard.int\";\ninsomnia.environment.set('pi-core-service_cardservice-local-url', envInstanceURL);\n\ninsomnia.environment.set('pi-core-service_url', insomnia.environment.get('pi-core-service_cardservice-local-url'));\ninsomnia.environment.set('pi-core-service_env', \"localhost\");\n\n//Header data\n// insomnia.environment.set('pi-core-service_program-id', \"SRC\");\ninsomnia.environment.set('pi-core-service_name-space', \"com.mastercard.digital.platform\");\ninsomnia.environment.set('pi-core-service_service-name', \"card-services\");\n//insomnia.environment.set('pi-core-service_service-method', \"POST\");\ninsomnia.environment.set('pi-core-service_correlation-id', \"3cd80a1f-f13a-42c2-b141-17da8c287765\");\ninsomnia.environment.set('pi-core-service_SYNAPSE-TARGET-TAG', \"34F4A04B\");\n\nconst primaryAccountNumber= \"5455031500000587\"    //\"5406940002010581\"//\"5455031509212647\"; //5196670173524193\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', primaryAccountNumber);\n\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', \"5207980059728876\");                 //stage variables\ninsomnia.environment.set('pi-core-service_primaryAccountNumber-non-tokenized', \"5400170000064598\");\n\ninsomnia.environment.set('pi-core-service_card-art-url', \"https://blue-src-stage-paymentinstrument-services.apps.stl.pcfstage00.mastercard.int\"); //stage for card-art???\n\n// const donerPrimaryAccountNumber= \"5204731620064520\";\n// insomnia.environment.set('pi-core-service_donerPrimaryAccountNumber', donerPrimaryAccountNumber);",
      "afterResponseScript": ""
    },
    {
      "_id": "req_9547a949e45a44a4a8b25087",
      "_type": "request",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "Set downstream mock header",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-stage-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// Ref: https://confluence.mastercard.int/pages/viewpage.action?pageId=530418916\n// Examples: \n// x-src-mocks-manager=all-mock      // x-src-mocks-manager=all-live\n// x-src-mocks-manager=mdes          // x-src-mocks-manager=mdes,caas,bnc\n// Stage includes mock, live\n// ITF is only live\n\n//Invoke LIVE/MOCK endpoints for ALL services\n insomnia.environment.set('pi-core-service_x-src-mocks-manager', \"all-live\");  // \"all-mock\"\n// insomnia.environment.set('pi-core-service_x-src-mocks-manager', \"all-mock\");\n\n// Invoke MOCK endpoints for MDES service\n// insomnia.environment.set('pi-core-service_x-src-mocks-manager', \"mdes\");\n// Invoke MOCK endpoints for CAAS and BNC service\n// insomnia.environment.set('pi-core-service_x-src-mocks-manager', \"caas,bnc\");\n// Invoke MOCK endpoints for BNC service\n// insomnia.environment.set('pi-core-service_x-src-mocks-manager', \"bnc\");\n\n//bnc does not work with the header, bnc is based on stage config, not header\n//caas, mdes work with header config",
      "afterResponseScript": ""
    },
    {
      "_id": "req_80cdfd52191441ce8f5091a6",
      "_type": "request",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "Set dynamic features flags",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-stage-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// insomnia.environment.set('pi-core-service_x-src-mocks-manager', \"all-live,is-refactored-data-services-enabled=true\");\n\n// insomnia.environment.set('pi-core-service_x-src-mocks-manager', \"all-mock,is-refactored-data-services-enabled=true\");\n\n// insomnia.environment.set('pi-core-service_x-src-mocks-manager', \"all-live,is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true\");\n\n// insomnia.environment.set('pi-core-service_x-src-mocks-manager', \"all-mock,is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true\");\n\ninsomnia.environment.set('pi-core-service_x-src-mocks-manager', \"is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,is-sync-v2-data-service-enabled=false,is-v2-critical-path-resolver-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false\");\n\n// insomnia.environment.set('pi-core-service_x-src-mocks-manager', //     \"is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,is-sync-v2-data-service-enabled=true,is-v2-critical-path-resolver-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false\");\n\n\n// insomnia.environment.set('pi-core-service_x-src-mocks-manager', \"all-mock,is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true\");\n\n//insomnia.environment.set('pi-core-service_x-src-mocks-manager', \"all-live\");\n// insomnia.environment.set('pi-core-service_x-src-mocks-manager', \"all-mock\");",
      "afterResponseScript": ""
    },
    {
      "_id": "req_1d7da0fa3285450f92f4b87b",
      "_type": "request",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "Set program-id",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-stage-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\ninsomnia.environment.set('pi-core-service_program-id', \"SRC\"); //Click2Pay\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_MERCHANT_OBO#ADYEN_NV-BORDEAUX_INDEX_LTD#01\");\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_MERCHANT_OBO#M4S_MTF_TESTING-M4S_MERCHANT_2#01\");\r\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#FACEBOOK_PAYMENTS_ECOMMERCE-UPN3#01\"); //cloud\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"AUTOFILL#Google_Inc-GOOGLE_e2e_perf#01\"); //BFF static google\r\n\r\n\r\n\r\n//insomnia.environment.set('pi-core-service_program-id', \"AUTOFILL#Microsoft_Autofill#01\"); //static\r\n\r\n\r\n//insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_MERCHANT#PPTESTPROGRAM#01\"); //cloud\r\n//insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_MERCHANT#PPWALLETMDESTEST#01\"); //cloud\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\"); //cloud\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\");      //SRC4X\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#Manitoba-E2EDonorProgram#01\");\r\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#ApplePayCert#01\");\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"AUTOFILL#Google_Inc-GOOGLE_e2e_stage#01\");    //BFF\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01\"); // CFT\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"\");\r\n\r\n//insomnia.environment.set('pi-core-service_program-id', \"C2P#SAMSUNG_WALLET#01\"); //\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_MERCHANT_OBO#ADYEN_NV-BORDEAUX_INDEX_LTD#01\");",
      "afterResponseScript": ""
    },
    {
      "_id": "req_018dabad3c494cf38c584afd",
      "_type": "request",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "Set TRID tokenRequestorId",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-stage-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Zoe's orginal TRID value\r\n//insomnia.environment.set('pi-core-service_tokenRequestorId', \"50123197928\");\r\ninsomnia.environment.set('pi-core-service_fpanCloudTokenRequesterId', \"50123197928\");\r\ninsomnia.environment.set('pi-core-service_fpanStaticTokenRequesterId', \"50136141297\");\r\ninsomnia.environment.set('pi-core-service_fpanStaticYellowTokenRequesterId', \"50127530524\");\r\ninsomnia.environment.set('pi-core-service_appleCloudtokenRequestorId', \"50122967937\");\r\ninsomnia.environment.set('pi-core-service_appleStatictokenRequestorId', \"50126482381\");\r\n\r\n\r\ninsomnia.environment.set('pi-core-service_fpanE2EProgramId', \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\");\r\ninsomnia.environment.set('pi-core-service_fpanStaticProgramId', \"AUTOFILL#Google_Inc-GOOGLE_e2e_itf#01\");\r\ninsomnia.environment.set('pi-core-service_appleCloudProgramId', \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\");\r\n\r\n/*\r\n    Static TRID\r\n    ProgramId: AUTOFILL#Google_Inc-GOOGLE_e2e_itf#01\r\n    TRID: 50136141297 \r\n*/\r\n//insomnia.environment.set('pi-core-service_tokenRequestorId', \"50136141297\");\r\n\r\n\r\n/*\r\n    APPLE TRID\r\n    ProgramId: AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\r\n    TRID: 50122967937 \r\n*/\r\n//insomnia.environment.set('pi-core-service_tokenRequestorId', \"50122967937\");\r\n\r\n\r\n// insomnia.environment.set('pi-core-service_tokenRequestorId', \"50108861227\"); // BFF static TUR\r\n\r\n// apple apan\r\n//insomnia.environment.set('pi-core-service_tokenRequestorId', \"50191159210\"); \r\n\r\n//donor trids starts\r\n//e2e apple\r\n// insomnia.environment.set('pi-core-service_donorTokenRequestorId', \"50122967937\"); \r\n// dev apple\r\n//insomnia.environment.set('pi-core-service_donorTokenRequestorId', \"50126482381\");\r\n//donor trids ends\r\n\r\n\r\n\r\n//https://confluence.mastercard.int/pages/viewpage.action?pageId=508054665#AppleCloudTokenMilestone1TestData&ProgramConfiguration-E2ETRID.1",
      "afterResponseScript": ""
    },
    {
      "_id": "req_bf25fd23ef4e40d69fa3337c",
      "_type": "request",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "Set data for runner",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-stage-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Zoe's orginal TRID value\r\n//insomnia.environment.set('pi-core-service_tokenRequestorId', \"50123197928\");\r\ninsomnia.environment.set('pi-core-service_fpanCloudTokenRequesterId', \"50123197928\");\r\ninsomnia.environment.set('pi-core-service_fpanStaticTokenRequesterId', \"50136141297\");\r\ninsomnia.environment.set('pi-core-service_fpanStaticYellowTokenRequesterId', \"50127530524\");\r\ninsomnia.environment.set('pi-core-service_appleCloudtokenRequestorId', \"50122967937\");\r\ninsomnia.environment.set('pi-core-service_appleStatictokenRequestorId', \"50126482381\");\r\n\r\ninsomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\");\r\ninsomnia.environment.set('pi-core-service_fpanE2EProgramId', \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\");\r\ninsomnia.environment.set('pi-core-service_fpanStaticProgramId', \"AUTOFILL#Google_Inc-GOOGLE_e2e_itf#01\");\r\ninsomnia.environment.set('pi-core-service_appleCloudProgramId', \"AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\");\r\n\r\ninsomnia.environment.set('pi-core-service_x-src-mocks-manager', \"is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false\");\r\n\r\n//50136141297 static\r\n//50127530524 static works\r\n//50123197928 cloud clorks\r\n//50122967937\r\n//50126482381\r\n/*\r\n    Static TRID\r\n    ProgramId: AUTOFILL#Google_Inc-GOOGLE_e2e_itf#01\r\n    TRID: 50136141297 \r\n*/\r\n//insomnia.environment.set('pi-core-service_tokenRequestorId', \"50136141297\");\r\n\r\n\r\n/*\r\n    APPLE TRID\r\n    ProgramId: AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01\r\n    TRID: 50122967937 \r\n*/\r\n//insomnia.environment.set('pi-core-service_tokenRequestorId', \"50122967937\");\r\n\r\n\r\n// insomnia.environment.set('pi-core-service_tokenRequestorId', \"50108861227\"); // BFF static TUR\r\n\r\n// apple apan\r\n//insomnia.environment.set('pi-core-service_tokenRequestorId', \"50191159210\"); \r\n\r\n//donor trids starts\r\n//e2e apple\r\n// insomnia.environment.set('pi-core-service_donorTokenRequestorId', \"50122967937\"); \r\n// dev apple\r\n//insomnia.environment.set('pi-core-service_donorTokenRequestorId', \"50126482381\");\r\n//donor trids ends\r\n\r\n\r\n\r\n//https://confluence.mastercard.int/pages/viewpage.action?pageId=508054665#AppleCloudTokenMilestone1TestData&ProgramConfiguration-E2ETRID.1",
      "afterResponseScript": ""
    },
    {
      "_id": "req_4de462d9a7eb42e6a95fa519",
      "_type": "request",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "Set consumerId and program-id",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-stage-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// insomnia.environment.set('pi-core-service_updatedConsumerId', \"person12345@consumer.com\");\n\ninsomnia.environment.set('pi-core-service_consumerId', \"consumer12345x9@consumer.com\");\ninsomnia.environment.set('pi-core-service_program-id', \"person12345x9@consumer.com\");",
      "afterResponseScript": ""
    },
    {
      "_id": "req_7c7a074214144e749974af86",
      "_type": "request",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "Set collectionVariables Change",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-stage-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// insomnia.environment.set('pi-core-service_cardId', \"nN0QyAu_RPecMxXNbe4VQg000000000000GB\");\n// insomnia.environment.set('pi-core-service_consumerId', \"9b3f3ea8-349d-4eca-8e04-275912722627\");\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_MERCHANT#EBAYTOKENIZATION#01\");\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', \"DM4MMC0000144136f0499bb16afe47fdb3af85b94102ef8d\");\n\n//DM4MMC1US000000030c332aa1e0f49408cb7ec96a3fa0c6b tur for discrepency between legacy and v2 on token enroll fpanexpiration\ninsomnia.environment.set('pi-core-service_program-id', \"SRC\");\n\ninsomnia.environment.set('pi-core-service_cardId', \"N_Vg-BPNQKqrLU5QLcGkvA000000000000AR\");\ninsomnia.environment.set('pi-core-service_consumerId', \"07a55a33-328c-4c2b-97a2-12ff5bb1fe18\");\n\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', \"DM4MMC000000000FWZAUNMMB1BZND1JR5Q3ZQ1LAVUWEBBVTM\");\n insomnia.environment.set('pi-core-service_staticTokenUniqueReference', \"DM4MMC000000000RTNAPXEC7RLNRJDGEDX3HUP9AWMDYUJPYU\");\n\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', \"changeme\");\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', \"changeme\");\n\n//uKUCWc9mSlyefUt_PjXnsA000000000000US -bfc",
      "afterResponseScript": ""
    },
    {
      "_id": "req_6cbb5bd5efda4603ac1bb28f",
      "_type": "request",
      "parentId": "fld_1fac18dbb7784a1ebab07691",
      "name": "Set new correlation id",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-stage-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "function uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n// previous hard-coded transactionId\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\n\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\n\nconsole.log(insomnia.environment.get('pi-core-service_correlation-id'));"
    },
    {
      "_id": "fld_0fbc09d84c1c41b2b06828f0",
      "_type": "request_group",
      "parentId": "fld_1d41a75ff2934f6bb41884c9",
      "name": "APIs"
    },
    {
      "_id": "fld_a9aeb0086abc4a2b9c405c3d",
      "_type": "request_group",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Push Account Receipt Flow"
    },
    {
      "_id": "fld_9b305199d1d94f228edc01cd",
      "_type": "request_group",
      "parentId": "fld_a9aeb0086abc4a2b9c405c3d",
      "name": "Generate-Push Account Receipt"
    },
    {
      "_id": "fld_1c1e645fcc294221851be102",
      "_type": "request_group",
      "parentId": "fld_9b305199d1d94f228edc01cd",
      "name": "itf"
    },
    {
      "_id": "fld_05277e466f714dc799a3456f",
      "_type": "request_group",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "url-blue-src-stage-itt"
    },
    {
      "_id": "req_6008e0b7c6fe4a4bb9b658ea",
      "_type": "request",
      "parentId": "fld_05277e466f714dc799a3456f",
      "name": "1. src-stage-itt-token-connect-Generate Token for accounts-TRID-50191159210-accessToken-65EAB0D0",
      "method": "POST",
      "url": "https://blue-src-stage-itt-token-connect-services.apps.stl.pcfstage00.mastercard.int/itt/api/public/validate/token?",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"accessToken\": \"65EAB0D0\",\n    \"environmentId\": \"ITF\",\n    \"trid\": \"50191159210\"\n}\n/*\nPull All cards from ITT tool with cardAccountId and maskedCardAccountNumber. You will see all of these cards in UI tool as well.\n*/"
      },
      "parameters": [
        {
          "name": "",
          "value": null
        },
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n    var jsonData = insomnia.response.json();\n    insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    var singlecardAccountDetail = _.sample(jsonData.cardAccountDetails);\n    //Pick random singlecardAccountDetail from cardAccountDetails\n    insomnia.environment.set('pi-core-service_cardAccountId', singlecardAccountDetail.cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', singlecardAccountDetail.maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', singlecardAccountDetail.tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', singlecardAccountDetail.type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', singlecardAccountDetail.expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', singlecardAccountDetail.expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', singlecardAccountDetail.brand);\n\n    //Note: Pick specific index based singlecardAccountDetail from cardAccountDetails\n    /*\n    insomnia.environment.set('pi-core-service_cardAccountId', jsonData.cardAccountDetails[7].cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', jsonData.cardAccountDetails[7].maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', jsonData.cardAccountDetails[7].tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', jsonData.cardAccountDetails[7].type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', jsonData.cardAccountDetails[7].expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', jsonData.cardAccountDetails[7].expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', jsonData.cardAccountDetails[7].brand); \n    */\n });\n\nconsole.log(`cardAccountId: ${insomnia.environment.get('pi-core-service_cardAccountId')}, \nmaskedCardAccountNumber: ${insomnia.environment.get('pi-core-service_maskedCardAccountNumber')},\ntokenOutcome: ${insomnia.environment.get('pi-core-service_tokenOutcome')},\nparType: ${insomnia.environment.get('pi-core-service_parType')},\nparExpiryMonth: ${insomnia.environment.get('pi-core-service_parExpiryMonth')},\nparExpiryYear: ${insomnia.environment.get('pi-core-service_parExpiryYear')},\nparBrand: ${insomnia.environment.get('pi-core-service_parBrand')},\n`);"
    },
    {
      "_id": "req_6747f4ff3fb1475f954b1c63",
      "_type": "request",
      "parentId": "fld_05277e466f714dc799a3456f",
      "name": "1. src-stage-itt-token-connect-TRID-50123197928-accessToken-a20b9dea",
      "method": "POST",
      "url": "https://blue-src-stage-itt-token-connect-services.apps.stl.pcfstage00.mastercard.int/itt/api/public/validate/token?",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"accessToken\": \"a20b9dea\",\n    \"environmentId\": \"ITF\",\n    \"trid\": \"50123197928\"\n}\n/*\nPull All cards from ITT tool with cardAccountId and maskedCardAccountNumber. You will see all of these cards in UI tool as well.\n*/"
      },
      "parameters": [
        {
          "name": "",
          "value": null
        },
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n    var jsonData = insomnia.response.json();\n    insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    var singlecardAccountDetail = _.sample(jsonData.cardAccountDetails);\n    //Pick random singlecardAccountDetail from cardAccountDetails\n    insomnia.environment.set('pi-core-service_cardAccountId', singlecardAccountDetail.cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', singlecardAccountDetail.maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', singlecardAccountDetail.tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', singlecardAccountDetail.type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', singlecardAccountDetail.expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', singlecardAccountDetail.expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', singlecardAccountDetail.brand);\n\n    //Note: Pick specific index based singlecardAccountDetail from cardAccountDetails\n    /*\n    insomnia.environment.set('pi-core-service_cardAccountId', jsonData.cardAccountDetails[7].cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', jsonData.cardAccountDetails[7].maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', jsonData.cardAccountDetails[7].tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', jsonData.cardAccountDetails[7].type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', jsonData.cardAccountDetails[7].expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', jsonData.cardAccountDetails[7].expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', jsonData.cardAccountDetails[7].brand); \n    */\n });\n\nconsole.log(`cardAccountId: ${insomnia.environment.get('pi-core-service_cardAccountId')}, \nmaskedCardAccountNumber: ${insomnia.environment.get('pi-core-service_maskedCardAccountNumber')},\ntokenOutcome: ${insomnia.environment.get('pi-core-service_tokenOutcome')},\nparType: ${insomnia.environment.get('pi-core-service_parType')},\nparExpiryMonth: ${insomnia.environment.get('pi-core-service_parExpiryMonth')},\nparExpiryYear: ${insomnia.environment.get('pi-core-service_parExpiryYear')},\nparBrand: ${insomnia.environment.get('pi-core-service_parBrand')},\n`);"
    },
    {
      "_id": "req_367ca600e3eb4dd08d351f60",
      "_type": "request",
      "parentId": "fld_05277e466f714dc799a3456f",
      "name": "1. src-stage-itt-token-connect-Generate Token for accounts-TRID-50126012022-accessToken-f0e1d8ce",
      "method": "POST",
      "url": "https://blue-src-stage-itt-token-connect-services.apps.stl.pcfstage00.mastercard.int/itt/api/public/validate/token?",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"accessToken\": \"f0e1d8ce\",\n    \"environmentId\": \"ITF\",\n    \"trid\": \"50126012022\"\n}\n/*\nPull All cards from ITT tool with cardAccountId and maskedCardAccountNumber. You will see all of these cards in UI tool as well.\n*/"
      },
      "parameters": [
        {
          "name": "",
          "value": null
        },
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n    var jsonData = insomnia.response.json();\n    insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    var singlecardAccountDetail = _.sample(jsonData.cardAccountDetails);\n    //Pick random singlecardAccountDetail from cardAccountDetails\n    insomnia.environment.set('pi-core-service_cardAccountId', singlecardAccountDetail.cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', singlecardAccountDetail.maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', singlecardAccountDetail.tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', singlecardAccountDetail.type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', singlecardAccountDetail.expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', singlecardAccountDetail.expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', singlecardAccountDetail.brand);\n\n    //Note: Pick specific index based singlecardAccountDetail from cardAccountDetails\n    /*\n    insomnia.environment.set('pi-core-service_cardAccountId', jsonData.cardAccountDetails[7].cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', jsonData.cardAccountDetails[7].maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', jsonData.cardAccountDetails[7].tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', jsonData.cardAccountDetails[7].type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', jsonData.cardAccountDetails[7].expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', jsonData.cardAccountDetails[7].expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', jsonData.cardAccountDetails[7].brand); \n    */\n });\n\nconsole.log(`cardAccountId: ${insomnia.environment.get('pi-core-service_cardAccountId')}, \nmaskedCardAccountNumber: ${insomnia.environment.get('pi-core-service_maskedCardAccountNumber')},\ntokenOutcome: ${insomnia.environment.get('pi-core-service_tokenOutcome')},\nparType: ${insomnia.environment.get('pi-core-service_parType')},\nparExpiryMonth: ${insomnia.environment.get('pi-core-service_parExpiryMonth')},\nparExpiryYear: ${insomnia.environment.get('pi-core-service_parExpiryYear')},\nparBrand: ${insomnia.environment.get('pi-core-service_parBrand')},\n`);"
    },
    {
      "_id": "req_3ad5a07c841748f8b7e78a6b",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "ITF cards on boarded by ME",
      "method": "POST",
      "url": null,
      "body": {
        "mimeType": "application/json",
        "text": "Below PANS onboarded into ITT tool\n\nBIN\t                PAN\n2221190000000000000\t2221190428633331\n2221190000000000000\t2221197497561111\n5337838950000000000\t5337838958140333\n5337838950000000000\t5337838957638055"
      },
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_915f30753ae54d4f9d65a8d0",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "[Check URL] 1. Generate Token for accounts-TRID-50120022025-accessToken-f0351805",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/validate/token?",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"accessToken\": \"f0351805\",\n    \"environmentId\": \"ITF\",\n    \"trid\": \"50120022025\"\n}\n/*\nPull All cards from ITT tool with cardAccountId and maskedCardAccountNumber. You will see all of these cards in UI tool as well.\n*/"
      },
      "parameters": [
        {
          "name": "",
          "value": null
        },
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n    var jsonData = insomnia.response.json();\n    insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    var singlecardAccountDetail = _.sample(jsonData.cardAccountDetails);\n    //Pick random singlecardAccountDetail from cardAccountDetails\n    insomnia.environment.set('pi-core-service_cardAccountId', singlecardAccountDetail.cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', singlecardAccountDetail.maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', singlecardAccountDetail.tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', singlecardAccountDetail.type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', singlecardAccountDetail.expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', singlecardAccountDetail.expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', singlecardAccountDetail.brand);\n\n    //Note: Pick specific index based singlecardAccountDetail from cardAccountDetails\n    /*\n    insomnia.environment.set('pi-core-service_cardAccountId', jsonData.cardAccountDetails[7].cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', jsonData.cardAccountDetails[7].maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', jsonData.cardAccountDetails[7].tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', jsonData.cardAccountDetails[7].type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', jsonData.cardAccountDetails[7].expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', jsonData.cardAccountDetails[7].expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', jsonData.cardAccountDetails[7].brand); \n    */\n });\n\nconsole.log(`cardAccountId: ${insomnia.environment.get('pi-core-service_cardAccountId')}, \nmaskedCardAccountNumber: ${insomnia.environment.get('pi-core-service_maskedCardAccountNumber')},\ntokenOutcome: ${insomnia.environment.get('pi-core-service_tokenOutcome')},\nparType: ${insomnia.environment.get('pi-core-service_parType')},\nparExpiryMonth: ${insomnia.environment.get('pi-core-service_parExpiryMonth')},\nparExpiryYear: ${insomnia.environment.get('pi-core-service_parExpiryYear')},\nparBrand: ${insomnia.environment.get('pi-core-service_parBrand')},\n`);"
    },
    {
      "_id": "req_1dc534c49bfd4f74bc1aa032",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "[Check URL] 1. Generate Token for accounts-TRID-50123197928-accessToken-a20b9dea",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/validate/token?",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"accessToken\": \"a20b9dea\",\n    \"environmentId\": \"ITF\",\n    \"trid\": \"50123197928\"\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        },
        {
          "name": "",
          "value": null
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n    var jsonData = insomnia.response.json();\n    insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    var singlecardAccountDetail = _.sample(jsonData.cardAccountDetails);\n    //Pick random singlecardAccountDetail from cardAccountDetails\n    insomnia.environment.set('pi-core-service_cardAccountId', singlecardAccountDetail.cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', singlecardAccountDetail.maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', singlecardAccountDetail.tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', singlecardAccountDetail.type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', singlecardAccountDetail.expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', singlecardAccountDetail.expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', singlecardAccountDetail.brand);\n\n    //Note: Pick specific index based singlecardAccountDetail from cardAccountDetails\n    /*\n    insomnia.environment.set('pi-core-service_cardAccountId', jsonData.cardAccountDetails[7].cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', jsonData.cardAccountDetails[7].maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', jsonData.cardAccountDetails[7].tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', jsonData.cardAccountDetails[7].type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', jsonData.cardAccountDetails[7].expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', jsonData.cardAccountDetails[7].expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', jsonData.cardAccountDetails[7].brand); \n    */\n });\n\nconsole.log(`cardAccountId: ${insomnia.environment.get('pi-core-service_cardAccountId')}, \nmaskedCardAccountNumber: ${insomnia.environment.get('pi-core-service_maskedCardAccountNumber')},\ntokenOutcome: ${insomnia.environment.get('pi-core-service_tokenOutcome')},\nparType: ${insomnia.environment.get('pi-core-service_parType')},\nparExpiryMonth: ${insomnia.environment.get('pi-core-service_parExpiryMonth')},\nparExpiryYear: ${insomnia.environment.get('pi-core-service_parExpiryYear')},\nparBrand: ${insomnia.environment.get('pi-core-service_parBrand')},\n`);"
    },
    {
      "_id": "req_072fd32467644e71930e22bc",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "[NOT Working] 1. Generate Token for accounts TRID-50191159210-accessToken-65EAB0D0",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/validate/token?",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"accessToken\": \"65EAB0D0\",\n    \"environmentId\": \"Stage\",\n    \"trid\": \"50191159210\"\n}"
      },
      "parameters": [
        {
          "name": "",
          "value": null
        },
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n   //  insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    \n    //Array in response body has multiple options for cardAccount\n    insomnia.environment.set('pi-core-service_cardAccountId', jsonData.cardAccountDetails[7].cardAccountId);\n });"
    },
    {
      "_id": "req_136562e9e7ff41d3bf64a6c3",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "[NOT Working] 1. Generate Token for accounts TRID-50126012022-accessToken-f0e1d8ce",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/validate/token?",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"accessToken\": \"f0e1d8ce\",\n    \"environmentId\": \"Stage\",\n    \"trid\": \"50126012022\"\n}"
      },
      "parameters": [
        {
          "name": "",
          "value": null
        },
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n   //  insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    \n    //Array in response body has multiple options for cardAccount\n    insomnia.environment.set('pi-core-service_cardAccountId', jsonData.cardAccountDetails[7].cardAccountId);\n });"
    },
    {
      "_id": "req_fd29394a63974749ab478478",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "2. Generate PushAccountReceiptNumber-50123197928 - single",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/push/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\"environmentId\": \"ITF\",\n    \"selectedPushMethod\": \"WEB\",\n    \"trid\": \"50123197928\",\n    \"cardHolderData\": {\n        \"name\": \"John Doe\",\n        \"billingAddress\": {\n            \"line1\": \"10 Sunflower Avenue\",\n            \"line2\": \"Apt. 4B\",\n            \"city\": \"St. Louis\",\n            \"countrySubdivision\": \"MO\",\n            \"postalCode\": \"61000\",\n            \"country\": \"USA\"\n        },\n        \"emailAddress\": \"john.doe@anymail.com\",\n        \"mobileNumber\": \"+1 234567890\"\n    },\n\"selectedCardAccountDetails\":[\n        {\n            \"cardAccountId\": \"{{ _['pi-core-service_cardAccountId'] }}\",\n            \"maskedCardAccountNumber\": \"{{ _['pi-core-service_maskedCardAccountNumber'] }}\",\n            \"tokenOutcome\": \"{{ _['pi-core-service_tokenOutcome'] }}\",\n            \"type\": \"{{ _['pi-core-service_parType'] }}\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"{{ _['pi-core-service_parExpiryMonth'] }}\",\n            \"expiryYear\": \"{{ _['pi-core-service_parExpiryYear'] }}\",\n            \"brand\": \"{{ _['pi-core-service_parBrand'] }}\",\n            \"selectedCard\":true,\n            \"useCardHolderData\":true,\n            \"cardAccountIndex\":1,\n            \"cardIndex\":1,\n            \"selectedType\":\"CARD\"\n        }\n    ]\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        },
        {
          "name": "authToken",
          "value": "{{ _['pi-core-service_authToken'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// Ref: https://confluence.mastercard.int/display/alberta/Token+Issuer+Emulator+Tool+%7C+Public+APIs",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n     insomnia.environment.set('pi-core-service_pushAccountReceipt', jsonData.pushAccountReceipts[0].pushAccountReceipt);\n });"
    },
    {
      "_id": "req_3deb3759892c45998d03aeb1",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "2. Generate PushAccountReceiptNumber-50123197928 - single Copy",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/push/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\"environmentId\": \"ITF\",\n    \"selectedPushMethod\": \"WEB\",\n    \"trid\": \"50123197928\",\n    \"cardHolderData\": {\n        \"name\": \"John Doe\",\n        \"billingAddress\": {\n            \"line1\": \"10 Sunflower Avenue\",\n            \"line2\": \"Apt. 4B\",\n            \"city\": \"St. Louis\",\n            \"countrySubdivision\": \"MO\",\n            \"postalCode\": \"61000\",\n            \"country\": \"USA\"\n        },\n        \"emailAddress\": \"john.doe@anymail.com\",\n        \"mobileNumber\": \"+1 234567890\"\n    },\n\"selectedCardAccountDetails\":[\n        {\n            \"cardAccountId\": \"{{ _['pi-core-service_cardAccountId'] }}\",\n            \"maskedCardAccountNumber\": \"{{ _['pi-core-service_maskedCardAccountNumber'] }}\",\n            \"tokenOutcome\": \"{{ _['pi-core-service_tokenOutcome'] }}\",\n            \"type\": \"{{ _['pi-core-service_parType'] }}\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"{{ _['pi-core-service_parExpiryMonth'] }}\",\n            \"expiryYear\": \"{{ _['pi-core-service_parExpiryYear'] }}\",\n            \"brand\": \"{{ _['pi-core-service_parBrand'] }}\",\n            \"selectedCard\":true,\n            \"useCardHolderData\":true,\n            \"cardAccountIndex\":1,\n            \"cardIndex\":1,\n            \"selectedType\":\"CARD\"\n        }\n    ]\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        },
        {
          "name": "authToken",
          "value": "{{ _['pi-core-service_authToken'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// Ref: https://confluence.mastercard.int/display/alberta/Token+Issuer+Emulator+Tool+%7C+Public+APIs",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n     insomnia.environment.set('pi-core-service_pushAccountReceipt', jsonData.pushAccountReceipts[0].pushAccountReceipt);\n });"
    },
    {
      "_id": "req_9bb45d34813e4c9886703839",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "2. Generate PushAccountReceiptNumber-50123197928 - static-single hardcoded",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/push/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\"environmentId\": \"ITF\",\n    \"selectedPushMethod\": \"WEB\",\n    \"trid\": \"50123197928\",\n    \"cardHolderData\": {\n        \"name\": \"John Doe\",\n        \"billingAddress\": {\n            \"line1\": \"10 Sunflower Avenue\",\n            \"line2\": \"Apt. 4B\",\n            \"city\": \"St. Louis\",\n            \"countrySubdivision\": \"MO\",\n            \"postalCode\": \"61000\",\n            \"country\": \"USA\"\n        },\n        \"emailAddress\": \"john.doe@anymail.com\",\n        \"mobileNumber\": \"+1 234567890\"\n    },\n\"selectedCardAccountDetails\":[\n       {\n            \"cardAccountId\": \"88181896-0d7a-461e-92dd-103d217aa691\",\n            \"selectedCard\":true,\n            \"useCardHolderData\":true,\n            \"cardAccountIndex\":1,\n            \"cardIndex\":1,\n            \"selectedType\":\"CARD\",\n             \"maskedCardAccountNumber\": \"566837******5663\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"ITA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        }\n    ]\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        },
        {
          "name": "authToken",
          "value": "{{ _['pi-core-service_authToken'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// Ref: https://confluence.mastercard.int/display/alberta/Token+Issuer+Emulator+Tool+%7C+Public+APIs",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n     insomnia.environment.set('pi-core-service_pushAccountReceipt', jsonData.pushAccountReceipts[0].pushAccountReceipt);\n });"
    },
    {
      "_id": "req_78ce68a0d0154f5daee50cf4",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "2. Generate PushAccountReceiptNumber-50123197928 - static-single hardcoded-other-bin-222119",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/push/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"environmentId\": \"ITF\",\n    \"selectedPushMethod\": \"WEB\",\n    \"trid\": \"50123197928\",\n    \"cardHolderData\": {\n        \"name\": \"John Doe\",\n        \"billingAddress\": {\n            \"line1\": \"10 Sunflower Avenue\",\n            \"line2\": \"Apt. 4B\",\n            \"city\": \"St. Louis\",\n            \"countrySubdivision\": \"MO\",\n            \"postalCode\": \"61000\",\n            \"country\": \"USA\"\n        },\n        \"emailAddress\": \"john.doe@anymail.com\",\n        \"mobileNumber\": \"+1 234567890\"\n    },\n    \"selectedCardAccountDetails\": [\n        {\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\",\n            \"cardAccountId\": \"72c105cb-8d0d-4318-96f0-28ea35418d28\",\n            \"maskedCardAccountNumber\": \"222119******1483\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"USA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        }\n    ]\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        },
        {
          "name": "authToken",
          "value": "{{ _['pi-core-service_authToken'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// Ref: https://confluence.mastercard.int/display/alberta/Token+Issuer+Emulator+Tool+%7C+Public+APIs",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n     insomnia.environment.set('pi-core-service_pushAccountReceipt', jsonData.pushAccountReceipts[0].pushAccountReceipt);\n });"
    },
    {
      "_id": "req_4416fff003c24abdb8c9360c",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "2. Generate PushAccountReceiptNumber-50123197928 - array",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/push/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\"environmentId\": \"ITF\",\n    \"selectedPushMethod\": \"WEB\",\n    \"trid\": \"50123197928\",\n    \"cardHolderData\": {\n        \"name\": \"John Doe\",\n        \"billingAddress\": {\n            \"line1\": \"10 Sunflower Avenue\",\n            \"line2\": \"Apt. 4B\",\n            \"city\": \"St. Louis\",\n            \"countrySubdivision\": \"MO\",\n            \"postalCode\": \"61000\",\n            \"country\": \"USA\"\n        },\n        \"emailAddress\": \"john.doe@anymail.com\",\n        \"mobileNumber\": \"+1 234567890\"\n    },\n\"selectedCardAccountDetails\":[\n        {\n            \"cardAccountId\": \"7bdbaa9f-1ed4-4880-a945-c269030a4e89\",\n            \"maskedCardAccountNumber\": \"************7542\",\n            \"tokenOutcome\": \"TOKENIZATION ERROR\",\n            \"type\": \"FAULTY\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"\",\n            \"expiryYear\": \"\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"946c1087-9ffc-4d57-8f93-5551cc1908d5\",\n            \"maskedCardAccountNumber\": \"542415******0381\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"da2815de-52dc-47bb-9f8f-6385ca1e829f\",\n            \"maskedCardAccountNumber\": \"542415******4299\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"94bac4f4-3ac5-45c5-b484-bb46b9b4695c\",\n            \"maskedCardAccountNumber\": \"679997******4598\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"BRA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"f4468d44-1beb-4c8a-8c6c-440af5517caf\",\n            \"maskedCardAccountNumber\": \"679997******0006\",\n            \"tokenOutcome\": \"RED\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"BRA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"5b0f54fd-b027-44b1-a62b-9b979fb5442f\",\n            \"maskedCardAccountNumber\": \"679997******0014\",\n            \"tokenOutcome\": \"RED\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"BRA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"7b0cadca-5128-4ec8-af10-bb4f43025fd9\",\n            \"maskedCardAccountNumber\": \"679997******0022\",\n            \"tokenOutcome\": \"YELLOW\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"BRA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"72d85756-76a9-4d9b-ab1b-67226199af41\",\n            \"maskedCardAccountNumber\": \"679997******4580\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"BRA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"992c7202-f263-4998-9b4b-e5309c75e9c5\",\n            \"maskedCardAccountNumber\": \"520798******7940\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"d87f167b-c01e-4c40-8591-450e358ade8c\",\n            \"maskedCardAccountNumber\": \"529802******9841\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"af18a17b-efba-4a34-91c6-ea25235cebdf\",\n            \"maskedCardAccountNumber\": \"520798******7957\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"328dbf11-b808-40bc-a0f0-7beb15b55a3f\",\n            \"maskedCardAccountNumber\": \"520798******7965\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"9980f23c-4d4a-496f-a90a-bcec52bd285d\",\n            \"maskedCardAccountNumber\": \"520798******7981\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"9337ffa0-0af8-43c3-bf90-69f24f06e8a1\",\n            \"maskedCardAccountNumber\": \"520798******7973\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"2f2a5e6b-29c0-4600-be25-35712283b1c3\",\n            \"maskedCardAccountNumber\": \"520798******7999\",\n            \"tokenOutcome\": \"YELLOW\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"fde03824-b2fc-4930-a39a-ce23ee68f572\",\n            \"maskedCardAccountNumber\": \"520800******0072\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"356a0d55-9ca3-4aba-9748-7e63e7bd0147\",\n            \"maskedCardAccountNumber\": \"222107******0002\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"a9973532-5c49-47bd-8daf-34c00d1b7603\",\n            \"maskedCardAccountNumber\": \"529802******0151\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"a3102be6-b379-45df-9ce7-093f6be26d5d\",\n            \"maskedCardAccountNumber\": \"529802******4595\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"c6a709de-1f1b-4795-9793-8261ae7711f4\",\n            \"maskedCardAccountNumber\": \"519667******9265\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"d94fa966-6c4a-4658-8e79-78334f1f5fae\",\n            \"maskedCardAccountNumber\": \"520798******8005\",\n            \"tokenOutcome\": \"RED\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"05\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"4f7949f0-bf89-4193-b64b-b321e2682da3\",\n            \"maskedCardAccountNumber\": \"639241*********3026\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"NLD\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"30e7f679-fea8-4a84-ab96-12e74e781032\",\n            \"maskedCardAccountNumber\": \"639241*********6349\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"NLD\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"379a096d-a271-43e1-86be-2b40bffcb93a\",\n            \"maskedCardAccountNumber\": \"509510*********7821\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"USA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"914cf809-c163-4f08-adee-bca6ccb6f183\",\n            \"maskedCardAccountNumber\": \"509510*********7371\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"USA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"6a6d58e5-8318-4762-a8b4-d6ce227dc7d0\",\n            \"maskedCardAccountNumber\": \"509512*******8339\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"USA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"67174139-ead3-4718-9d8e-af5903b75e77\",\n            \"maskedCardAccountNumber\": \"509512*******2519\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"USA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"67b7b40e-6b07-4d17-988a-67597723eb98\",\n            \"maskedCardAccountNumber\": \"520799******4583\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"07\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"f3e01e48-45ef-4ab9-84d0-04949b6c88cf\",\n            \"maskedCardAccountNumber\": \"520799******4591\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"07\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"3ca6c926-99bb-4522-b9f9-645c79dc95ed\",\n            \"maskedCardAccountNumber\": \"520798******4595\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"07\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"88181896-0d7a-461e-92dd-103d217aa691\",\n            \"maskedCardAccountNumber\": \"566837******5663\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"ITA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\"\n        },\n        {\n            \"cardAccountId\": \"72c105cb-8d0d-4318-96f0-28ea35418d28\",\n            \"maskedCardAccountNumber\": \"222119******1483\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"USA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"f40a44cd-ca63-4c33-b250-4c284fcafa92\",\n            \"maskedCardAccountNumber\": \"529805******7644\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"BRA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"928e3ea5-7923-4b0f-9c3b-f1c7e3659730\",\n            \"maskedCardAccountNumber\": \"521380******3490\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"BRA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"01e5a4b4-b1e2-489a-abf8-342bb7d4e2ea\",\n            \"maskedCardAccountNumber\": \"533783******1235\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"GBR\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\"\n        },\n        {\n            \"cardAccountId\": \"0d2a4f7a-1d70-4d5c-9708-2f4f0343566c\",\n            \"maskedCardAccountNumber\": \"509512******0570\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"USA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"24\",\n            \"brand\": \"MAESTRO\"\n        }\n    ]\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        },
        {
          "name": "authToken",
          "value": "{{ _['pi-core-service_authToken'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// Ref: https://confluence.mastercard.int/display/alberta/Token+Issuer+Emulator+Tool+%7C+Public+APIs",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n     insomnia.environment.set('pi-core-service_pushAccountReceipt', jsonData.pushAccountReceipts[0].pushAccountReceipt);\n });"
    },
    {
      "_id": "req_471014658c1a47d490124376",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "2. Generate PushAccountReceiptNumber-50120022025-single",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/push/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\"environmentId\": \"ITF\",\n    \"selectedPushMethod\": \"WEB\",\n    \"trid\": \"50120022025\",\n    \"cardHolderData\": {\n        \"name\": \"John Doe\",\n        \"billingAddress\": {\n            \"line1\": \"10 Sunflower Avenue\",\n            \"line2\": \"Apt. 4B\",\n            \"city\": \"St. Louis\",\n            \"countrySubdivision\": \"MO\",\n            \"postalCode\": \"61000\",\n            \"country\": \"USA\"\n        },\n        \"emailAddress\": \"john.doe@anymail.com\",\n        \"mobileNumber\": \"+1 234567890\"\n    },\n\"selectedCardAccountDetails\":[\n        {\n            \"cardAccountId\": \"{{ _['pi-core-service_cardAccountId'] }}\",\n            \"maskedCardAccountNumber\": \"{{ _['pi-core-service_maskedCardAccountNumber'] }}\",\n            \"tokenOutcome\": \"{{ _['pi-core-service_tokenOutcome'] }}\",\n            \"type\": \"{{ _['pi-core-service_parType'] }}\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"{{ _['pi-core-service_parExpiryMonth'] }}\",\n            \"expiryYear\": \"{{ _['pi-core-service_parExpiryYear'] }}\",\n            \"brand\": \"{{ _['pi-core-service_parBrand'] }}\",\n            \"selectedCard\":true,\n            \"useCardHolderData\":true,\n            \"cardAccountIndex\":1,\n            \"cardIndex\":1,\n            \"selectedType\":\"CARD\"\n        }\n    ]\n}\n\n// Once we generate the token(1. Generate Token), copy above selectedCardAccountDetails data from the 1. Generate Token for accounts response, and update here in the request."
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        },
        {
          "name": "authToken",
          "value": "{{ _['pi-core-service_authToken'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// Ref: https://confluence.mastercard.int/display/alberta/Token+Issuer+Emulator+Tool+%7C+Public+APIs",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n     insomnia.environment.set('pi-core-service_pushAccountReceipt', jsonData.pushAccountReceipts[0].pushAccountReceipt);\n });"
    },
    {
      "_id": "req_567f620ae4bb4e38b327f243",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "2. Generate PushAccountReceipts  - generate receipt number - multi-push-hardcoded",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/push/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"environmentId\": \"ITF\",\n    \"selectedPushMethod\": \"WEB\",\n    \"trid\": \"50123197928\",\n    \"cardHolderData\": {\n        \"name\": \"John Doe\",\n        \"billingAddress\": {\n            \"line1\": \"10 Sunflower Avenue\",\n            \"line2\": \"Apt. 4B\",\n            \"city\": \"St. Louis\",\n            \"countrySubdivision\": \"MO\",\n            \"postalCode\": \"61000\",\n            \"country\": \"USA\"\n        },\n        \"emailAddress\": \"john.doe@anymail.com\",\n        \"mobileNumber\": \"+1 234567890\"\n    },\n    \"selectedCardAccountDetails\": [\n        {\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\",\n            \"cardAccountId\": \"7a842020-ae40-4454-9761-9979a9003cb2\",\n            \"maskedCardAccountNumber\": \"222119******3331\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"USA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"24\",\n            \"brand\": \"MASTERCARD\"\n        }\n    ]\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        },
        {
          "name": "authToken",
          "value": "{{ _['pi-core-service_authToken'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// Ref: https://confluence.mastercard.int/display/alberta/Token+Issuer+Emulator+Tool+%7C+Public+APIs",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n     insomnia.environment.set('pi-core-service_pushAccountReceipt', jsonData.pushAccountReceipts[0].pushAccountReceipt);\n });"
    },
    {
      "_id": "req_1dc4c35137754d008da01a15",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "2. Generate PushAccountReceipts  - generate receipt number - multi-push-hardcoded Copy",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/push/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"environmentId\": \"ITF\",\n    \"selectedPushMethod\": \"WEB\",\n    \"trid\": \"50123197928\",\n    \"cardHolderData\": {\n        \"name\": \"John Doe\",\n        \"billingAddress\": {\n            \"line1\": \"10 Sunflower Avenue\",\n            \"line2\": \"Apt. 4B\",\n            \"city\": \"St. Louis\",\n            \"countrySubdivision\": \"MO\",\n            \"postalCode\": \"61000\",\n            \"country\": \"USA\"\n        },\n        \"emailAddress\": \"john.doe@anymail.com\",\n        \"mobileNumber\": \"+1 234567890\"\n    },\n    \"selectedCardAccountDetails\": [\n        {\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\",\n            \"cardAccountId\": \"bea80e68-5279-4a0e-b67a-3d264b909770\",\n            \"maskedCardAccountNumber\": \"533783******0333\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"GBR\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"24\",\n            \"brand\": \"MASTERCARD\"\n        }\n    ]\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        },
        {
          "name": "authToken",
          "value": "{{ _['pi-core-service_authToken'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// Ref: https://confluence.mastercard.int/display/alberta/Token+Issuer+Emulator+Tool+%7C+Public+APIs",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n     insomnia.environment.set('pi-core-service_pushAccountReceipt', jsonData.pushAccountReceipts[0].pushAccountReceipt);\n });"
    },
    {
      "_id": "req_4f745bdafe634d16a0bf8651",
      "_type": "request",
      "parentId": "fld_1c1e645fcc294221851be102",
      "name": "2. Generate PushAccountReceipts  - generate receipt number - multiple",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/push/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"environmentId\": \"ITF\",\n    \"selectedPushMethod\": \"WEB\",\n    \"trid\": \"50123197928\",\n    \"cardHolderData\": {\n        \"name\": \"John Doe\",\n        \"billingAddress\": {\n            \"line1\": \"10 Sunflower Avenue\",\n            \"line2\": \"Apt. 4B\",\n            \"city\": \"St. Louis\",\n            \"countrySubdivision\": \"MO\",\n            \"postalCode\": \"61000\",\n            \"country\": \"USA\"\n        },\n        \"emailAddress\": \"john.doe@anymail.com\",\n        \"mobileNumber\": \"+1 234567890\"\n    },\n    \"selectedCardAccountDetails\": [\n        {\n            \"cardAccountId\": \"3ca6c926-99bb-4522-b9f9-645c79dc95ed\",\n            \"maskedCardAccountNumber\": \"520798******4595\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"07\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\",\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\"\n        },\n        {\n            \"cardAccountId\": \"30e7f679-fea8-4a84-ab96-12e74e781032\",\n            \"maskedCardAccountNumber\": \"639241*********6349\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"NLD\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\",\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\"\n        },\n        {\n            \"cardAccountId\": \"c6a709de-1f1b-4795-9793-8261ae7711f4\",\n            \"maskedCardAccountNumber\": \"519667******9265\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\",\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\"\n        },\n        {\n            \"cardAccountId\": \"946c1087-9ffc-4d57-8f93-5551cc1908d5\",\n            \"maskedCardAccountNumber\": \"542415******0381\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\",\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\"\n        },\n        {\n            \"cardAccountId\": \"da2815de-52dc-47bb-9f8f-6385ca1e829f\",\n            \"maskedCardAccountNumber\": \"542415******4299\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\",\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\"\n        },\n        {\n            \"cardAccountId\": \"94bac4f4-3ac5-45c5-b484-bb46b9b4695c\",\n            \"maskedCardAccountNumber\": \"679997******4598\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"BRA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\",\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\"\n        },\n        {\n            \"cardAccountId\": \"72d85756-76a9-4d9b-ab1b-67226199af41\",\n            \"maskedCardAccountNumber\": \"679997******4580\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"BRA\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MAESTRO\",\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\"\n        },\n        {\n            \"cardAccountId\": \"992c7202-f263-4998-9b4b-e5309c75e9c5\",\n            \"maskedCardAccountNumber\": \"520798******7940\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\",\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\"\n        },\n        {\n            \"cardAccountId\": \"d87f167b-c01e-4c40-8591-450e358ade8c\",\n            \"maskedCardAccountNumber\": \"529802******9841\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\",\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\"\n        },\n        {\n            \"cardAccountId\": \"af18a17b-efba-4a34-91c6-ea25235cebdf\",\n            \"maskedCardAccountNumber\": \"520798******7957\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"27\",\n            \"brand\": \"MASTERCARD\",\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\"\n        }\n    ]\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        },
        {
          "name": "authToken",
          "value": "{{ _['pi-core-service_authToken'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// Ref: https://confluence.mastercard.int/display/alberta/Token+Issuer+Emulator+Tool+%7C+Public+APIs",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n     insomnia.environment.set('pi-core-service_pushAccountReceipt', jsonData.pushAccountReceipts[0].pushAccountReceipt);\n });"
    },
    {
      "_id": "fld_3007eaab69c5483bbde8e25c",
      "_type": "request_group",
      "parentId": "fld_9b305199d1d94f228edc01cd",
      "name": "stage-use-simulator-itt"
    },
    {
      "_id": "req_f0829810df2a44aba9da327b",
      "_type": "request",
      "parentId": "fld_3007eaab69c5483bbde8e25c",
      "name": "Generate push account receipt",
      "method": "POST",
      "url": "https://paymentinstrument-downstream-simulator.apps.stl.pcfstage00.mastercard.int/itt/api/public/push/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"environmentId\": \"Sandbox\",\n    \"selectedPushMethod\": \"WEB\",\n    \"trid\": \"12345678901\",\n    \"cardHolderData\": {\n        \"name\": \"John Doe\",\n        \"billingAddress\": {\n            \"line1\": \"10 Sunflower Avenue\",\n            \"line2\": \"Apt. 4B\",\n            \"city\": \"St. Louis\",\n            \"countrySubdivision\": \"MO\",\n            \"postalCode\": \"61000\",\n            \"country\": \"USA\"\n        },\n        \"emailAddress\": \"john.doe@anymail.com\",\n        \"mobileNumber\": \"+1 234567890\"\n    },\n    \"selectedCardAccountDetails\": [\n        {\n            \"cardAccountId\": \"52eb9775-74d7-45c7-a1f2-fbe638b2af4a\",\n            \"selectedType\": \"CARD\",\n            \"useCardHolderData\": true\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n     insomnia.environment.set('pi-core-service_pushAccountReceipt', jsonData.pushAccountReceipts[0].pushAccountReceipt);\n });"
    },
    {
      "_id": "fld_8b1f51ebb75449dca7e7392e",
      "_type": "request_group",
      "parentId": "fld_9b305199d1d94f228edc01cd",
      "name": "stage"
    },
    {
      "_id": "req_b46d617541fe43bbb276272a",
      "_type": "request",
      "parentId": "fld_8b1f51ebb75449dca7e7392e",
      "name": "1. Generate Token for accounts-TRID-50123197928-accessToken-a20b9dea",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/validate/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"accessToken\": \"a20b9dea\",\n    \"environmentId\": \"Stage\",\n    \"trid\": \"50123197928\"\n}"
      },
      "parameters": [
        {
          "name": "",
          "value": null
        },
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n   //  insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    \n    //change array index and resend request to get a different cardAccountId\n    insomnia.environment.set('pi-core-service_cardAccountId', jsonData.cardAccountDetails[0].cardAccountId);\n });"
    },
    {
      "_id": "req_1cb190f7c77247128ab1d292",
      "_type": "request",
      "parentId": "fld_8b1f51ebb75449dca7e7392e",
      "name": "1. src-stage-src-mocks-manager-Generate Token for accounts-TRID-50123197928-accessToken-a20b9dea",
      "method": "POST",
      "url": "https://blue-src-stage-src-mocks-manager.apps.stl.pcfstage00.mastercard.int/itt/api/public/validate/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"accessToken\": \"a20b9dea\",\n    \"environmentId\": \"Stage\",\n    \"trid\": \"50123197928\"\n}\n/*\nPull All cards from ITT tool with cardAccountId and maskedCardAccountNumber. You will see all of these cards in UI tool as well.\n*/"
      },
      "parameters": [
        {
          "name": "",
          "value": null
        },
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n   //  insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    \n    //change array index and resend request to get a different cardAccountId\n    insomnia.environment.set('pi-core-service_cardAccountId', jsonData.cardAccountDetails[0].cardAccountId);\n });"
    },
    {
      "_id": "req_d2ea7329a71a452caed40025",
      "_type": "request",
      "parentId": "fld_8b1f51ebb75449dca7e7392e",
      "name": "2. Generate PushAccountReceipts  - generate receipt number - single",
      "method": "POST",
      "url": "https://stage.tokenconnect.mcsrcteststore.com/itt/api/public/push/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"environmentId\": \"Stage\",\n    \"selectedPushMethod\": \"WEB\",\n    \"trid\": \"50123197928\",\n    \"cardHolderData\": {\n        \"name\": \"John Doe\",\n        \"billingAddress\": {\n            \"line1\": \"10 Sunflower Avenue\",\n            \"line2\": \"Apt. 4B\",\n            \"city\": \"St. Louis\",\n            \"countrySubdivision\": \"MO\",\n            \"postalCode\": \"61000\",\n            \"country\": \"USA\"\n        },\n        \"emailAddress\": \"john.doe@anymail.com\",\n        \"mobileNumber\": \"+1 234567890\"\n    },\n    \"selectedCardAccountDetails\": [\n        {\n            \"cardAccountId\": \"{{ _['pi-core-service_cardAccountId'] }}\",\n            \"maskedCardAccountNumber\": \"545503******0082\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"03\",\n            \"expiryYear\": \"22\",\n            \"brand\": \"MASTERCARD\",\n            \"selectedCard\": true,\n            \"useCardHolderData\": true,\n            \"cardAccountIndex\": 1,\n            \"cardIndex\": 1,\n            \"selectedType\": \"CARD\"\n        }\n    ]\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        },
        {
          "name": "authToken",
          "value": "{{ _['pi-core-service_authToken'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// Ref: https://confluence.mastercard.int/display/alberta/Token+Issuer+Emulator+Tool+%7C+Public+APIs",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n     insomnia.environment.set('pi-core-service_pushAccountReceipt', jsonData.pushAccountReceipts[0].pushAccountReceipt);\n });"
    },
    {
      "_id": "fld_6fa6ed39786d44a9b249fdcd",
      "_type": "request_group",
      "parentId": "fld_9b305199d1d94f228edc01cd",
      "name": "mtf"
    },
    {
      "_id": "req_845ab09ee6db4be6a7e54cbb",
      "_type": "request",
      "parentId": "fld_6fa6ed39786d44a9b249fdcd",
      "name": "1. Generate Token for accounts-TRID-50123197928-accessToken-a20b9dea",
      "method": "POST",
      "url": "https://tokenconnect.mcsrcteststore.com/itt/api/public/validate/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"accessToken\": \"a20b9dea\",\n    \"environmentId\": \"MTF\",\n    \"trid\": \"50123197928\"\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n    var jsonData = insomnia.response.json();\n    insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    var singlecardAccountDetail = _.sample(jsonData.cardAccountDetails);\n    //Pick random singlecardAccountDetail from cardAccountDetails\n    insomnia.environment.set('pi-core-service_cardAccountId', singlecardAccountDetail.cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', singlecardAccountDetail.maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', singlecardAccountDetail.tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', singlecardAccountDetail.type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', singlecardAccountDetail.expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', singlecardAccountDetail.expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', singlecardAccountDetail.brand);\n\n    //Note: Pick specific index based singlecardAccountDetail from cardAccountDetails\n    /*\n    insomnia.environment.set('pi-core-service_cardAccountId', jsonData.cardAccountDetails[7].cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', jsonData.cardAccountDetails[7].maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', jsonData.cardAccountDetails[7].tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', jsonData.cardAccountDetails[7].type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', jsonData.cardAccountDetails[7].expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', jsonData.cardAccountDetails[7].expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', jsonData.cardAccountDetails[7].brand); \n    */\n });\n\nconsole.log(`cardAccountId: ${insomnia.environment.get('pi-core-service_cardAccountId')}, \nmaskedCardAccountNumber: ${insomnia.environment.get('pi-core-service_maskedCardAccountNumber')},\ntokenOutcome: ${insomnia.environment.get('pi-core-service_tokenOutcome')},\nparType: ${insomnia.environment.get('pi-core-service_parType')},\nparExpiryMonth: ${insomnia.environment.get('pi-core-service_parExpiryMonth')},\nparExpiryYear: ${insomnia.environment.get('pi-core-service_parExpiryYear')},\nparBrand: ${insomnia.environment.get('pi-core-service_parBrand')},\n`);"
    },
    {
      "_id": "req_8f5a3bca0312479a88a9d36a",
      "_type": "request",
      "parentId": "fld_6fa6ed39786d44a9b249fdcd",
      "name": "1. src-stage-itt-token-connect-Generate Token for accounts-TRID-50191159210-accessToken-65EAB0D0",
      "method": "POST",
      "url": "https://blue-src-stage-itt-token-connect-services.apps.stl.pcfstage00.mastercard.int/itt/api/public/validate/token?",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"accessToken\": \"a20b9dea\",\n    \"environmentId\": \"MTF\",\n    \"trid\": \"50123197928\"\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        },
        {
          "name": "",
          "value": null
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n    var jsonData = insomnia.response.json();\n    insomnia.environment.set('pi-core-service_authToken', jsonData.authToken);\n    var singlecardAccountDetail = _.sample(jsonData.cardAccountDetails);\n    //Pick random singlecardAccountDetail from cardAccountDetails\n    insomnia.environment.set('pi-core-service_cardAccountId', singlecardAccountDetail.cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', singlecardAccountDetail.maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', singlecardAccountDetail.tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', singlecardAccountDetail.type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', singlecardAccountDetail.expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', singlecardAccountDetail.expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', singlecardAccountDetail.brand);\n\n    //Note: Pick specific index based singlecardAccountDetail from cardAccountDetails\n    /*\n    insomnia.environment.set('pi-core-service_cardAccountId', jsonData.cardAccountDetails[7].cardAccountId);\n    insomnia.environment.set('pi-core-service_maskedCardAccountNumber', jsonData.cardAccountDetails[7].maskedCardAccountNumber);\n    insomnia.environment.set('pi-core-service_tokenOutcome', jsonData.cardAccountDetails[7].tokenOutcome);\n    insomnia.environment.set('pi-core-service_parType', jsonData.cardAccountDetails[7].type);\n    insomnia.environment.set('pi-core-service_parExpiryMonth', jsonData.cardAccountDetails[7].expiryMonth);\n    insomnia.environment.set('pi-core-service_parExpiryYear', jsonData.cardAccountDetails[7].expiryYear);\n    insomnia.environment.set('pi-core-service_parBrand', jsonData.cardAccountDetails[7].brand); \n    */\n });\n\nconsole.log(`cardAccountId: ${insomnia.environment.get('pi-core-service_cardAccountId')}, \nmaskedCardAccountNumber: ${insomnia.environment.get('pi-core-service_maskedCardAccountNumber')},\ntokenOutcome: ${insomnia.environment.get('pi-core-service_tokenOutcome')},\nparType: ${insomnia.environment.get('pi-core-service_parType')},\nparExpiryMonth: ${insomnia.environment.get('pi-core-service_parExpiryMonth')},\nparExpiryYear: ${insomnia.environment.get('pi-core-service_parExpiryYear')},\nparBrand: ${insomnia.environment.get('pi-core-service_parBrand')},\n`);"
    },
    {
      "_id": "req_ad07b8115dec4ad98028489b",
      "_type": "request",
      "parentId": "fld_6fa6ed39786d44a9b249fdcd",
      "name": "2. Generate PushAccountReceipts  - generate receipt number - single",
      "method": "POST",
      "url": "https://tokenconnect.mcsrcteststore.com/itt/api/public/push/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\"environmentId\": \"MTF\",\n    \"selectedPushMethod\": \"WEB\",\n    \"trid\": \"50123197928\",\n    \"cardHolderData\": {\n        \"name\": \"John Doe\",\n        \"billingAddress\": {\n            \"line1\": \"10 Sunflower Avenue\",\n            \"line2\": \"Apt. 4B\",\n            \"city\": \"St. Louis\",\n            \"countrySubdivision\": \"MO\",\n            \"postalCode\": \"61000\",\n            \"country\": \"USA\"\n        },\n        \"emailAddress\": \"John.doe@mailinator.com\",\n        \"mobileNumber\": \"+1 234567890\"\n    },\n\"selectedCardAccountDetails\":[\n        {\n            \"cardAccountId\": \"{{ _['pi-core-service_cardAccountId'] }}\",\n            \"maskedCardAccountNumber\": \"{{ _['pi-core-service_maskedCardAccountNumber'] }}\",\n            \"tokenOutcome\": \"{{ _['pi-core-service_tokenOutcome'] }}\",\n            \"type\": \"{{ _['pi-core-service_parType'] }}\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"{{ _['pi-core-service_parExpiryMonth'] }}\",\n            \"expiryYear\": \"{{ _['pi-core-service_parExpiryYear'] }}\",\n            \"brand\": \"{{ _['pi-core-service_parBrand'] }}\",\n            \"selectedCard\":true,\n            \"useCardHolderData\":true,\n            \"cardAccountIndex\":1,\n            \"cardIndex\":1,\n            \"selectedType\":\"CARD\"\n        }\n    ]\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        },
        {
          "name": "authToken",
          "value": "{{ _['pi-core-service_authToken'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// Ref: https://confluence.mastercard.int/display/alberta/Token+Issuer+Emulator+Tool+%7C+Public+APIs",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n     insomnia.environment.set('pi-core-service_pushAccountReceipt', jsonData.pushAccountReceipts[0].pushAccountReceipt);\n });"
    },
    {
      "_id": "req_1a8e0f33907e4032b0eb730d",
      "_type": "request",
      "parentId": "fld_6fa6ed39786d44a9b249fdcd",
      "name": "2. Generate PushAccountReceipts-hardcoded",
      "method": "POST",
      "url": "https://tokenconnect.mcsrcteststore.com/itt/api/public/push/token",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\"environmentId\": \"MTF\",\n    \"selectedPushMethod\": \"WEB\",\n    \"trid\": \"50123197928\",\n    \"cardHolderData\": {\n        \"name\": \"John Doe\",\n        \"billingAddress\": {\n            \"line1\": \"10 Sunflower Avenue\",\n            \"line2\": \"Apt. 4B\",\n            \"city\": \"St. Louis\",\n            \"countrySubdivision\": \"MO\",\n            \"postalCode\": \"61000\",\n            \"country\": \"USA\"\n        },\n        \"emailAddress\": \"John.doe@mailinator.com\",\n        \"mobileNumber\": \"+1 234567890\"\n    },\n\"selectedCardAccountDetails\":[\n        {\n            \"cardAccountId\": \"466b0c00-c4f3-4374-88f4-16049887b594\",\n            \"maskedCardAccountNumber\": \"520424******7583\",\n            \"tokenOutcome\": \"GREEN\",\n            \"type\": \"CARD\",\n            \"interbankCardAssociationId\": \"\",\n            \"countryCode\": \"\",\n            \"expiryMonth\": \"12\",\n            \"expiryYear\": \"24\",\n            \"brand\": \"MASTERCARD\",\n            \"selectedCard\":true,\n            \"useCardHolderData\":true,\n            \"cardAccountIndex\":1,\n            \"cardIndex\":1,\n            \"selectedType\":\"CARD\"\n        }\n    ]\n}"
      },
      "parameters": [
        {
          "name": "Accept",
          "value": ""
        }
      ],
      "headers": [
        {
          "name": "Accept",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "itt-correlation-id",
          "value": "1cf3f1c2c23924-3922736-4fa2a-43a23e-2f83c3520332c2c262e2a9",
          "disabled": false
        },
        {
          "name": "authToken",
          "value": "{{ _['pi-core-service_authToken'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// Ref: https://confluence.mastercard.int/display/alberta/Token+Issuer+Emulator+Tool+%7C+Public+APIs",
      "afterResponseScript": "insomnia.test(\"Set values of athorize token\", function() {\n     var jsonData = insomnia.response.json();\n     insomnia.environment.set('pi-core-service_pushAccountReceipt', jsonData.pushAccountReceipts[0].pushAccountReceipt);\n });"
    },
    {
      "_id": "req_c4f710762c624c6d9a300af7",
      "_type": "request",
      "parentId": "fld_a9aeb0086abc4a2b9c405c3d",
      "name": "Enroll card-push account receipt-50123197928",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Peter Parker\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"pushAccountReceipt\": \"{{ _['pi-core-service_pushAccountReceipt'] }}\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3migrationcorr-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//{{ _['pi-core-service_pushAccountReceipt'] }} works for Stage, possibly ITF (ITF in testing).\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_dbadc6bc306d44cc8d4732fb",
      "_type": "request",
      "parentId": "fld_a9aeb0086abc4a2b9c405c3d",
      "name": "Enroll card-push account receipt-50123197928 hardcoded",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Peter Parker\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"pushAccountReceipt\": \"MCC-1BR0-D2CE274F-F07E-47AE-8D5F-07ECBF0EE338\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//{{ _['pi-core-service_pushAccountReceipt'] }} works for Stage, possibly ITF (ITF in testing).\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_0dca2082ed1c43f28b4b82b4",
      "_type": "request",
      "parentId": "fld_a9aeb0086abc4a2b9c405c3d",
      "name": "Enroll card-push account receipt-50120022025",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenRequestorId\": \"50120022025\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Peter Parker\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"pushAccountReceipt\": \"{{ _['pi-core-service_pushAccountReceipt'] }}\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//{{ _['pi-core-service_pushAccountReceipt'] }} works for Stage, possibly ITF (ITF in testing).\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_21af76ef8ef94c2b8087f0e9",
      "_type": "request",
      "parentId": "fld_a9aeb0086abc4a2b9c405c3d",
      "name": "Enroll card-push account receipt fpan_multi_token",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"pushAccountReceipt\": \"{{ _['pi-core-service_pushAccountReceipt'] }}\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}\n//static 50127530524\n//static 50136141297"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "push-war-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//{{ _['pi-core-service_pushAccountReceipt'] }} works for Stage, possibly ITF (ITF in testing).\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_c302facebfc14448b2795054",
      "_type": "request",
      "parentId": "fld_a9aeb0086abc4a2b9c405c3d",
      "name": "Enroll card-push account receipt fpan_multi_token hardcoded",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"pushAccountReceipt\": \"MCC-1US0-F8EA177B-9621-45C2-A027-9F6F35282A0E\",\n    \"consumerId\": \"par-multi-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"{{ _['pi-core-service_fpanStaticYellowTokenRequesterId'] }}\"\n        },\n        \"cloudToken\": {\n            \"id\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\"\n        }\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"supportedCountries\": [\n        \"840\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": null,\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "macs-mdes-multi-par-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//{{ _['pi-core-service_pushAccountReceipt'] }} works for Stage, possibly ITF (ITF in testing).\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_4005a84c373f45c9b0c90912",
      "_type": "request",
      "parentId": "fld_a9aeb0086abc4a2b9c405c3d",
      "name": "Enroll card-push account receipt orphan card",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Peter Parker\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"pushAccountReceipt\": \"{{ _['pi-core-service_pushAccountReceipt'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//{{ _['pi-core-service_pushAccountReceipt'] }} works for Stage, possibly ITF (ITF in testing).\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_c090f5a3a368407182cca926",
      "_type": "request",
      "parentId": "fld_a9aeb0086abc4a2b9c405c3d",
      "name": "Enroll card-push account receipt with address and auth",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"pushAccountReceipt\": \"{{ _['pi-core-service_pushAccountReceipt'] }}\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"10 Sunflower Avenue\",\n        \"line2\": \"Apt. 4B\",\n        \"city\": \"St. Louis\",\n        \"countrySubDivision\": \"MO\",\n        \"postalCode\": \"61000\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//{{ _['pi-core-service_pushAccountReceipt'] }} works for Stage, possibly ITF (ITF in testing).\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_0ccfb50c8e5743e4b83618e4",
      "_type": "request",
      "parentId": "fld_a9aeb0086abc4a2b9c405c3d",
      "name": "Enroll card-push account receipt Duplicate",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Peter Parker\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"pushAccountReceipt\": \"MCC-STL-81CA3A79-EAED-4F04-9EA9-462963D46E81\",\n    \"consumerId\": \"897cea07-247e-4de5-9316-5b8cf1c0c42b\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//{{ _['pi-core-service_pushAccountReceipt'] }} works for Stage, possibly ITF (ITF in testing).\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_7d43bafab60a440f96662705",
      "_type": "request",
      "parentId": "fld_a9aeb0086abc4a2b9c405c3d",
      "name": "Enroll card-push account receipt for src-perf",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Peter Parker\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"pushAccountReceipt\": \"MCC-STL-E9F77A33-DC79-4339-F105-58B20061CCBK\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//{{ _['pi-core-service_pushAccountReceipt'] }} works for Stage, possibly ITF (ITF in testing).\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_a6ca82e373ef41b6809441a6",
      "_type": "request_group",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Enroll Card"
    },
    {
      "_id": "fld_10068269ea804f1f97ac654b",
      "_type": "request_group",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "TOKEN_ENROLLMENT (CFT)"
    },
    {
      "_id": "req_cb4fb8e170c34e17a679e509",
      "_type": "request",
      "parentId": "fld_10068269ea804f1f97ac654b",
      "name": "Order1 - Enroll card-token enrollment Fpan-Static",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5456089543988183\",\n    \"expiryDate\": \"1138\",\n    \"tokenRequestorId\": \"50127530524\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Jane Doe\",\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true,\n    \"consumerId\": \"fpan-token-enroll-static-4\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_staticDpan', jsonData.cardAccountData.accountNumber);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_b81813bebd094569a754b14a",
      "_type": "request",
      "parentId": "fld_10068269ea804f1f97ac654b",
      "name": "Order2 - Poly - DTVC - TUR for token enrollment",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_dynamicCVC', jsonData.credentials[0].dynamicCVC);"
    },
    {
      "_id": "req_b1838eb5a9104bfba8dd63d3",
      "_type": "request",
      "parentId": "fld_10068269ea804f1f97ac654b",
      "name": "Order3 - Enroll card-token enrollment Static-Cloud",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"6186004605241178\",\n    \"expiryDate\": \"1138\",\n    \"tokenRequestorId\": \"50199836436\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"cvc2\": \"{{ _['pi-core-service_dynamicCVC'] }}\",\n    \"cardHolderName\": \"john\",\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"tokenOnly\": true,\n    \"consumerId\": \"dpan-token-enroll-static-to-cloud-4\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#LIOTEST-TESTPGMLIO#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_06dc633f260c4787be47a091",
      "_type": "request",
      "parentId": "fld_10068269ea804f1f97ac654b",
      "name": "Order1 - Enroll card-token enrollment Fpan-Cloud",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5298060549704363\",\n    \"expiryDate\": \"1138\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"john\",\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"tokenOnly\": true,\n    \"consumerId\": \"25c361ca-9478-4e8b-8b0f-035dc7c71d3134\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_de7adb6ae2ee40faa112775e",
      "_type": "request",
      "parentId": "fld_10068269ea804f1f97ac654b",
      "name": "Order2 - Poly - DTVC - TUR for token enrollment",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_dynamicCVC', jsonData.credentials[0].dynamicCVC);"
    },
    {
      "_id": "req_ae97eaa05e2b452d9adf6b92",
      "_type": "request",
      "parentId": "fld_10068269ea804f1f97ac654b",
      "name": "Order3 - Enroll card-token enrollment Cloud-Cloud",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_cloudDpan'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"cvc2\": \"{{ _['pi-core-service_dynamicCVC'] }}\",\n    \"cardHolderName\": \"john\",\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"tokenOnly\": true,\n    \"consumerId\": \"25c361ca-9477-4e4b-8b0f-035dc5c71d3134-44\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_54cdc9c9092344a6951419e9",
      "_type": "request_group",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "TOKEN_ENROLLMENT [ITF] (CFT)"
    },
    {
      "_id": "fld_980bdf8cebfb46d69a67051a",
      "_type": "request_group",
      "parentId": "fld_54cdc9c9092344a6951419e9",
      "name": "CLOUD"
    },
    {
      "_id": "req_b0b2d927b0574556960197a2",
      "_type": "request",
      "parentId": "fld_980bdf8cebfb46d69a67051a",
      "name": "Set up data",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-stage-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "function uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n// previous hard-coded transactionId\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\n\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4());\nvar sampleCards = [\n  {\n    \"primaryAccountNumber\": \"5298060196137768\",\n    \"expiryDate\": \"0830\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5298060270123130\",\n    \"expiryDate\": \"0929\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5298060539604318\",\n    \"expiryDate\": \"1124\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRCCLOUDGOOGLE\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5298060670705403\",\n    \"expiryDate\": \"1124\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SRC_C2P#TPW-E2E#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5298060770266199\",\n    \"expiryDate\": \"0529\",\n    \"tokenRequestorId\": \"50130906700\",\n    \"primaryAccountNumberSource\": \"CARD_ON_FILE\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT#MAC2PSRCI-Vitrine_Test_Merchant_1#01\",\n    \"paymentNetworkName\": \"maestro\",\n    \"issuerCountryCode\": \"BR\"\n  },\n  {\n    \"primaryAccountNumber\": \"5298060808994879\",\n    \"expiryDate\": \"1024\",\n    \"tokenRequestorId\": \"50179582000\",\n    \"primaryAccountNumberSource\": \"CARD_ON_FILE\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO#VITRINE_ITF_SVO_DPA#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5298060812484560\",\n    \"expiryDate\": \"0934\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO#E2E-TEST_DPA_1#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5298060874573839\",\n    \"expiryDate\": \"0535\",\n    \"tokenRequestorId\": \"50117672900\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_MERCHANT_OBO_SHARED#PROJECT_PFM-CFEN2#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5298060999085040\",\n    \"expiryDate\": \"0727\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"AUTOFILL#Google_Inc-GOOGLE_e2e_itf#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  },\n  {\n    \"primaryAccountNumber\": \"5298061150903930\",\n    \"expiryDate\": \"0926\",\n    \"tokenRequestorId\": \"50170064072\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"programId\": \"SECURE_COF_COMMERCE_PLATFORM_OBO#FAR_EASTERN_INTERNATIONAL_BANK-DE277762_CPOBO_ITF_01#01\",\n    \"paymentNetworkName\": \"mastercard\",\n    \"issuerCountryCode\": \"US\"\n  }\n];\n\nvar singleCard = _.sample(sampleCards);\ninsomnia.environment.set('pi-core-service_primaryAccountNumber', singleCard.primaryAccountNumber);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', singleCard.tokenRequestorId);\ninsomnia.environment.set('pi-core-service_primaryAccountNumberSource', singleCard.primaryAccountNumberSource);\ninsomnia.environment.set('pi-core-service_expiryDate', singleCard.expiryDate);\ninsomnia.environment.set('pi-core-service_program-id', singleCard.programId);\nconsole.log(\"singleCard Picked: \" + singleCard.primaryAccountNumber);"
    },
    {
      "_id": "req_ddf66418749448d8aad2bc26",
      "_type": "request",
      "parentId": "fld_980bdf8cebfb46d69a67051a",
      "name": "Order1 - Enroll-token enrollment FPAN-CLOUD-ITF-0",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5298060549704363\",\n    \"expiryDate\": \"0726\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_a04ca3fc58304e1192d10164",
      "_type": "request",
      "parentId": "fld_980bdf8cebfb46d69a67051a",
      "name": "Order1 - Enroll-token enrollment FPAN-CLOUD-ITF-1",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5298067545992843\",\n    \"expiryDate\": \"0726\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_91453fa016e94b6690636d4c",
      "_type": "request",
      "parentId": "fld_980bdf8cebfb46d69a67051a",
      "name": "Order1 - Enroll-token enrollment FPAN-CLOUD-ITF-2",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"2221190355503929\",\n    \"expiryDate\": \"0726\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_06e58cb9da8c43f184d39aa4",
      "_type": "request",
      "parentId": "fld_980bdf8cebfb46d69a67051a",
      "name": "Order1 - Enroll-token enrollment FPAN-CLOUD-ITF-3",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5298060213444759\",\n    \"expiryDate\": \"0726\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Apt867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3verification-m2-{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "macs-mdes-test-fix-8",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_8b17101f0caf4fbabe17a8c7",
      "_type": "request",
      "parentId": "fld_980bdf8cebfb46d69a67051a",
      "name": "Order1 - Enroll-token enrollment FPAN-CLOUD-ITF {{ ??}}",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"0726\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Apt867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3verification-m2-{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "macs-mdes-test-fix-8",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_90e0593c14834a938746b435",
      "_type": "request",
      "parentId": "fld_980bdf8cebfb46d69a67051a",
      "name": "Order2 - Poly - DTVC - TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"fpanRequested\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_dynamicCVC', jsonData.credentials[0].dynamicCVC);"
    },
    {
      "_id": "req_85fc991255724f0098e8255b",
      "_type": "request",
      "parentId": "fld_980bdf8cebfb46d69a67051a",
      "name": "Poly - DTVC - TUR Hardcoded",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"DM4MMC000011439375fd3b6aef8d479aaea470cfa7c84ce9\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"fpanRequested\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_dynamicCVC', jsonData.credentials[0].dynamicCVC);"
    },
    {
      "_id": "req_4c02d9153d904439877e8022",
      "_type": "request",
      "parentId": "fld_980bdf8cebfb46d69a67051a",
      "name": "Order3 - Enroll-token enrollment DPAN-CLOUD-CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_cloudDpan'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"consumerId\": \"ChangeConsumerId23-{{ _['pi-core-service_$randomInt'] }}@test.com\",\n    \"tokenType\": \"CLOUD\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": null,\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3verification-m2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "dpan-cloud-to-cloud-macs-test-4",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_5af76b746faf4e2c94cf3618",
      "_type": "request",
      "parentId": "fld_980bdf8cebfb46d69a67051a",
      "name": "Dup-check - Enroll-token enrollment DPAN-CLOUD-CLOUD-consumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_cloudDpan'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"consumerId\": \"ChangeConsumerId23-220@test.com\",\n    \"tokenType\": \"CLOUD\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"{{ _['pi-core-service_dynamicCVC'] }}\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3verification-m2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "dpan-cloud-to-cloud-macs-test-2",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_313681921b9f46ea881a4f10",
      "_type": "request",
      "parentId": "fld_980bdf8cebfb46d69a67051a",
      "name": "Dup-check - Enroll-token enrollment DPAN-CLOUD-CLOUD-no-consumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_cloudDpan'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"consumerId\": null,\n    \"tokenType\": \"CLOUD\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"{{ _['pi-core-service_dynamicCVC'] }}\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Inc-GOOGLE_e2e_itf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "cft-dup-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_d4a2616d70864693b2ee5494",
      "_type": "request",
      "parentId": "fld_980bdf8cebfb46d69a67051a",
      "name": "Enroll card-token enrollment Cloud-Cloud-HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5136400199771070\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"consumerId\": \"28a961ca-9478-4e6b-8b0f-035dc5c71d3154\",\n    \"tokenType\": \"CLOUD\",\n    \"cvc2\": \"586\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_777b45bfec384e6f8ef37f7b",
      "_type": "request",
      "parentId": "fld_980bdf8cebfb46d69a67051a",
      "name": "Enroll-token enrollment DPAN-CLOUD-CLOUD HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5136400199718493\",\n    \"expiryDate\": \"0627\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"420\",\n    \"cardHolderName\": \"John Doe\",\n    \"tokenType\": \"CLOUD\",\n    \"tokenOnly\": true,\n    \"consumerId\": \"wargame2consumer-2i3s32f4rzl63ffxkybq-c-to-c\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"3932756b-602b-4a96-a52c-476cf4f1d0a9\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"wargame2correlation-fmnmy8ae9pbsfc5bav6s\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "dpan-cloud-to-cloud-macs-test-2",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_4fde9efdca3e4a1d9bf60f42",
      "_type": "request_group",
      "parentId": "fld_54cdc9c9092344a6951419e9",
      "name": "STATIC"
    },
    {
      "_id": "req_795a5b52479340dfb9f0fcdd",
      "_type": "request",
      "parentId": "fld_4fde9efdca3e4a1d9bf60f42",
      "name": "Enroll card-token enrollment FPAN-STATIC-ITF",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5298063068592300\",\n    \"expiryDate\": \"0726\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenType\": \"STATIC\",\n    \"Xcvc2\": \"123\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_f13b0209c3524154874e5117",
      "_type": "request",
      "parentId": "fld_4fde9efdca3e4a1d9bf60f42",
      "name": "Enroll card-token enrollment FPAN-STATIC-ITF Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"2221192255373684\",\n    \"expiryDate\": \"0726\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenType\": \"STATIC\",\n    \"Xcvc2\": \"123\",\n    \"tokenRequestorId\": \"50127530524\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_66ec4366c9aa45fe8a9eed0c",
      "_type": "request",
      "parentId": "fld_4fde9efdca3e4a1d9bf60f42",
      "name": "Enroll card-token enrollment FPAN-STATIC-ITF Copy 2",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"2221192255373684\",\n    \"expiryDate\": \"0726\",\n    \"consumerId\": \"token-enroll-fpan-to-static-{{ _['pi-core-service_$randomInt'] }}\",\n    \"tokenType\": \"STATIC\",\n    \"cardHolderName\": \"Josianne\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"tokenRequestorId\": \"50127530524\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_527d37c69b7045d8a325375c",
      "_type": "request",
      "parentId": "fld_4fde9efdca3e4a1d9bf60f42",
      "name": "Enroll card-token enrollment FPAN-STATIC-ITF Copy 3",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5298073494882761\",\n    \"expiryDate\": \"0726\",\n    \"consumerId\": \"token-enroll-fpan-to-static-{{ _['pi-core-service_$randomInt'] }}\",\n    \"tokenType\": \"STATIC\",\n    \"cardHolderName\": \"Josianne\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"tokenRequestorId\": \"50127530524\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_ff7e2ff49eba44ac9c3e9687",
      "_type": "request",
      "parentId": "fld_4fde9efdca3e4a1d9bf60f42",
      "name": "Enroll card-token enrollment FPAN-STATIC-ITF Copy 4",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5337838951052303\",\n    \"expiryDate\": \"0628\",\n    \"consumerId\": \"token-enroll-fpan-to-static-{{ _['pi-core-service_$randomInt'] }}\",\n    \"tokenType\": \"STATIC\",\n    \"cardHolderName\": \"Josianne\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"tokenRequestorId\": \"50127530524\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "mdes-macs-static-to-cloud-test-1",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_5c750c13bedc46aab6af9431",
      "_type": "request",
      "parentId": "fld_4fde9efdca3e4a1d9bf60f42",
      "name": "Polytransactioncredentials - DTVC - TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"fpanRequested\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_dynamicCVC', jsonData.credentials[0].dynamicCVC);"
    },
    {
      "_id": "req_63ff687bac9b4d8da29b9f13",
      "_type": "request",
      "parentId": "fld_4fde9efdca3e4a1d9bf60f42",
      "name": "Polytransactioncredentials - DTVC - TUR HardCoded",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"DM4MMC000011439397d537bb9dab436ea1f6cd4de61321d1\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"14\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"fpanRequested\": false\n}\n//DM4MMC0000114393236fa7b4ebca4beea343a563177f328f\n//DM4MMC0000114393ab25e273793a4ccbbf92acc740e0933c"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-poly-test",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_dynamicCVC', jsonData.credentials[0].dynamicCVC);"
    },
    {
      "_id": "req_51f01339b3e14d9c817e02b7",
      "_type": "request",
      "parentId": "fld_4fde9efdca3e4a1d9bf60f42",
      "name": "Enroll card-token enrollment DPAN-STATIC-CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_cloudDpan'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"consumerId\": \"static-dpan-to-cloud-{{ _['pi-core-service_$randomInt'] }}\",\n    \"tokenType\": \"CLOUD\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"{{ _['pi-core-service_dynamicCVC'] }}\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null,\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "dpan-static-to-cloud-macs-cvc-test-3",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_a361d2376be4449cbb8a09cb",
      "_type": "request",
      "parentId": "fld_4fde9efdca3e4a1d9bf60f42",
      "name": "Enroll card-token enrollment DPAN-STATIC-CLOUD- HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5136400199904788\",\n    \"expiryDate\": \"0926\",\n    \"consumerId\": \"22a961ca-9478-4e4b-8b0f-035dc5c71d3119\",\n    \"tokenType\": \"CLOUD\",\n    \"cvc2\": \"991\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_8624150819534e0eb0f646fc",
      "_type": "request",
      "parentId": "fld_54cdc9c9092344a6951419e9",
      "name": "TOKEN ENNROLLMENT (CLOUD) Duplicate check by consumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_cloudDpan'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"consumerId\": \"{{ _['pi-core-service_consumerId'] }}\",\n    \"tokenType\": \"CLOUD\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"{{ _['pi-core-service_dynamicCVC'] }}\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_21d0ddbfc5cc45349eef1811",
      "_type": "request",
      "parentId": "fld_54cdc9c9092344a6951419e9",
      "name": "TOKEN ENNROLLMENT (CLOUD) Duplicate check by programid and no consumerid",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_cloudDpan'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"consumerId\": null,\n    \"tokenType\": \"CLOUD\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"{{ _['pi-core-service_dynamicCVC'] }}\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_6733787483864ea8bd593f8f",
      "_type": "request",
      "parentId": "fld_54cdc9c9092344a6951419e9",
      "name": "Get card by cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "silentverify-m2-wargame2-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_c25c795650aa4eceae2cfc04",
      "_type": "request",
      "parentId": "fld_54cdc9c9092344a6951419e9",
      "name": "Delete card by cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one method and url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deleteCardSchema'));\r\n// console.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\n//pm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\n// insomnia.test('response matches JSON schema', () => {\r\n//     pm.response.to.have.jsonSchema(expectedSchema);\r\n// });"
    },
    {
      "_id": "fld_e6c98a305df049e5bb248725",
      "_type": "request_group",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "TOKEN_ENROLLMENT [STAGE] (CFT)"
    },
    {
      "_id": "fld_d330aa888367474ea3fd22f3",
      "_type": "request_group",
      "parentId": "fld_e6c98a305df049e5bb248725",
      "name": "CLOUD"
    },
    {
      "_id": "req_4ccf656de2274f05bfa21f16",
      "_type": "request",
      "parentId": "fld_d330aa888367474ea3fd22f3",
      "name": "DPAN-NOT-Generate-Enroll card-token enrollment Fpan-CLOUD Stage-HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500000512\",\n    \"expiryDate\": \"0727\",\n    \"consumerId\": \"22a961ca-9478-4e4b-8b0f-035dc5c71d3143-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"john doe\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_staticDpan', jsonData.cardAccountData.accountNumber);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_64a80624beb04393be8947b2",
      "_type": "request",
      "parentId": "fld_d330aa888367474ea3fd22f3",
      "name": "DPAN-NOT-Generate-Enroll card-token enrollment Fpan-Cloud-Stage-HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500000421\",\n    \"expiryDate\": \"0726\",\n    \"consumerId\": \"22a961ca-9478-4e4b-8b0f-035dc5c71d3143-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"50129208200\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_f0d77b47854c4ccabd67bd6c",
      "_type": "request",
      "parentId": "fld_d330aa888367474ea3fd22f3",
      "name": "Enroll card-token enrollment Fpan-Cloud-Stage-HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5298062708998182\",\n    \"expiryDate\": \"0436\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"consumerId\": \"cft-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Jason Hill puke\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"authenticationRequested\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_f6c9ab6e1cee463fb4384ecc",
      "_type": "request",
      "parentId": "fld_d330aa888367474ea3fd22f3",
      "name": "Polytransactioncredentials - DTVC - TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"fpanRequested\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_dynamicCVC', jsonData.credentials[0].dynamicCVC);"
    },
    {
      "_id": "req_1bd67799cfc74760a7a78640",
      "_type": "request",
      "parentId": "fld_d330aa888367474ea3fd22f3",
      "name": "Enroll card-token enrollment Cloud-Cloud HARDCODED-different-TRID-PAN_INELIGIBLE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455034837192135\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"consumerId\": \"22a961ca-9478-4e4b-8b0f-035dc5c71d3144\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"646\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_1250fb7c5d254ffb88a6d4f5",
      "_type": "request",
      "parentId": "fld_d330aa888367474ea3fd22f3",
      "name": "Enroll card-token enrollment Cloud-Cloud HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5136400113398471\",\n    \"expiryDate\": \"0833\",\n    \"consumerId\": \"ChangeConsumerId-5@test.com\",\n    \"cardHolderName\": \"john doe\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"285\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_14786c2265254d5ea635d651",
      "_type": "request",
      "parentId": "fld_d330aa888367474ea3fd22f3",
      "name": "Enroll card-token enrollment Cloud-Cloud HARDCODED-Orphan-Card-Null-ConsumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5136400104297948\",\n    \"expiryDate\": \"0333\",\n    \"consumerId\": null,\n    \"cardHolderName\": \"john doe\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"646\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_fa29339800194526b06de399",
      "_type": "request",
      "parentId": "fld_d330aa888367474ea3fd22f3",
      "name": "Enroll card-token enrollment Cloud-Cloud Stage",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"6186004605241178\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"consumerId\": \"22a961ca-9478-4e4b-8b0f-035dc5c71d3144\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"{{ _['pi-core-service_dynamicCVC'] }}\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_0d5177de7b1c420a82ba0802",
      "_type": "request_group",
      "parentId": "fld_e6c98a305df049e5bb248725",
      "name": "STATIC"
    },
    {
      "_id": "req_3b47bb44b9564094914a40b3",
      "_type": "request",
      "parentId": "fld_0d5177de7b1c420a82ba0802",
      "name": "Enroll card-token enrollment Fpan-Static Stage",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5456089543988183\",\n    \"expiryDate\": \"1138\",\n    \"tokenRequestorId\": \"50127530524\",\n    \"tokenType\": \"STATIC\",\n    \"consumerId\": \"cft-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Jason Hill puke\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"authenticationRequested\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_staticDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_2454386734b140ae9ca8d8c9",
      "_type": "request",
      "parentId": "fld_0d5177de7b1c420a82ba0802",
      "name": "Polytransactioncredentials - DTVC - TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"fpanRequested\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_dynamicCVC', jsonData.credentials[0].dynamicCVC);"
    },
    {
      "_id": "req_0aa5fdac7a934c029c7c65f7",
      "_type": "request",
      "parentId": "fld_0d5177de7b1c420a82ba0802",
      "name": "Token(DPAN from step2) Based enrollment- STATIC-CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_staticDpan'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"consumerId\": \"ChangeConsumerId23-{{ _['pi-core-service_$randomInt'] }}@test.com\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"{{ _['pi-core-service_dynamicCVC'] }}\",\n    \"tokenType\": \"CLOUD\",\n    \"cardHolderName\": \"Jane Doe\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"authenticationRequested\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_03b11267f1eb491a95331039",
      "_type": "request",
      "parentId": "fld_e6c98a305df049e5bb248725",
      "name": "TOKEN ENNROLLMENT (CLOUD) Duplicate check by consumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_staticDpan'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"consumerId\": \"{{ _['pi-core-service_consumerId'] }}\",\n    \"tokenType\": \"CLOUD\",\n    \"cardHolderName\": \"john doe\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"{{ _['pi-core-service_dynamicCVC'] }}\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_dfad49e340d44dbe95b5f01b",
      "_type": "request",
      "parentId": "fld_e6c98a305df049e5bb248725",
      "name": "TOKEN ENNROLLMENT (CLOUD) Duplicate check by programid and no consumerid",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_staticDpan'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"consumerId\": null,\n    \"tokenType\": \"CLOUD\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": \"{{ _['pi-core-service_dynamicCVC'] }}\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind\u00a0WallMart\",\n        \"city\": \"New\u00a0York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#04",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\nconst programIdInHeader = pm.request.headers.get(\"program-id\");\ninsomnia.environment.set('pi-core-service_program-id', programIdInHeader);"
    },
    {
      "_id": "req_48484252da5346eeb34de88d",
      "_type": "request",
      "parentId": "fld_e6c98a305df049e5bb248725",
      "name": "Get card by cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "silentverify-m2-wargame2-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_89736f50ef2141c998192754",
      "_type": "request",
      "parentId": "fld_e6c98a305df049e5bb248725",
      "name": "Delete card by cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one method and url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deleteCardSchema'));\r\n// console.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\n//pm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\n// insomnia.test('response matches JSON schema', () => {\r\n//     pm.response.to.have.jsonSchema(expectedSchema);\r\n// });"
    },
    {
      "_id": "fld_5c528a3fcfaa4f96ba1d5128",
      "_type": "request_group",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "TOKEN_ENROLLMENT [MTF] (CFT)"
    },
    {
      "_id": "req_03eb860a29c24e8c9a3c66bd",
      "_type": "request",
      "parentId": "fld_5c528a3fcfaa4f96ba1d5128",
      "name": "Enroll FPAN to CLOUD",
      "method": "POST",
      "url": "https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5120350157354641\",\n    \"expiryDate\": \"1025\",\n    \"consumerId\": \"consumerid-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"50277711200\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\":\"enrollmentProviderId\",\n    \"clientRoutingId\":\"clientRoutingId\",\n    \"clientSiteId\":\"clientSiteId\",\n    \"externalId\":\"externalId\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "encrypted-test-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_staticDpan', jsonData.cardAccountData.accountNumber);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_4b361c002ae0465491dd4362",
      "_type": "request",
      "parentId": "fld_5c528a3fcfaa4f96ba1d5128",
      "name": "Polytransactioncredentials - DTVC - TUR Copy",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"fpanRequested\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_dynamicCVC', jsonData.credentials[0].dynamicCVC);"
    },
    {
      "_id": "fld_7055951feab74ecda3a0e379",
      "_type": "request_group",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "MTF-Cards-Do-run-Setup-And-Run-Request"
    },
    {
      "_id": "req_8961bcd8ea2542da89388956",
      "_type": "request",
      "parentId": "fld_7055951feab74ecda3a0e379",
      "name": "Enroll card-tokenized HARDCODED-Use-For-MTF-mastercard-USA",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5450291016531468\",\n   \"expiryDate\": \"0829\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "mtfwargamemigration1-{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_cecb80e9406d4574a4bcebf7",
      "_type": "request",
      "parentId": "fld_7055951feab74ecda3a0e379",
      "name": "Enroll card-tokenized HARDCODED-Use-For-MTF-maestro-USA",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5204736685178830891\",\n   \"expiryDate\": \"0829\",\n   \"tokenRequestorId\": \"50108451508\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_98ce9b65246c47898073fa37",
      "_type": "request",
      "parentId": "fld_7055951feab74ecda3a0e379",
      "name": "Get card by cardId accountInformation=card HARDCODED Copy 3",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=card",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "card"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}4288d4eb-5b1f-4366-a2ce-1d7bff275584",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM_OBO#TDA-TEST-E2ETEST-UPN21#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_63499f2b23d7457db490ca05",
      "_type": "request_group",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "ITF-Cards-Do-run-Setup-And-Run-Request"
    },
    {
      "_id": "req_cf03f97593ab4dbab7f69631",
      "_type": "request",
      "parentId": "fld_63499f2b23d7457db490ca05",
      "name": "Enroll card-tokenized HARDCODED-use-For-ITF-mastercard-USA",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5424280325714769\",\n   \"expiryDate\": \"0828\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "mani-fpan-test-4",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_deb92ed3fbff4feea426ca80",
      "_type": "request",
      "parentId": "fld_63499f2b23d7457db490ca05",
      "name": "Enroll card-tokenized HARDCODED-use-For-ITF-mastercard-GB",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5337838958862746\",\n   \"expiryDate\": \"1034\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"000\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "mani-test-2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_141ce77a2b8141ad957185b9",
      "_type": "request",
      "parentId": "fld_63499f2b23d7457db490ca05",
      "name": "Get card by cardId accountInformation=card HARDCODED Copy 2",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=card",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "card"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}0e9ea4c6-4e76-4529-8078-d93debb853a2",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#TPW-E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_c917e2510e0b4280b1e43e97",
      "_type": "request",
      "parentId": "fld_63499f2b23d7457db490ca05",
      "name": "Get card by cardId accountInformation=card HARDCODED Copy 3",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=card",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "card"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}e6103415-93cb-4fba-815b-a888a59a2ec8",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT#MAC2PSRCI-Vitrine_Test_Merchant_1#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_2b29d693fa1f4b47be31014c",
      "_type": "request",
      "parentId": "fld_63499f2b23d7457db490ca05",
      "name": "Get card by cardId accountInformation=card HARDCODED Copy 4",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=card",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "card"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}c135728c-900e-4a15-b799-e1953bc33260",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#VITRINE_ITF_SVO_DPA#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_a5299e8fa9ff438c838844c9",
      "_type": "request",
      "parentId": "fld_63499f2b23d7457db490ca05",
      "name": "Get card by cardId accountInformation=card HARDCODED Copy 5",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=card",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "card"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}ba9dafe9-15f4-4e71-b034-e3521d1f58a2",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#E2E-TEST_DPA_1#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_de21ba01a2814f8080066c7d",
      "_type": "request",
      "parentId": "fld_63499f2b23d7457db490ca05",
      "name": "Get card by cardId accountInformation=card HARDCODED Copy 6",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=card",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "card"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}9d894c84-254a-4b0e-b7fe-13d5f2c4ce5f",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM_OBO#FAR_EASTERN_INTERNATIONAL_BANK-DE277762_CPOBO_ITF_01#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_5cb530712a4a4871964e82fe",
      "_type": "request_group",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "STAGE-HARCODED-FOR-RUN"
    },
    {
      "_id": "req_276abb0bd1ae42d19bc42906",
      "_type": "request",
      "parentId": "fld_5cb530712a4a4871964e82fe",
      "name": "Enroll card-tokenized STAGE HARDCODED adyen1",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031503799243\",\n   \"expiryDate\": \"1030\",\n   \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-COMPANYADYENTESTTOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_189172c8beff4426aca11b35",
      "_type": "request",
      "parentId": "fld_5cb530712a4a4871964e82fe",
      "name": "Enroll card-tokenized STAGE HARDCODED adyen2",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031500001486\",\n   \"expiryDate\": \"0531\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-BORDEAUX_INDEX_LTD#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_4977ba2f25fd41febcc121a9",
      "_type": "request",
      "parentId": "fld_5cb530712a4a4871964e82fe",
      "name": "Static-Enroll card-tokenized STAGE HARDCODED adyen3",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001502\",\n    \"expiryDate\": \"0526\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-DELIVERY_TECHNOLOGIES#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_edca6bfad4304318a7262843",
      "_type": "request",
      "parentId": "fld_5cb530712a4a4871964e82fe",
      "name": "Enroll card-tokenized STAGE HARDCODED adyen4",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031505186316\",\n   \"expiryDate\": \"0832\",\n   \"tokenRequestorId\": \"50297129100\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-UNIVERSEUM_AB#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_1546d603a5524ca1a7a86211",
      "_type": "request",
      "parentId": "fld_5cb530712a4a4871964e82fe",
      "name": "Enroll card-tokenized STAGE HARDCODED adyen5",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031509138198\",\n   \"expiryDate\": \"0832\",\n   \"tokenRequestorId\": \"50297129100\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-UNIVERSEUM_AB#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_5a02b055462543029930f2c7",
      "_type": "request",
      "parentId": "fld_5cb530712a4a4871964e82fe",
      "name": "Enroll card-tokenized STAGE HARDCODED adyen5 Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031509138198\",\n   \"expiryDate\": \"0832\",\n   \"tokenRequestorId\": \"50297129100\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-LEGO_SYSTEM_AS#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_c28f597d1a1747588c80ce1d",
      "_type": "request",
      "parentId": "fld_5cb530712a4a4871964e82fe",
      "name": "Enroll card-tokenized STAGE HARDCODED adyen5 Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031509138198\",\n   \"expiryDate\": \"0832\",\n   \"tokenRequestorId\": \"50297129100\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-MODELO_CONTINENTE_HIPERMERCADOS_SA#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_c65dba7487ca479e9981c82c",
      "_type": "request",
      "parentId": "fld_5cb530712a4a4871964e82fe",
      "name": "Enroll card-tokenized STAGE HARDCODED adyen5 Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031509138198\",\n   \"expiryDate\": \"0832\",\n   \"tokenRequestorId\": \"50297129100\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-FLINK_SE#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_f7ad53ce17c74433808358fe",
      "_type": "request",
      "parentId": "fld_5cb530712a4a4871964e82fe",
      "name": "Enroll card-tokenized STAGE HARDCODED adyen5 Copy 2",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031509138198\",\n   \"expiryDate\": \"0832\",\n   \"tokenRequestorId\": \"50297129100\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-GAZIN_INDUSTRIA_E_COMERCIO_DE_MOVEIS_E_ELETRODOMESTICOS_LTDA#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_860ce699ff1c404cb672bcee",
      "_type": "request",
      "parentId": "fld_5cb530712a4a4871964e82fe",
      "name": "Enroll card-tokenized STAGE HARDCODED adyen5 Copy 3",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031509138198\",\n   \"expiryDate\": \"0832\",\n   \"tokenRequestorId\": \"50297129100\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-HURTIGRUTEN_GROUP_AS#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "fld_6fc65d79d5c24c28adb62e35",
      "_type": "request_group",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "MTF-HARDCODED-FOR-RUN"
    },
    {
      "_id": "req_3d6e9de6c0e446be9d4b3531",
      "_type": "request",
      "parentId": "fld_6fc65d79d5c24c28adb62e35",
      "name": "Enroll card-NON-TOKENIZED MTF HARDCODED-works",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5346937200137698\",\n   \"expiryDate\": \"1223\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"tokenOnly\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "fpan-enroll-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_eb4b4f03511546f3a639d888",
      "_type": "request",
      "parentId": "fld_6fc65d79d5c24c28adb62e35",
      "name": "Enroll card-tokenized MTF HARDCODED adyen2",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5120350261420361\",\n   \"expiryDate\": \"0725\",\n   \"tokenRequestorId\": \"50108451508\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#M4S_MTF_TESTING-M4S_MERCHANT_2#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "fpan-enroll-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_5b92d945f3c64a4d9c444640",
      "_type": "request",
      "parentId": "fld_6fc65d79d5c24c28adb62e35",
      "name": "Enroll card-tokenized MTF REQUIRE_ADDITIONAL_AUTHENTICATION HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5473501080064599\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenOnly\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\",\n        \"recommendationAlgorithmVersion\": \"10\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ]\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-COMPANYADYENTESTTOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "adyen-pan-update-issue-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_4e9f8403f1994eefba91d87e",
      "_type": "request",
      "parentId": "fld_6fc65d79d5c24c28adb62e35",
      "name": "Enroll card-tokenized MTF HARDCODED adyen3",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5204731620064587\",\n   \"expiryDate\": \"0531\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-BORDEAUX_INDEX_LTD#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "fpan-enroll-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_ff340693bdd04322b5c74ba5",
      "_type": "request",
      "parentId": "fld_6fc65d79d5c24c28adb62e35",
      "name": "Enroll card-tokenized MTF HARDCODED adyen4",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"6799996413566366\",\n   \"expiryDate\": \"0526\",\n   \"tokenRequestorId\": \"50191159210\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-DELIVERY_TECHNOLOGIES#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "fpan-enroll-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_a62ddd98595a4aaea202a038",
      "_type": "request",
      "parentId": "fld_6fc65d79d5c24c28adb62e35",
      "name": "Enroll card-tokenized MTF HARDCODED adyen5",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5120340000064505\",\n   \"expiryDate\": \"0832\",\n   \"tokenRequestorId\": \"50297129100\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-UNIVERSEUM_AB#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "fpan-enroll-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_f39129826fdb4722acf8e5a4",
      "_type": "request",
      "parentId": "fld_6fc65d79d5c24c28adb62e35",
      "name": "Enroll card-tokenized MTF HARDCODED adyen6",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5120341704364910\",\n   \"expiryDate\": \"0731\",\n   \"tokenRequestorId\": \"50191159210\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-LEGO_SYSTEM_AS#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "fpan-enroll-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_89f7fedeb98a4642bd56111f",
      "_type": "request",
      "parentId": "fld_6fc65d79d5c24c28adb62e35",
      "name": "Enroll card-tokenized MTF HARDCODED adyen6 Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5120340000064505\",\n   \"expiryDate\": \"0832\",\n   \"tokenRequestorId\": \"50297129100\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-MODELO_CONTINENTE_HIPERMERCADOS_SA#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "fpan-enroll-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_5511f955261242e1a383c3d4",
      "_type": "request",
      "parentId": "fld_6fc65d79d5c24c28adb62e35",
      "name": "Enroll card-tokenized MTF HARDCODED adyen6 Copy 2",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5120348371534907\",\n   \"expiryDate\": \"0336\",\n   \"tokenRequestorId\": \"50122967937\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-FLINK_SE#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "fpan-enroll-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_32052fd3d06e4fd0bca0b576",
      "_type": "request",
      "parentId": "fld_6fc65d79d5c24c28adb62e35",
      "name": "Enroll card-tokenized MTF HARDCODED adyen6 Copy 3",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5120343745572568\",\n   \"expiryDate\": \"0432\",\n   \"tokenRequestorId\": \"50273580900\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-GAZIN_INDUSTRIA_E_COMERCIO_DE_MOVEIS_E_ELETRODOMESTICOS_LTDA#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "fpan-enroll-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_8c51236d8241426fbcc3cea5",
      "_type": "request",
      "parentId": "fld_6fc65d79d5c24c28adb62e35",
      "name": "Enroll card-tokenized MTF HARDCODED adyen6 Copy 4",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5120341704364910\",\n   \"expiryDate\": \"0731\",\n   \"tokenRequestorId\": \"50191159210\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-HURTIGRUTEN_GROUP_AS#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "fpan-enroll-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_dd7851552b784e79a587cb39",
      "_type": "request",
      "parentId": "fld_6fc65d79d5c24c28adb62e35",
      "name": "Enroll card-tokenized MTF DEL HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5299920979774500\",\n    \"expiryDate\": \"0531\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFullName'] }}\",\n    \"consumerId\": null,\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"enrollmentProviderId\": \"5e0d4b84-189d-4c86-822d-590602f62062\",\n    \"determinedEnrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenType\": \"CLOUD\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "fpan-enroll-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_ad30eadcd1cd40af99d86e23",
      "_type": "request",
      "parentId": "fld_6fc65d79d5c24c28adb62e35",
      "name": "Enroll card-tokenized MTF HARDCODED adyen3 chidi",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5204731620064587\",\n   \"expiryDate\": \"0531\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#M4S_MTF_TESTING-M4S_MERCHANT_2#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n// pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "fld_8ed128fc61ef4167bcd01025",
      "_type": "request_group",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "MULTI-TOKEN-FPAN-BFC"
    },
    {
      "_id": "fld_1e2a8d81e7a54a6088171c60",
      "_type": "request_group",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Error-Scenarios-And-Fallback"
    },
    {
      "_id": "req_b66468b9898445d1985c60a7",
      "_type": "request",
      "parentId": "fld_1e2a8d81e7a54a6088171c60",
      "name": "ESC1-Enroll-CLOUD-RED-STATIC-RED-INVALID_PAN",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001247\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "INVALID_PAN",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_595c80caee234cbba38ab3e6",
      "_type": "request",
      "parentId": "fld_1e2a8d81e7a54a6088171c60",
      "name": "ESC1-Enroll-CLOUD_ISSUER_DECLINED_STATIC_ISSUER_DECLINED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001247\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "CLOUD_ISSUER_DECLINED_STATIC_ISSUER_DECLINED",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_9c7e87fb66114b34ac6813b3",
      "_type": "request",
      "parentId": "fld_1e2a8d81e7a54a6088171c60",
      "name": "ESC2-Enroll-CLOUD_SUCCESS_and_STATIC_RED-SERVICE_UNAVAILABLE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001247\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "STATIC_SERVICE_UNAVAILABLE",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_c7d64511120d4d58a0d7d0cb",
      "_type": "request",
      "parentId": "fld_1e2a8d81e7a54a6088171c60",
      "name": "ESC3-Enrol-STATIC_SUCCESS_and_CLOUD_RED-SERVICE_UNAVAILABLE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001247\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "CLOUD_SERVICE_UNAVAILABLE",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_8a57e91185a14dd3a3dd08ff",
      "_type": "request",
      "parentId": "fld_1e2a8d81e7a54a6088171c60",
      "name": "ESC3-Enrol-CLOUD_PAN_INELIGIBLE_and_STATIC_SUCCESS",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001247\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "CLOUD_PAN_INELIGIBLE",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_e21d5c6306094e8586cc7fdd",
      "_type": "request",
      "parentId": "fld_1e2a8d81e7a54a6088171c60",
      "name": "ESC4-Enroll-STATIC_SUCCESS_and_CLOUD_PAN_INELIGIBLE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001247\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "CLOUD_PAN_INELIGIBLE",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_f883c372cfbd4d15b1e17f14",
      "_type": "request",
      "parentId": "fld_1e2a8d81e7a54a6088171c60",
      "name": "ESC5-Enroll-STATIC_PAN_INELIGIBLE_and_CLOUD_PAN_INELIGIBLE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001247\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "CLOUD_PAN_INELIGIBLE_STATIC_PAN_INELIGIBLE",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_454451157ace4f5492c78451",
      "_type": "request",
      "parentId": "fld_1e2a8d81e7a54a6088171c60",
      "name": "ESC6-Enroll-CLOUD_SUCCESS_and_STATIC_PAN_INELIGIBLE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001247\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "STATIC_PAN_INELIGIBLE",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_28b2661cf37e4087ba300ef2",
      "_type": "request",
      "parentId": "fld_1e2a8d81e7a54a6088171c60",
      "name": "ESC7-Enroll-CLOUD_RED_and_STATIC_PAN_INELIGIBLE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001247\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "CLOUD_SERVICE_UNAVAILABLE_STATIC_PAN_INELIGIBLE",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_3ed6dffba2b24f7faeb1e001",
      "_type": "request",
      "parentId": "fld_1e2a8d81e7a54a6088171c60",
      "name": "ESC8-Enroll-CLOUD_PAN_INELIGIBLE_STATIC_RED-SERVICE_UNAVAILABLE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001247\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "CLOUD_PAN_INELIGIBLE_STATIC_SERVICE_UNAVAILABLE",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_4e414fcc859b451bbcc65583",
      "_type": "request_group",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Front-Validation-Errors"
    },
    {
      "_id": "req_cfdc92aba91944a0b25b23d5",
      "_type": "request",
      "parentId": "fld_4e414fcc859b451bbcc65583",
      "name": "[STAGE] [ESC2]Enroll card-tokenized FPAN_MULTI_TOKEN missing requestorInfo",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5204248974957563\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"expiryDate\": \"0828\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"fpan-multi-token-test-{{ _['pi-core-service_randomInt'] }}@test.com\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}\n/*\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197927\"\n        }\n    }\n*/\n//\"primaryAccountNumber\": \"5204248974957563\"\n//\"primaryAccountNumber\": \"5455031500000199\"\n/*\nScenario 1: EnrollmentType = FPAN_MULTI_TOKEN and RequestorInfo provided | STATIC & CLOUD token generated | Enrollment SUCCESS\n*/\n//example cardid: 11a7a57f-b7c5-48b6-8247-094a5dc41580"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B,UP",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 400\", function () {\n    pm.response.to.have.status(400);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\n// insomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\n// insomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\n// insomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\n// insomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n// //Save TRID from request\n// let jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\n// insomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_4b50bd025d9741d4914d81b1",
      "_type": "request",
      "parentId": "fld_4e414fcc859b451bbcc65583",
      "name": "[STAGE] [ESC3]Enroll card-tokenized FPAN_MULTI_TOKEN partial requestorInfo",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001247\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"expiryDate\": \"0828\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Mani Srini\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"cloudToken\": {\n            \"id\": \"50123197927\"\n        }\n    }\n}\n//\"primaryAccountNumber\": \"5204248974957563\"\n//\"primaryAccountNumber\": \"5455031500000199\"\n/*\nScenario 1: EnrollmentType = FPAN_MULTI_TOKEN and RequestorInfo provided | STATIC & CLOUD token generated | Enrollment SUCCESS\n*/\n//example cardid: 11a7a57f-b7c5-48b6-8247-094a5dc41580"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B,UP",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 400\", function () {\n    pm.response.to.have.status(400);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\n// insomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\n// insomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\n// insomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\n// insomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n// //Save TRID from request\n// let jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\n// insomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_c436d4e159f545eb8cd67769",
      "_type": "request",
      "parentId": "fld_4e414fcc859b451bbcc65583",
      "name": "[STAGE] [ESC5]Enroll card-tokenized FPAN_MULTI_TOKEN Invalid length",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5204248974957563\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"expiryDate\": \"0828\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Mani Srini\",\n    \"consumerId\": \"mani-fpan-multi-token-test006@test.com\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"5012319792811111\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197927\"\n        }\n    }\n}\n/*\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197927\"\n        }\n    }\n*/\n//\"primaryAccountNumber\": \"5204248974957563\"\n//\"primaryAccountNumber\": \"5455031500000199\"\n/*\nScenario 1: EnrollmentType = FPAN_MULTI_TOKEN and RequestorInfo provided | STATIC & CLOUD token generated | Enrollment SUCCESS\n*/\n//example cardid: 11a7a57f-b7c5-48b6-8247-094a5dc41580"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B,UP",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 400\", function () {\n    pm.response.to.have.status(400);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\n// insomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\n// insomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\n// insomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\n// insomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n// //Save TRID from request\n// let jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\n// insomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_c5bfc54fe8704a2cb215dfec",
      "_type": "request",
      "parentId": "fld_4e414fcc859b451bbcc65583",
      "name": "[STAGE][ESC6] Enroll card-tokenized FUNDING_PRIMARY_ACCOUNT_NUMBER-no-tokenRequestorId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001247\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"expiryDate\": \"0828\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}\n//FUNDING_PRIMARY_ACCOUNT_NUMBER\n//FPAN_MULTI_TOKEN\n//    \"tokenRequestorId\": \"50123197928\",\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 400\", function () {\n    pm.response.to.have.status(400);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\n// insomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\n// insomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\n// insomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\n// insomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n// //Save TRID from request\n// let jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\n// insomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_fa3088882d3844199b34d6f2",
      "_type": "request_group",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Downstream-Failures-AVS/BNC/MDES/Internal"
    },
    {
      "_id": "req_758b284867a6469ea7628f7c",
      "_type": "request",
      "parentId": "fld_fa3088882d3844199b34d6f2",
      "name": "Enroll card-bnc_declined_fpan_multi_Tokenized",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500000249\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"expiryDate\": \"0828\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"issuer_declined_{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenOnly\": true,\n    \"address\": {\n        \"line1\": \"Rivium Quadrant 2\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"Capelle aan den IJssel\",\n        \"countrySubDivision\": \"LC\",\n        \"postalCode\": \"2909\",\n        \"country\": \"NLD\"\n    },\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197927\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "issuer_declined_fpan_multi_test_2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_cf13b5f859004300b2c08a3c",
      "_type": "request",
      "parentId": "fld_fa3088882d3844199b34d6f2",
      "name": "Enroll card-bnc_declined_fpan_multi_NON_TOKENIZED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5438570040000328\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"expiryDate\": \"0828\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"issuer_declined_{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenOnly\": false,\n    \"address\": {\n        \"line1\": \"Rivium Quadrant 2\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"Capelle aan den IJssel\",\n        \"countrySubDivision\": \"LC\",\n        \"postalCode\": \"2909\",\n        \"country\": \"NLD\"\n    },\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197927\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "issuer_declined_fpan_multi_test_2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_ee6d0bf6ca9f4e95bc14ac33",
      "_type": "request",
      "parentId": "fld_fa3088882d3844199b34d6f2",
      "name": "Enroll card-bnc_declined_fpan_Tokenized",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500000249\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"issuer_declined_{{ _['pi-core-service_$randomInt'] }}\",\n    \"tokenOnly\": true,\n    \"address\": {\n        \"line1\": \"Rivium Quadrant 2\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"Capelle aan den IJssel\",\n        \"countrySubDivision\": \"LC\",\n        \"postalCode\": \"2909\",\n        \"country\": \"NLD\"\n    },\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 422\", function () {\n    pm.response.to.have.status(422);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\n// insomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\n// insomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\n// insomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\n// insomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n// //Save TRID from request\n// let jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\n// insomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_b1d822d83497424eaa7bb25c",
      "_type": "request",
      "parentId": "fld_fa3088882d3844199b34d6f2",
      "name": "Enroll card-bnc_declined_fpan-NON-tokenized",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5438570040000328\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"tokenOnly\": false,\n    \"consumerId\": \"issuer_declined_{{ _['pi-core-service_$randomInt'] }}\",\n    \"address\": {\n        \"line1\": \"Rivium Quadrant 2\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"Capelle aan den IJssel\",\n        \"countrySubDivision\": \"LC\",\n        \"postalCode\": \"2909\",\n        \"country\": \"NLD\"\n    },\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": false\n}\n//    \"tokenOnly\": true,\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 422\", function () {\n    pm.response.to.have.status(422);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\n// insomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\n// insomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\n// insomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\n// insomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n// //Save TRID from request\n// let jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\n// insomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_828a84e60a56495b939d4db2",
      "_type": "request",
      "parentId": "fld_fa3088882d3844199b34d6f2",
      "name": "Enroll card-MDES_SERVICE_FAILURE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031501307783\",\n    \"expiryDate\": \"0828\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"address\": {\n        \"line1\": \"Rivium Quadrant 2\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"Capelle aan den IJssel\",\n        \"countrySubDivision\": \"LC\",\n        \"postalCode\": \"2909\",\n        \"country\": \"NLD\"\n    },\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": false,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "CLOUD_INTERNAL_SERVER_ERROR_STATIC_SERVICE_UNAVAILABLE",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 500\", function () {\n    pm.response.to.have.status(500);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\n// insomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\n// insomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\n// insomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\n// insomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n// //Save TRID from request\n// let jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\n// insomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_a4e91ea631bd4927826a25aa",
      "_type": "request",
      "parentId": "fld_fa3088882d3844199b34d6f2",
      "name": "Enroll card-INTERNAL_SERVICE_FAILURE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031501307783\",\n    \"expiryDate\": \"0828\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"address\": {\n        \"line1\": \"Rivium Quadrant 2\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"Capelle aan den IJssel\",\n        \"countrySubDivision\": \"LC\",\n        \"postalCode\": \"2909\",\n        \"country\": \"NLD\"\n    },\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": false,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "make_fpan_multi_token_internal_failure",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 500\", function () {\n    pm.response.to.have.status(500);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\n// insomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\n// insomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\n// insomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\n// insomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n// //Save TRID from request\n// let jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\n// insomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_f202d078526f420492572498",
      "_type": "request",
      "parentId": "fld_fa3088882d3844199b34d6f2",
      "name": "Enroll card-bnc-INVAL_CARD-5400810000000080-multi",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5400810000000080\",\n    \"expiryDate\": \"0828\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"address\": {\n        \"line1\": \"Rivium Quadrant 2\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"Capelle aan den IJssel\",\n        \"countrySubDivision\": \"LC\",\n        \"postalCode\": \"2909\",\n        \"country\": \"NLD\"\n    },\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": false,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "CLOUD_PAN_INELIGIBLE_STATIC_PAN_INELIGIBLE",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_bca14d3015a84e26883d75b1",
      "_type": "request",
      "parentId": "fld_fa3088882d3844199b34d6f2",
      "name": "Enroll card-bnc-INVAL_CARD-5400810000000080-fpan",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5400810000000080\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"issuer_declined_{{ _['pi-core-service_$randomInt'] }}\",\n    \"address\": {\n        \"line1\": \"Rivium Quadrant 2\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"Capelle aan den IJssel\",\n        \"countrySubDivision\": \"LC\",\n        \"postalCode\": \"2909\",\n        \"country\": \"NLD\"\n    },\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "bnc_invalid_card_test__fpan_1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 422\", function () {\n    pm.response.to.have.status(422);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\n// insomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\n// insomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\n// insomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\n// insomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n// //Save TRID from request\n// let jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\n// insomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_fb1dc386ab444244818f3a75",
      "_type": "request",
      "parentId": "fld_fa3088882d3844199b34d6f2",
      "name": "INVALID_PAN",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500000249\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"expiryDate\": \"0828\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"null\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197927\"\n        }\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "INVALID_PAN",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_2f43b6a104804bfcaff59ac2",
      "_type": "request_group",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "ITF-Happy"
    },
    {
      "_id": "req_7e3566b6149d49069a9e7866",
      "_type": "request",
      "parentId": "fld_2f43b6a104804bfcaff59ac2",
      "name": "Enroll ITF Live-FPAN_MULTI_TOKEN",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5298020875323188\",\n    \"expiryDate\": \"0438\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"000\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_889eb871c28f4a3ca495f119",
      "_type": "request",
      "parentId": "fld_2f43b6a104804bfcaff59ac2",
      "name": "Enroll ITF Live-FPAN_MULTI_TOKEN fallback",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0438\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"000\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is  null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_b67600010c2d4e919b7b9479",
      "_type": "request",
      "parentId": "fld_2f43b6a104804bfcaff59ac2",
      "name": "Enroll ITF Live-FPAN_MULTI_TOKEN hardcoded",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5337838957638055\",\n    \"expiryDate\": \"0539\",\n    \"consumerId\": \"fpan-multi-token-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"Jane Doe\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"000\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_6f1b36febf7a4cb2b4113629",
      "_type": "request",
      "parentId": "fld_2f43b6a104804bfcaff59ac2",
      "name": "Enroll ITF Live-FPAN_MULTI_TOKEN cloud success no static",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumber\": \"5213800600566835\",\n    \"expiryDate\": \"0928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"Multi Token Update\",\n    \"consumerId\": \"fpan_multi_token_static_cloud_{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50136141297\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}\n//50136141297 static\n//50127530524 static works\n//50123197928 cloud clorks"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_722699bb828540d7b272ee8f",
      "_type": "request",
      "parentId": "fld_2f43b6a104804bfcaff59ac2",
      "name": "Enroll ITF Live-FPAN_MULTI_TOKEN cloud success no static Copy",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumber\": \"2221124340440186\",\n    \"expiryDate\": \"0928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"Multi Token Update\",\n    \"consumerId\": \"fpan_multi_token_static_cloud_{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}\n//50136141297 static\n//50127530524 static works\n//50123197928 cloud clorks"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_0521c3d9c1ec4277bf39ce7f",
      "_type": "request",
      "parentId": "fld_2f43b6a104804bfcaff59ac2",
      "name": "Enroll ITF Live-FPAN_MULTI_TOKEN cloud ineligible but static success",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumber\": \"5298440582378079\",\n    \"expiryDate\": \"0928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"Multi Token Update\",\n    \"consumerId\": \"fpan_multi_stat_suc_cl_in_{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3migration-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_94df3952b12e40658f94dca4",
      "_type": "request",
      "parentId": "fld_2f43b6a104804bfcaff59ac2",
      "name": "Enroll ITF Live-FPAN_MULTI_TOKEN NON Tokenized",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5186007061134359\",\n    \"expiryDate\": \"0438\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"000\",\n    \"cardHolderName\": \"John Doe nontokenized\",\n    \"consumerId\": \"nontokenized-consumer-1\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_a739f2e342704404aef37013",
      "_type": "request",
      "parentId": "fld_2f43b6a104804bfcaff59ac2",
      "name": "Enroll ITF Live - FUNDING_PRIMARY_ACCOUNT_NUMBER",
      "method": "POST",
      "url": "https://pi-core-service-ms.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/card/",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5424280369895300\",\n    \"expiryDate\": \"0438\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"000\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_bc6b04d0a3c046eb885fa442",
      "_type": "request_group",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "MTF-Happy"
    },
    {
      "_id": "req_d8d2e272c4ce45acabebbf76",
      "_type": "request",
      "parentId": "fld_bc6b04d0a3c046eb885fa442",
      "name": "Enroll-BFC-STL-side",
      "method": "POST",
      "url": "https://blue-pre-prod-synapse-test-harness.apps.stl.pcfprod00.mastercard.int/api/callWithPrism",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5204245263224689\",\n    \"expiryDate\": \"0438\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenRequestorId\": \"50123197928\",\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd80a1f-f13a-42c2-b141-perseverence-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_b8037808b96f4d5b9611def5",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Enroll card-tokenized FPAN_MULTI_TOKEN",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5506900485709082\",\n    \"expiryDate\": \"0329\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": false,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_f932f728dc324a6da685750d",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Enroll card-tokenized FPAN_MULTI_TOKEN without Address",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031501307783\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_55bd86cfba5e4fefaef50408",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Enroll card-tokenized FPAN_MULTI_TOKEN without Address",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5204245399626567\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_fe6c70d4efab4521ba71b276",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Enroll card-tokenized FPAN_MULTI_TOKEN -INDIA Program_ID should not be SRC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5208010233926151\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Microsoft_Autofill#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_fdfe30c9020d4cc7aaad6e9d",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Enroll card-CLOUD-tokenized-requestorInfo-FUNDING_PRIMARY_ACCOUNT_NUMBER-5455031500001635",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001478\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"expiryDate\": \"0832\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"tokenOnly\": true,\n    \"requestorInfo\": {\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}\n//FUNDING_PRIMARY_ACCOUNT_NUMBER\n//FPAN_MULTI_TOKEN\n//    \"tokenRequestorId\": \"50123197928\",\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_88a4c542730348789b1ef081",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Enroll card-STATIC-tokenized-requestorInfo-FUNDING_PRIMARY_ACCOUNT_NUMBER-5455031500001635",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500001635\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"expiryDate\": \"0924\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"consumer-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}\n//FUNDING_PRIMARY_ACCOUNT_NUMBER\n//FPAN_MULTI_TOKEN\n//    \"tokenRequestorId\": \"50123197928\",\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_84508b906a5149eda6400a82",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "[STAGE] [SC2 Source TUR]Enroll card-tokenized FPAN_MULTI_TOKEN without Address",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5204248974957563\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"expiryDate\": \"0828\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Mani Srini\",\n    \"consumerId\": \"mani-fpan-multi-token-test008@test.com\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197927\"\n        }\n    }\n}\n\n\n\n\n//\"primaryAccountNumber\": \"5204248974957563\"\n//\"primaryAccountNumber\": \"5455031500000199\"\n/*\nScenario 1: EnrollmentType = FPAN_MULTI_TOKEN and RequestorInfo provided | STATIC & CLOUD token generated | Enrollment SUCCESS\n*/\n//example cardid: 11a7a57f-b7c5-48b6-8247-094a5dc41580"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B,UP",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_99f856a8851f4d438509f8e5",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "[STAGE] [SC2 Given TUR]Enroll card-tokenized FPAN_MULTI_TOKEN without Address TUR",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500000439\",\n    \"expiryDate\": \"0828\",\n    \"tokenUniqueReference\": \"DM4MMC000000000IO9TO07T1QPGBTB6HZFYB0IWUWVMMOVK0R\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"fpan-multi-token-test-tur-009@test.com\",\n    \"accountInfoNeeded\": true,\n    \"tokenOnly\": true,\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197927\"\n        }\n    }\n}\n//\"primaryAccountNumber\": \"5204248974957563\"\n//\"primaryAccountNumber\": \"5455031500000199\"\n/*\nScenario 2: EnrollmentType = FPAN_MULTI_TOKEN and RequestorInfo provided | TUR or PUR or sourceCardId | STATIC & CLOUD token generated | Enrollment SUCCESS\n*/\n//examplecard:df0c6f5e-12ac-4b05-ae72-4d4cdfdf098e"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B,UP",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_2b2e745fe1d54cb693a2ff86",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Enroll DUPLICATE-consumer-idcard-tokenized FPAN_MULTI_TOKEN",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031501307783\",\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"expiryDate\": \"0828\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"null\",\n    \"consumerId\": \"consumer-ad6c64ca-0516-4a6f-a226-2e19812754c7\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}\n//\"primaryAccountNumber\": \"5455031500000199\",\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_dda2dc71c73a419084ef4758",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Enroll-REGULAR-CLOUD-card-tokenized-with-decision-and-address",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031926632344\",\n    \"expiryDate\": \"0927\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"{{ _['pi-core-service_primaryAccountNumberSource'] }}\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "perseverence-1-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "perseverence-cvs-address-failure-1",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_48a51cc24d4c40b3b2c42126",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Enroll-REGULAR-STATIC-card-tokenized-with-decision-and-address",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5441840000143151\",\n    \"expiryDate\": \"0829\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}-testdatapers",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Microsoft_Autofill#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_2f4db51f9ea14836b84cd995",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Enroll-NON-Tokenized",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5207990300064583\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "perseverence-1-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "perseverence-cvs-address-failure-1",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_03afadd4f5ed4755a11b0801",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Enroll card-PAR-CLOUD-requestorInfo",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Peter Parker\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"pushAccountReceipt\": \"MCC-STL-E9F77A33-DC79-4339-J108-58B20061CCBK\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50123197928\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50122967937\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-panni-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//{{ _['pi-core-service_pushAccountReceipt'] }} works for Stage, possibly ITF (ITF in testing).\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_d3bf45beb0f74cc1bfcc5b02",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "Enroll card-PAR-CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Peter Parker\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"pushAccountReceipt\": \"MCC-STL-E9F77A33-DC79-4339-J108-58B20061CCBK\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-panni-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//{{ _['pi-core-service_pushAccountReceipt'] }} works for Stage, possibly ITF (ITF in testing).\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_407308c20ffe402bb31e4f1b",
      "_type": "request",
      "parentId": "fld_8ed128fc61ef4167bcd01025",
      "name": "[STAGE] STATIC-Hardcoded",
      "method": "POST",
      "url": "http://localhost:8080/paymentinstrument/src/1/0/card/",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5441840000143151\",\n    \"expiryDate\": \"1030\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"c291df52-2bf5-49ca-9517-9b7073a{{ _['pi-core-service_$randomInt'] }}\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "test-corrid-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Microsoft_Autofill#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_91c971f145b74c7ba7005816",
      "_type": "request_group",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "PAYMENT_ACCOUNT - VCN - PBA Enroll"
    },
    {
      "_id": "fld_06aa3851b8e74d75993c4eba",
      "_type": "request_group",
      "parentId": "fld_91c971f145b74c7ba7005816",
      "name": "ITF"
    },
    {
      "_id": "req_ff314bb060b7411794863181",
      "_type": "request",
      "parentId": "fld_06aa3851b8e74d75993c4eba",
      "name": "Enroll ITF Live-PAYMENT_ACCOUNT-VCN-FPAN-Guest",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5186200175200428\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"VCN v2 live Test\",\n    \"consumerId\": null,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"retentionPeriod\": 48\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3migration-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_3bad343d440e4a64b789f2d3",
      "_type": "request",
      "parentId": "fld_06aa3851b8e74d75993c4eba",
      "name": "Enroll ITF Live-PAYMENT_ACCOUNT-VCN-FPAN-Guest Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5186200175200428\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"consumerId\": \"payment-account-fpan-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3migration-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_37b1974751704d39ae853449",
      "_type": "request",
      "parentId": "fld_06aa3851b8e74d75993c4eba",
      "name": "Enroll ITF Live-PAYMENT_ACCOUNT-VCN-DPAN-Guest",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5355591675481715\",\n    \"expiryDate\": \"1224\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"Jane Doe\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": null,\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_89724f6347954065af85738e",
      "_type": "request",
      "parentId": "fld_06aa3851b8e74d75993c4eba",
      "name": "Enroll ITF Live-PAYMENT_ACCOUNT-VCN-DPAN-consumerid",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5355591675481715\",\n    \"expiryDate\": \"1224\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"Jane Doe\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"vcn-consumer-id-5\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "macs-mdes-vcn-test-2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_6bb3ef8a29e649b6b0d2d131",
      "_type": "request",
      "parentId": "fld_06aa3851b8e74d75993c4eba",
      "name": "Enroll ITF Live-PAYMENT_ACCOUNT-VCN-DPAN-consumerid Copy",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5355591348861384\",\n    \"expiryDate\": \"1224\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"Jane Doe\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"vcn-consumer-id-6\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "macs-mdes-vcn-test-3",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_0136ae9d7027476da91c8c48",
      "_type": "request",
      "parentId": "fld_06aa3851b8e74d75993c4eba",
      "name": "Enroll ITF Live-PAYMENT_ACCOUNT-PBA-DPAN-consumerid",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5456030091323449\",\n    \"expiryDate\": \"1224\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"Jane Doe\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"enroll-pba-consumer-4\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "macs-mdes-pba-test-4",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_6ca7acedea274a01876bb37b",
      "_type": "request",
      "parentId": "fld_06aa3851b8e74d75993c4eba",
      "name": "Enroll ITF Live-PAYMENT_ACCOUNT-VCN-DPAN-consumerid-DUPLICATE-check",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5355591675481715\",\n    \"expiryDate\": \"1224\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"Jane Doe\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"vcn-duplicate-consumer-id-1\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_ef4eb5e896314e369834152f",
      "_type": "request_group",
      "parentId": "fld_91c971f145b74c7ba7005816",
      "name": "MTF"
    },
    {
      "_id": "req_ace8e301051644c39d4afe89",
      "_type": "request",
      "parentId": "fld_ef4eb5e896314e369834152f",
      "name": "PAYMENT_ACCOUNT-FPAN Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"consumerId\": \"payment-account-fpan-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n        \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"supportedCountries\": [\n        \"840\",\n        \"826\",\n        \"032\",\n        \"484\",\n        \"076\",\n        \"528\",\n        \"356\",\n        \"380\",\n        \"036\",\n        \"554\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}card",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_wargameCorrPrefix'] }}-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_1fd6fb5dba424dcb931d50ba",
      "_type": "request",
      "parentId": "fld_ef4eb5e896314e369834152f",
      "name": "PAYMENT_ACCOUNT-FPAN SCOF",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"2223520120139831\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"consumerId\": \"payment-account-fpan-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n        \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"supportedCountries\": [\n        \"840\",\n        \"826\",\n        \"032\",\n        \"484\",\n        \"076\",\n        \"528\",\n        \"356\",\n        \"380\",\n        \"036\",\n        \"554\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}card",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_wargameCorrPrefix'] }}-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_6f919126d12d438eb8d1e6af",
      "_type": "request",
      "parentId": "fld_ef4eb5e896314e369834152f",
      "name": "PAYMENT_ACCOUNT-FPAN NON SCOF",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"2223520120139831\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"consumerId\": \"payment-account-fpan-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"supportedCountries\": [\n        \"840\",\n        \"826\",\n        \"032\",\n        \"484\",\n        \"076\",\n        \"528\",\n        \"356\",\n        \"380\",\n        \"036\",\n        \"554\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}card",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "m4-non-scof-test-1-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#GOOGLE#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_197a4ac2f57742dc96e37aab",
      "_type": "request",
      "parentId": "fld_ef4eb5e896314e369834152f",
      "name": "PAYMENT_ACCOUNT-VCN-DPAN-no-consumerId Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5355591675481715\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": null,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_wargameCorrPrefix'] }}-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_5814b6c0d40d4cec913b4783",
      "_type": "request",
      "parentId": "fld_ef4eb5e896314e369834152f",
      "name": "PAYMENT_ACCOUNT-VCN-DPAN-consumerid Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5355591675481715\",\n    \"expiryDate\": \"1224\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"payment-account-vcn-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_wargameCorrPrefix'] }}-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_a28ea67a745f4d4ba33488e5",
      "_type": "request",
      "parentId": "fld_ef4eb5e896314e369834152f",
      "name": "PAYMENT_ACCOUNT-VCN-DPAN-consumerid MTF-0-works Copy",
      "method": "POST",
      "url": "https://blue-src-mtf-synapse-test-harness.apps.pnq.trd-prod-pas.mastercard.int/api/callWithPrism",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5379038014019188\",\n    \"expiryDate\": \"1025\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"143\",\n    \"cardHolderName\": \"null\",\n    \"consumerId\": \"payment-account-vcn-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"tokenOnly\": true,\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARD_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_wargameCorrPrefix'] }}-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "ACCA8D5B",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_b62cd66e69fb4bab9032e4f5",
      "_type": "request",
      "parentId": "fld_ef4eb5e896314e369834152f",
      "name": "PAYMENT_ACCOUNT-VCN-DPAN-consumerid MTF-1-works Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5379038005936184\",\n    \"expiryDate\": \"1025\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"171\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"payment-account-vcn-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"supportedCountries\": [\n        \"840\",\n        \"826\",\n        \"032\",\n        \"484\",\n        \"076\",\n        \"528\",\n        \"356\",\n        \"380\",\n        \"036\",\n        \"554\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_wargameCorrPrefix'] }}-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_618a67739a4d4efd8a56bad5",
      "_type": "request",
      "parentId": "fld_ef4eb5e896314e369834152f",
      "name": "PAYMENT_ACCOUNT-VCN-DPAN-consumerid MTF-2-works Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5379038005439171\",\n    \"expiryDate\": \"1025\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"172\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"payment-account-vcn-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"supportedCountries\": [\n        \"840\",\n        \"826\",\n        \"032\",\n        \"484\",\n        \"076\",\n        \"528\",\n        \"356\",\n        \"380\",\n        \"036\",\n        \"554\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_wargameCorrPrefix'] }}-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "macs-mdes-vcn-test-1",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_e1ec3bf2bf7245d3b3412bec",
      "_type": "request",
      "parentId": "fld_ef4eb5e896314e369834152f",
      "name": "PAYMENT_ACCOUNT-VCN-DPAN-consumerid MTF-3-works Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5379038028164103\",\n    \"expiryDate\": \"1025\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"419\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"payment-account-vcn-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"supportedCountries\": [\n        \"840\",\n        \"826\",\n        \"032\",\n        \"484\",\n        \"076\",\n        \"528\",\n        \"356\",\n        \"380\",\n        \"036\",\n        \"554\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_wargameCorrPrefix'] }}-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "macs-mdes-vcn-test-1",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_39baa8db22b64925b17c71c2",
      "_type": "request",
      "parentId": "fld_ef4eb5e896314e369834152f",
      "name": "PAYMENT_ACCOUNT-VCN-DPAN-consumerid MTF-4-works Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5379038050251489\",\n    \"expiryDate\": \"1025\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"924\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"payment-account-vcn-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"supportedCountries\": [\n        \"840\",\n        \"826\",\n        \"032\",\n        \"484\",\n        \"076\",\n        \"528\",\n        \"356\",\n        \"380\",\n        \"036\",\n        \"554\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_wargameCorrPrefix'] }}-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "macs-mdes-vcn-test-1",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_8f0c8247064d4053af34e846",
      "_type": "request",
      "parentId": "fld_ef4eb5e896314e369834152f",
      "name": "PAYMENT_ACCOUNT-VCN-DPAN-consumerid MTF-{{runner}} Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_dpanVcn'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_dpanVcnExpiryDate'] }}\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"{{ _['pi-core-service_dpanVcnCvc2'] }}\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"payment-account-vcn-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"supportedCountries\": [\n        \"840\",\n        \"826\",\n        \"032\",\n        \"484\",\n        \"076\",\n        \"528\",\n        \"356\",\n        \"380\",\n        \"036\",\n        \"554\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_wargameCorrPrefix'] }}-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_7a1356a8664c48f6a280ff9d",
      "_type": "request_group",
      "parentId": "fld_91c971f145b74c7ba7005816",
      "name": "STAGE"
    },
    {
      "_id": "req_5ab115d0072e49868dafdd52",
      "_type": "request",
      "parentId": "fld_7a1356a8664c48f6a280ff9d",
      "name": "PAYMENT_ACCOUNT-PBA-DPAN-consumerid(Only CLOUD allowed)",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5298120864548942\",\n    \"expiryDate\": \"0529\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"payment-account-pba-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3verification-m2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=false,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_69f65e9587e545aaa25adefa",
      "_type": "request",
      "parentId": "fld_7a1356a8664c48f6a280ff9d",
      "name": "PAYMENT_ACCOUNT-PBA-DPAN-consumerid(Only CLOUD allowed) Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5456030032630555\",\n    \"expiryDate\": \"0529\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"payment-account-pba-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=false,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_aee9f23e50524d85a9aa75ed",
      "_type": "request_group",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "FUNDING_PRIMARY_ACCOUNT_NUMBER"
    },
    {
      "_id": "req_828650235a9348308c3ac59e",
      "_type": "request",
      "parentId": "fld_aee9f23e50524d85a9aa75ed",
      "name": "Enroll card-tokenized-with-Auth-methods",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5337838950064580\",\n    \"expiryDate\": \"1127\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"tokenize-with-auth-methods-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "enroll-tokenize-with-auth-methods-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_56754979204249608820e482",
      "_type": "request",
      "parentId": "fld_aee9f23e50524d85a9aa75ed",
      "name": "Enroll card-tokenized-without-Auth-methods",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5207980053520931\",\n    \"expiryDate\": \"1127\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"tokenize-without-auth-methods-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "enroll-tokenize-with-auth-methods-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_9651cbc4b6fd44dd8a91f824",
      "_type": "request",
      "parentId": "fld_aee9f23e50524d85a9aa75ed",
      "name": "Enroll card-NonTokenizable",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5400170000000030\",\n    \"expiryDate\": \"1127\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"tokenize-with-out-auth-methods-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "enroll-tokenize-with-auth-methods-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_564fe28b2f134ac0a7199023",
      "_type": "request",
      "parentId": "fld_aee9f23e50524d85a9aa75ed",
      "name": "Enroll card-enrollAsFpanOnly=true",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5207980000000375\",\n    \"expiryDate\": \"1127\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"enrollAsFpanOnly\",\n    \"consumerId\": \"enrollAsFpanOnly-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"enrollAsFpanOnly\": true,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_6c5dfad6cc3d45d8b8eaf30d",
      "_type": "request",
      "parentId": "fld_aee9f23e50524d85a9aa75ed",
      "name": "Enroll card-STATIC-tokenOnly=true",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"2221191173191483\",\n    \"expiryDate\": \"1227\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"000\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"STATIC-tokenOnly-true-{{ _['pi-core-service_$randomInt'] }}\",\n    \"tokenType\": \"STATIC\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_7d165a45e8a844848072de97",
      "_type": "request",
      "parentId": "fld_aee9f23e50524d85a9aa75ed",
      "name": "Enroll card-STATIC-tokenOnly=true Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"2221191173191483\",\n    \"expiryDate\": \"1227\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"000\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"STATIC-tokenOnly-true-{{ _['pi-core-service_$randomInt'] }}\",\n    \"tokenType\": \"STATIC\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_afa022a064774e1e8ee12e6d",
      "_type": "request",
      "parentId": "fld_aee9f23e50524d85a9aa75ed",
      "name": "Enroll card-CLOUD-tokenOnly=true(lot of supportedIssuerAuthMethods also available for this card)",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5207990300000066\",\n    \"expiryDate\": \"1227\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"CLOUD-tokenOnly-true-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenOnly\": true,\n    \"tokenType\": \"CLOUD\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_b361123d1f114d0a876a1033",
      "_type": "request",
      "parentId": "fld_aee9f23e50524d85a9aa75ed",
      "name": "Enroll card-CLOUD-tokenOnly=false",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"2225154040184673\",\n    \"expiryDate\": \"1227\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"CLOUD-tokenOnly-false-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenOnly\": false,\n    \"tokenType\": \"CLOUD\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_4546fa83b94041738fbf61b3",
      "_type": "request",
      "parentId": "fld_aee9f23e50524d85a9aa75ed",
      "name": "https://blue-src-mtf-synapse-test-harness.apps.del.trd-prod-pas.mastercard.int/api/callWithPrism",
      "method": "POST",
      "url": "https://blue-src-mtf-synapse-test-harness.apps.del.trd-prod-pas.mastercard.int/api/callWithPrism",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"2223520120139831\",\n    \"expiryDate\": \"0433\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"null\",\n    \"consumerId\": \"gladys123-20002\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#M4S_MTF_TESTING-M4S_MERCHANT_2#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "m4-test-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "ACCA8D5B",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_5222f9e47867436c85633a05",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}-mani-itf",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_a8a570eed24b4478ad984149",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5337838950064580\",\n    \"expiryDate\": \"0936\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"000\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}-mani-itf",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_d8780139dafc46fe8642411e",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized-BFC-type-CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"requestorInfo\": {\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}-mani-itf",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_6012348bf0aa4df7bed7f995",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized-Hardcoded",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5204531050414538\",\n    \"expiryDate\": \"1224\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"accountInfoNeeded\": true,\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"tokenType\": \"CLOUD\",\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "regular-enroll-test-macs-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_b601f25b5a294298a7a63da1",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized-BFC-type-STATIC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"HardCodedprimaryAccountNumber\": \"2221190428633331\",\n    \"expiryDate\": \"0438\",\n    \"tokenRequestorId\": \"50127530524\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50127530524\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "test-wargame2-macs-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_5d8e220bfca44dd1a9d9ed1e",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized orphan HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5208010259142832\",\n   \"expiryDate\": \"1130\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": null,\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "test-enroll-now-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_a3640384370f4b5894731926",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized-random-pull-from-array-ORPHAN",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_expiryDate'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"{{ _['pi-core-service_primaryAccountNumberSource'] }}\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": null,\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\n// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_bff006ad05624779acc26b06",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized-random-pull-from-array-with-consumerid",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n   \"expiryDate\": \"{{ _['pi-core-service_expiryDate'] }}\",\n   \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n   \"primaryAccountNumberSource\": \"{{ _['pi-core-service_primaryAccountNumberSource'] }}\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"John Doe\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\n// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_95bbdb5c6bee405f8e7a2f6f",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll-CLOUD-card-tokenized-random-pull-from-array-with-decision-and-address",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_expiryDate'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"{{ _['pi-core-service_primaryAccountNumberSource'] }}\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enrollmentType\": null,\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "perseverence-1-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "perseverence-cvs-address-failure-1",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\n// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\n// var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\n//let jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\n//insomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_fa9793af2f34417492665195",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll-STATIC-card-tokenized-random-pull-from-array-with-decision-and-address",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_expiryDate'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"{{ _['pi-core-service_primaryAccountNumberSource'] }}\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}-testdatapers",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Microsoft_Autofill#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_4bae2baae0b04f9fae9f28f8",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll-Explicit-CLOUD-card-tokenized-random-pull-from-array-with-decision-and-address",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_expiryDate'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"{{ _['pi-core-service_primaryAccountNumberSource'] }}\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"tokenType\": \"CLOUD\",\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}-testdatapers",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Microsoft_Autofill#01",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_aa0e9a84799143f8a4d4329d",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized adyen PROGRAM_ID",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n   \"expiryDate\": \"0828\",\n   \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test11\",\n   \"consumerId\": \"consumerid-{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV_MTFDEV_TEST-GIFFGAFF#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_bec8ffc8c56e4440917b5f69",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized adyen PROGRAM_ID",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n   \"expiryDate\": \"0828\",\n   \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test11\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}-112\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-AUTOPASS_SA#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_623760e338384b7fb3e7f9d0",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll ORPHAN-card-tokenized-random-pull-from-array",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n   \"expiryDate\": \"{{ _['pi-core-service_expiryDate'] }}\",\n   \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n   \"primaryAccountNumberSource\": \"{{ _['pi-core-service_primaryAccountNumberSource'] }}\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": null,\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanOrphanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_92764cc240f74168986cec20",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll ORPHAN-STATIC-card-tokenized-random-pull-from-array-with-decision-and-address",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_expiryDate'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"{{ _['pi-core-service_primaryAccountNumberSource'] }}\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": null,\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanOrphanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_261b4839c80e4ffaa7d6903a",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll ORPHAN-CLOUD-card-tokenized-random-pull-from-array-with-decision-and-address",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_expiryDate'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"{{ _['pi-core-service_primaryAccountNumberSource'] }}\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": null,\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"tokenType\": \"CLOUD\",\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanOrphanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_8bc6a4f4bc1946b48aa38885",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll ORPHAN Card",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5207980045229039\",\n   \"expiryDate\": \"0828\",\n   \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"John Doe\",\n   \"consumerId\": null,\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanOrphanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_c26ec5ac6ee941b6a35fdfaa",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll ORPHAN Card HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5207980045229039\",\n   \"expiryDate\": \"0828\",\n   \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"John Doe\",\n   \"consumerId\": null,\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\n// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanOrphanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_f7114f11783f4dec984fd48b",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-STATIC-tokenized-FPAN (BFF)-50136141297",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5208010259142832\",\n    \"expiryDate\": \"1138\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"mani\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_a057056cd78e4c8e8e5909f2",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "[MTF]Enroll card-STATIC-tokenized-FPAN (BFF)-50108861227",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5120340000000053\",\n    \"expiryDate\": \"{{ _['pi-core-service_expiryDate'] }}\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50108861227\",\n    \"primaryAccountNumberSource\": \"{{ _['pi-core-service_primaryAccountNumberSource'] }}\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"mani\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Inc-GOOGLE_e2e_perf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_027db6a32042448fae90234e",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-STATIC-tokenized-FPAN without Address and specific enrollmentType (BFF)-50136141297",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5207980040163043\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"tokenType\": \"STATIC\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_ce3f3059235d4fe3ae30a450",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-STATIC-by-TUR (BFT)-50175815454",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenType\": \"STATIC\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"tokenOnly\": true,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_13dcee95ae47416f922eff64",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-STATIC-by-TUR (BFT)-50175815454 HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC000000000LSCKX3LJLORMP5LSINNGHYS4YABGST318Y\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenType\": \"STATIC\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#Perf-Manitoba#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "mani-corr-test-2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_0bf85dee1353451eac6c5a58",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "[MTF]Enroll card-STATIC-by-TUR (BFT)-50175815454",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DAPLMC0000144136d8a0cf5e769046398471f42e33ad26f5\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenType\": \"STATIC\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"tokenOnly\": true,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_mtf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_1a076d5987eb4105bdc2097a",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "[MTF]Enroll card-STATIC-by-TUR -50195247043",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DSAPMC0000144136089f895956b54e43b8b9b70e87ad8a2f\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenType\": \"STATIC\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50195247043\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"tokenOnly\": true,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_40f228d8ec634f5fb8a8f187",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "[MTF]Enroll card-STATIC-by-PUR (BFT)-50175815454",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"\",\n    \"panUniqueReference\": \"FM4MMC00001441368f068200cd304c9caf99b64c7010ef2f\",\n    \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n    \"enrollmentSourceReference\": \"panUniqueReference\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"expiryDate\": \"0831\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_mtf#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//program_id? SRC_C2P#C2P_COF or SRC\n\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_purbasedCoBrandEnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_3e4a58b832214f8eb6338492",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-STATIC-by-TUR (BFT) - 50136141297",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenType\": \"STATIC\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"tokenOnly\": true,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_20b3f607b56b4b8181d55507",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized HARDCODED-cardArt",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"2221193671575464\",\n   \"expiryDate\": \"0734\",\n   \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_75bfeb5fc1d04c98b81e0a13",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized HARDCODED-50122967937",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"2221193671575464\",\n   \"expiryDate\": \"0734\",\n   \"tokenRequestorId\": \"50122967937\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-SPOTIFY#01_MC01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_cb74c4b828a246899e2261ae",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized HARDCODED-cardArt-another-one",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5204248992891489\",\n   \"expiryDate\": \"0524\",\n   \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_bc4269e5b1644b5b961fb38a",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized-tokenOnly=true-mdes-will-give-Tokenization Ineligible-TOKENIZATION_INELIGIBLE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5204248750703595\",\n   \"expiryDate\": \"1123\",\n   \"tokenRequestorId\": \"50122967937\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"tokenOnly\": true\n}\n//\"tokenOnly\": false or completly missing or not sending\n// It does fallback in case of PAN_INELIGIBLE error from MDES tokenize call\n//if you pass tokenOnly = true, the card won't be created, but if you don't pass tokenOnly=false or missing then FPAN fallback will happen (no TUR/PUR generated. just a card created)"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(422);\n\ninsomnia.test(\"Unprocessable Entity Code 422:\", function () {\n    pm.response.to.have.status(422);\n    pm.response.to.be.ok;\n});\n\nconst code = jsonData.errors[0].code;\ninsomnia.expect(code).to.be.equals(\"TOKENIZATION_INELIGIBLE\");\n\ninsomnia.test(\"errorCode is equals to TOKENIZATION_INELIGIBLE\", () => {\n    const code = jsonData.errors[0].code;\n    insomnia.expect(code).to.be.equals(\"TOKENIZATION_INELIGIBLE\");\n});"
    },
    {
      "_id": "req_1200dcb42967477b8a94a179",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized-tokenOnly=false-mdes-will-give-Tokenization Ineligible-TOKENIZATION_INELIGIBLE-but-fallback-happens-just-card-created-but-no-TUR-PUR",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5204248750703595\",\n   \"expiryDate\": \"1123\",\n   \"tokenRequestorId\": \"50122967937\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"tokenOnly\": false\n}\n//\"tokenOnly\": false or completly missing or not sending\n// It does fallback in case of PAN_INELIGIBLE error from MDES tokenize call\n//tokenOnly=false-mdes-will-give-Tokenization Ineligible-TOKENIZATION_INELIGIBLE-but-fallback-happens-just-card-created-but-no-TUR-PUR\n\n//if you pass tokenOnly = true, the card won't be created, but if you don't pass tokenOnly=false or missing then FPAN fallback will happen (no TUR/PUR generated. just a card created)"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanFallbackEnrollmentSchemaWithAuthmethosAndissuerCustomerId'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_9d3d4cdc42fe4f3f8b78f4a9",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized-donor-pan-just-different-pan-thats-it",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"{{ _['pi-core-service_donerPrimaryAccountNumber'] }}\",\n   \"expiryDate\": \"0828\",\n   \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_8c1e937d1d8c4b7dbe2127af",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized-for-single-transact-PAN",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5424150109290650\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_ee4e97ab53ca4fa3bfbc1ad9",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-non-tokenized",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber-non-tokenized'] }}\",\n   \"expiryDate\": \"0830\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"kfuehf\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanNonTokenizedEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_24c255c17e0e41a1a2ad92d8",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-NON-TOKENIZED-HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5400177973663041\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\n// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanNonTokenizedEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_a5c6b5a5ca8949b7a0718eb2",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-NON-TOKENIZED-HARDCODED orphan",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5400177973663041\",\n    \"expiryDate\": \"0825\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"John Doe\",\n    \"consumerId\": null,\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\n// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanNonTokenizedEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_a52153037d5c41889769ea86",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-NON-TOKENIZED-HARDCODED enrollAsFpanOnly=true",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5337838950064580\",\n   \"expiryDate\": \"0827\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"mani\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"enrollAsFpanOnly\": true\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanNonTokenizedEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_3f1f56ddb0b6438984cdd245",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-NON-TOKENIZED-HARDCODED orphan",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5337838950064580\",\n   \"expiryDate\": \"0827\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"mani\",\n   \"consumerId\": null,\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\n// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanNonTokenizedEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_f69623eb7148472a82cabd84",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-tokenized-with-Address",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"0830\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"cardHolderName\": \"John Doe MANi\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line2\": \"whatever\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_b747b636c4ea4cbf88913a89",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with APPLE-DEVICE-TUR-default-CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_deviceTokenUniqueReference'] }}\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"apple-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_deviceTurTokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"{{ _['pi-core-service_deviceTurPrimaryAccountNumberSource'] }}\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "apple-tur-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_2859dcc317814e54ae09ccbc",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with APPLE-DEVICE-TUR-Hardcoded",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DAPLMC00001143934908e288de5d42648ba32105aca2e321\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"apple-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n\n\n\n// Stage token\n//DM4MMC00001143934713a2e1c02043b4820166d0532082e7\n//DM4MMC00000000014be67e2beb62453e8d245e317ec60b31"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "apple-tur-test-4",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_ddfdd332d17f47149bb948ff",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with APPLE-DEVICE-TUR-tokenType-interpolation",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_deviceTokenUniqueReference'] }}\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenType\": \"{{ _['pi-core-service_deviceTurTokenType'] }}\",\n    \"consumerId\": \"apple-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_deviceTurTokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"{{ _['pi-core-service_deviceTurPrimaryAccountNumberSource'] }}\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "apple-tur-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_73eb60ea15ea4c06a6fa383c",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with APPLE-DEVICE-PUR-tokenType-interpolation",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"\",\n    \"panUniqueReference\": \"{{ _['pi-core-service_devicePanUniqueReference'] }}\",\n    \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n    \"enrollmentSourceReference\": \"panUniqueReference\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenType\": \"{{ _['pi-core-service_deviceTurTokenType'] }}\",\n    \"consumerId\": \"apple-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_deviceTurTokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"{{ _['pi-core-service_deviceTurPrimaryAccountNumberSource'] }}\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "apple-tur-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_0d1a7c2509ac4d8ab9b6f610",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with FPAN SOURCE APPLE-E2E-DONOR-50122967937",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"0830\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"cardHolderName\": \"John Doe MANi\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line2\": \"whatever\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n//console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_40ea487059c74bc89bcad9b6",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with TUR APPLE-E2E-DONOR-TRID-50122967937",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_sourceTokenUniqueReference'] }}\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"apple-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n//50123197928\n//50191159210 --MPAN - Apple as Merchant : Direct Merchant Program\n//50122967937 -- E2E apple trid\n//50126482381 -- DEV apple trid\n// 50171022951 -- DEV apple TRID\n//{{ _['pi-core-service_donorTokenRequestorId'] }}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "apple-tur-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_eeb6f9e679af489ab6666de2",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with PUR APPLE-E2E-DONOR-TRID-50122967937",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"tokenUniqueReference\": \"\",\n   \"panUniqueReference\": \"{{ _['pi-core-service_sourcePANUniqueReference'] }}\",\n   \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n   \"enrollmentSourceReference\": \"panUniqueReference\",\n   \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"existing_credential\": \"EXISTING_CREDENTIAL\",\n   \"clientRoutingId\": \"clientRoutingId\",\n   \"primaryAccountNumber\": \"\",\n   \"expiryDate\": \"0831\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50122967937\",\n   \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"John Doe\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n\t\"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//program_id? SRC_C2P#C2P_COF or SRC\n\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_purbasedCoBrandEnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_fbe65b50d2464263af2b44f5",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with FPAN SOURCE BFF STATIC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5207980040163043\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenOnly\": true,\n    \"tokenType\": \"STATIC\",\n    \"expiryDate\": \"0829\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Jane Doe\",\n    \"consumerId\": \"bff-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line2\": \"whatever\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n//console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_809b29882c9a49dea84ee8dd",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with TUR BFF STATIC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_sourceTokenUniqueReference'] }}\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"tur-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n//50123197928\n//50191159210 --MPAN - Apple as Merchant : Direct Merchant Program\n//50122967937 -- E2E apple trid\n//50126482381 -- DEV apple trid\n// 50171022951 -- DEV apple TRID\n//{{ _['pi-core-service_donorTokenRequestorId'] }}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "apple-tur-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_74257305c02e4388b024cf40",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with PUR BFF STATIC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"tokenUniqueReference\": \"\",\n   \"panUniqueReference\": \"{{ _['pi-core-service_sourcePANUniqueReference'] }}\",\n   \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n   \"enrollmentSourceReference\": \"panUniqueReference\",\n   \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"existing_credential\": \"EXISTING_CREDENTIAL\",\n   \"clientRoutingId\": \"clientRoutingId\",\n   \"primaryAccountNumber\": \"\",\n   \"expiryDate\": \"0831\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50136141297\",\n   \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"John Doe\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n\t\"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//program_id? SRC_C2P#C2P_COF or SRC\n\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_purbasedCoBrandEnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_9480a7a245834535b1275084",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with FPAN SOURCE BFF CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5207980040163043\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenOnly\": true,\n    \"tokenType\": \"CLOUD\",\n    \"expiryDate\": \"0829\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Jane Doe\",\n    \"consumerId\": \"bff-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line2\": \"whatever\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Inc-GOOGLE_e2e_itf#01",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n//console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_bac5852167c44231a8a855b1",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with FPAN SOURCE TRID -50123197928",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"0830\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": 123,\n    \"cardHolderName\": \"John Doe MANi\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line2\": \"whatever\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n//console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_17eeb126bbff4aa188baa5b7",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with PUR-Another-TRID-50123197928",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"tokenUniqueReference\": \"\",\n   \"panUniqueReference\": \"{{ _['pi-core-service_sourcePANUniqueReference'] }}\",\n   \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n   \"enrollmentSourceReference\": \"panUniqueReference\",\n   \"enrollmentProviderId\": \"enrollmentProviderId\",\n   \"existing_credential\": \"EXISTING_CREDENTIAL\",\n   \"clientRoutingId\": \"clientRoutingId\",\n   \"primaryAccountNumber\": \"\",\n   \"expiryDate\": \"0831\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"apple-zoeghf@testconsumer.net\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": false,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n\t\"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//program_id? SRC_C2P#C2P_COF or SRC\n\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_purbasedCoBrandEnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_80b836639bc14d65b63b2b04",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with TUR-TRID-50123197928",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC0000114393bd521c5a6cdc46e3b40ecd61990e2d10\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_957d9c302b634324b819bf7d",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card with TUR-TRID-50123197928 - same consumerid-as-source-FPAN-enroll",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC0000114393a3b7594533e4411daa1bcf48bbd15a15\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"2dac466e-96e8-4d5f-b3e3-80825185b309\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\nconsole.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_144d835ff0c042d59de15652",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll Source Card for Migration - tokenRequestorId must match",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n   \"expiryDate\": \"0927\",\n   \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"Milestone Test\",\n   \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-AUTOPASS_SA#01",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_d49edc4f1dd34a579222fcf6",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Delete card by cardId unmigrate-token=true for Migrate Token Enrollment",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?unmigrate-token=true",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "unmigrate-token",
          "value": "true"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-AUTOPASS_SA#01",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one method and url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\n\n// insomnia.environment.set('pi-core-service_cardId', \"Z7VQqDwDQYiAz80_VO7sxw000000000000US\");\n\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deleteCardSchema'));\r\nconsole.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\n//pm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\n// insomnia.test('response matches JSON schema', () => {\r\n//     pm.response.to.have.jsonSchema(expectedSchema);\r\n// });"
    },
    {
      "_id": "req_2e0b13034a1f46559d8f9291",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Delete card by cardId unmigrate-token=true for Migrate Token Enrollment-ProgramId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?unmigrate-token=true",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "unmigrate-token",
          "value": "true"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}WPV6rcglR6-qh8a3qMPnzA000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-AUTOPASS_SA#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one method and url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deleteCardSchema'));\r\nconsole.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\n//pm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\n// insomnia.test('response matches JSON schema', () => {\r\n//     pm.response.to.have.jsonSchema(expectedSchema);\r\n// });"
    },
    {
      "_id": "req_34f79c886b06411abbc93a26",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-Migrate Token",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC1US0000000ffd7b891700244d1b260022096244487\",\n    \"enrollmentType\": \"MIGRATE_TOKEN\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n    \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"nc-pod1-smp.merchant.com:443\",\n    \"clientSiteId\": \"http://merchant-migration.com\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Data from downstream simulator:\n//Maestro - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f58\n//Mastercard - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f56\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\n// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_migrateTokenEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_e0a8432152604dafb1a07db2",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-SOURCE-Samsung-pay-wallet(SPW)",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DSAPMC00001441369d822754ee70403ab51f6be655914786\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50195247043\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#SAMSUNGPAY_CLICK_TO_PAY#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\n//console.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_6bf7901fa30244caa2a1aa63",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Delete card by cardId unmigrate-token=true for Migrate Token Enrollment samsung-pay-wallet(SPW)",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?unmigrate-token=true",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "unmigrate-token",
          "value": "true"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#SAMSUNGPAY_CLICK_TO_PAY#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one method and url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deleteCardSchema'));\r\nconsole.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\n//pm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\n// insomnia.test('response matches JSON schema', () => {\r\n//     pm.response.to.have.jsonSchema(expectedSchema);\r\n// });"
    },
    {
      "_id": "req_24418eaab8a84b069d9767be",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-Migrate Token -Samsung-pay-wallet(SPW)",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC0000144136cb57810e495e46158a71ef64f86bc2c4\",\n    \"enrollmentType\": \"MIGRATE_TOKEN\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n    \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50195247043\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"nc-pod1-smp.merchant.com:443\",\n    \"clientSiteId\": \"http://merchant-migration.com\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n// Before Migrate token, you need to delete card using unmigrate-token = true flag and then, use the same TUR value again here with enrollmentType migrate_token"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#SAMSUNGPAY_CLICK_TO_PAY#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Data from downstream simulator:\n//Maestro - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f58\n//Mastercard - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f56\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_migrateTokenEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_b91497d7993e46169fecc048",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-Migrate-RETRY-TOKEN_MIGRATION_NOT_ELIGIBLE-Error",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC00001182543624cdbdab7f445dab790331e2d95613\",\n    \"enrollmentType\": \"MIGRATE_TOKEN\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n    \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"nc-pod1-smp.merchant.com:443\",\n    \"clientSiteId\": \"http://merchant-migration.com\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n\n// Before Migrate token, you need to delete card using unmigrate-token = true flag and then, use the same TUR value again here with enrollmentType migrate_token"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#M4S_MTF_TESTING-M4S_MERCHANT_2#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "src-mdes-adyen-after-fix-6",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Data from downstream simulator:\n//Maestro - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f58\n//Mastercard - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f56\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_migrateTokenEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_49782157ac614bf0827c9b1a",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-Migrate Token-50122967937",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC0000118254f5ed70d9793c422bb71d0ce68d2c567b\",\n    \"enrollmentType\": \"MIGRATE_TOKEN\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n    \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"nc-pod1-smp.merchant.com:443\",\n    \"clientSiteId\": \"http://merchant-migration.com\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n\n// Before Migrate token, you need to delete card using unmigrate-token = true flag and then, use the same TUR value again here with enrollmentType migrate_token\n\n//consumerId-8b953a0d-5b5d-476b-ad36-176b3f1267a9"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-SPOTIFY#01_MC01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "src-mdessdfsdg-re-migrate-test-1-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Data from downstream simulator:\n//Maestro - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f58\n//Mastercard - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f56\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_migrateTokenEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_c46fa26374a54cd7b470e766",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-Migrate Token-50123197928",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC0000114393ed72b2e7919c4b6d8df523726a84b71a\",\n    \"enrollmentType\": \"MIGRATE_TOKEN\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n    \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"nc-pod1-smp.merchant.com:443\",\n    \"clientSiteId\": \"http://merchant-migration.com\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n\n// Before Migrate token, you need to delete card using unmigrate-token = true flag and then, use the same TUR value again here with enrollmentType migrate_token\n\n//consumerId-8b953a0d-5b5d-476b-ad36-176b3f1267a9"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "src-mdessdfsdg-re-migrate-test-2-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Data from downstream simulator:\n//Maestro - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f58\n//Mastercard - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f56\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_migrateTokenEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_6977e07b3c064c11a886edc4",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-Migrate Token-50191159210",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC000000000NXSYWRRVLQSYCJF8TBDZHWVIVRYFQAIVTP\",\n    \"enrollmentType\": \"MIGRATE_TOKEN\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n    \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"nc-pod1-smp.merchant.com:443\",\n    \"clientSiteId\": \"http://merchant-migration.com\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n\n// Before Migrate token, you need to delete card using unmigrate-token = true flag and then, use the same TUR value again here with enrollmentType migrate_token\n\n//consumerId-8b953a0d-5b5d-476b-ad36-176b3f1267a9"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-SPOTIFY#01_MC01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "src-mdessdfsdg-re-migrate-test-1-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Data from downstream simulator:\n//Maestro - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f58\n//Mastercard - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f56\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_migrateTokenEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_9f630cc3f39942dfa88093f6",
      "_type": "request",
      "parentId": "fld_a6ca82e373ef41b6809441a6",
      "name": "Enroll card-Migrate Token-50117672900",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC0000143432848acd7590f047cb9e336d8b1e160b99\",\n    \"enrollmentType\": \"MIGRATE_TOKEN\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n    \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50117672900\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"nc-pod1-smp.merchant.com:443\",\n    \"clientSiteId\": \"http://merchant-migration.com\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n\n// Before Migrate token, you need to delete card using unmigrate-token = true flag and then, use the same TUR value again here with enrollmentType migrate_token\n//consumerId-8b953a0d-5b5d-476b-ad36-176b3f1267a9"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-AUTOPASS_SA#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "src-mdessdfsdg-re-migrate-test-1-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Data from downstream simulator:\n//Maestro - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f58\n//Mastercard - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f56\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_migrateTokenEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "fld_ed62cb0f062345b2bbd13a9b",
      "_type": "request_group",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "WALLET API"
    },
    {
      "_id": "req_fa507a2b5c5f49a6bbf1474a",
      "_type": "request",
      "parentId": "fld_ed62cb0f062345b2bbd13a9b",
      "name": "Set program-id",
      "method": "GET",
      "url": "{{ _['pi-core-service_cardservice-stage-url'] }}/api/actuator/health",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// insomnia.environment.set('pi-core-service_program-id', \"SRC\");     //Click2Pay\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\");      //SRC4X\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#Manitoba-E2EDonorProgram#01\");\r\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#ApplePayCert#01\");\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"AUTOFILL#Google_Inc-GOOGLE_e2e_stage#01\");    //BFF\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01\");\r\n\r\n// insomnia.environment.set('pi-core-service_program-id', \"\");\r\n\r\n//insomnia.environment.set('pi-core-service_program-id', \"C2P#SAMSUNG_WALLET#01\");\r\ninsomnia.environment.set('pi-core-service_program-id', \"SRC_C2P#SAMSUNGPAY#01\t\");",
      "afterResponseScript": ""
    },
    {
      "_id": "req_55dc8dcfff084835a946cb86",
      "_type": "request",
      "parentId": "fld_ed62cb0f062345b2bbd13a9b",
      "name": "Enroll wallet",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"card\": {\n        \"prefix\": \"512035\",\n        \"suffix\": \"7782\",\n        \"productConfig\": {\n            \"cardArtUrl\": \"https://stage.assets.mastercard.com/card-art/combined-image-asset/MyBank-mastercard.png\",\n            \"shortDescription\": \"mastercard\"\n        }\n    },\n    \"consumer\": {\n        \"id\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n    },\n    \"metadata\": {\n        \"countryInfo\": {\n            \"format\": \"ALPHA2\",\n            \"code\": \"US\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}wallets/enroll",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'),\"wallets/enroll\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.card.id);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.consumer.id);\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_consumerIdInRequest', jsonReqData.consumer.id);"
    },
    {
      "_id": "req_3cc34fced25448ce80e423f4",
      "_type": "request",
      "parentId": "fld_ed62cb0f062345b2bbd13a9b",
      "name": "Get Wallet by cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_78db3a83301249ed948f263e",
      "_type": "request",
      "parentId": "fld_ed62cb0f062345b2bbd13a9b",
      "name": "Get Wallet by ConsumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_consumerId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/consumer/{consumerId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_7ccb2331917e48f1a44d6d6f",
      "_type": "request",
      "parentId": "fld_ed62cb0f062345b2bbd13a9b",
      "name": "Delete Wallet by cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one method and url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Optional - clear variables for deleted card\r\n// insomnia.environment.set('pi-core-service_cardId', \"\");\r\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', \"\");\r\n// // insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', \"\");\r\n// // insomnia.environment.set('pi-core-service_sourcePANUniqueReference', \"\");\r\n// insomnia.environment.set('pi-core-service_consumerId', \"\");\r\n\r\n// insomnia.environment.set('pi-core-service_tokenRequestorId', \"\");"
    },
    {
      "_id": "fld_514a3ffb351347e19c9095ce",
      "_type": "request_group",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Reference-only enroll scenarios"
    },
    {
      "_id": "req_03090de9105945b6a557449a",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card-tokenized TOKENIZATION_INELIGIBLE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5438570040000310\",\n    \"expiryDate\": \"1122\",\n    \"pushAccountReceipt\": null,\n    \"tokenRequestorId\": \"50164702489\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"479\",\n    \"cardHolderName\": \"John Kent5\",\n    \"consumerId\": null,\n    \"programId\": null,\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"tokenOnly\": true,\n    \"address\": {\n        \"line1\": \"line1\",\n        \"line2\": null,\n        \"line3\": null,\n        \"line4\": null,\n        \"city\": null,\n        \"countrySubDivision\": null,\n        \"postalCode\": \"123456\",\n        \"country\": null\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"supportedCountries\": [\n        \"840\"\n    ],\n    \"notSupportedCountries\": null,\n    \"tokenUniqueReference\": null,\n    \"enrollmentType\": null,\n    \"panUniqueReference\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPointUri'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}_santosh_92222229",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n//set synapse endPoint header url\ninsomnia.environment.set('pi-core-service_endPointUri', insomnia.environment.get('pi-core-service_endPoint') + insomnia.environment.get('pi-core-service_card'));\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\n\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_d5d0afd77c274a1b8f49c45e",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card-tokenized - Address",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031509212647\",\n   \"expiryDate\": \"0830\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"zoeabcd4@testconsumer.com\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n    \"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_855f8667d4ff4a2f902faaf1",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card-tokenized - Yellow Path - DecisioningData",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031509212647\",\n   \"expiryDate\": \"0830\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"zoeabd2@testconsumer.com\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_78699e38d71b4065bb53d2cc",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card-tokenized - Yellow Path - Address and DecisionData",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031509212647\",\n   \"expiryDate\": \"0830\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"zoea12@testconsumer.com\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_c129e62aad554be48b5aa5e6",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card-tokenized - Green Path",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5400170000000006\",\n   \"expiryDate\": \"0830\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"zoe113@testconsumers1.com\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"APPROVED\"\n    }\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_14fce9f2a802453faaa2783f",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card-non-tokenized - Yellow Path - 3DS (442-luxembourg)",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5204290703576918\",\n   \"expiryDate\": \"0830\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"zoepp@testconsumernet.net\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_37578f6947034af2ad8b05dd",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card-non-3DS, tokenized, supportsAuth=true",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031500050657\",\n   \"expiryDate\": \"0831\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"zoerrrr@test.net\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n\t\"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_0f26be6bf47b424695d2a6d2",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card-non-3DS, tokenized, supportsAuth=false",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031767911146\",\n   \"expiryDate\": \"0828\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"zoaddddd@testconsumer.net\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n\t\"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_4d523088e2414f87acf8ad5d",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card-3DS, non-tokenized, supportsAuth=true",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5665561728375557\",\n   \"expiryDate\": \"0830\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"zoexf@testconsumernet.net\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n\t\"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPointUri'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_2bd20511748243a89cf30530",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card-3DS, non-tokenized, supportsAuth=false",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5196670113245297\",\n   \"expiryDate\": \"0826\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"zogggg@testconsumernet.net\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n\t\"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//non-tokenized w/ positive response from bnc, cvc2, avs\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_72ff82cb861a4126bf9d8bb1",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card-non-3DS, non-tokenized, supportsAuth=false",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5400170000064598\",\n   \"expiryDate\": \"0827\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"zoieee@testconsumernet.net\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n\t\"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//non-tokenized w/ positive response from bnc, cvc2, avs\n//test data, non-tokenized, BNC 85, CVC U, AVS W:\n/*\n5400170000000055\n*/",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_9215ef38d7724225b7f05bc3",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card Donor Program",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n   \"expiryDate\": \"1037\",\n   \"tokenRequestorId\": \"50122967937\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"positive\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"enrollmentProviderId\":\"c915184f-c22a-4cc8-96a3-09420aa5e228\",\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n\t\"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//check program-id - SECURE_COF_COMMERCE_PLATFORM#ApplePayCert#01\n\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n//set synapse endPoint header url\ninsomnia.environment.set('pi-core-service_endPointUri', insomnia.environment.get('pi-core-service_endPoint') + insomnia.environment.get('pi-core-service_card'));\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\n\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//response taking cardId and assigning to veriable\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePanUniqueReference', jsonData.cardMetaData.panUniqueReference);\nconsole.log(\"======== tokenUniqueReference : \"+ insomnia.environment.get('pi-core-service_sourceTokenUniqueReference'));\nconsole.log(\"======== panUniqueReference : \"+ insomnia.environment.get('pi-core-service_sourcePanUniqueReference'));\n\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);"
    },
    {
      "_id": "req_df963747b0bc48baa79c7064",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card TokenUniqueReference",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_sourceTokenUniqueReference'] }}\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenRequestorId\": \"50191159210\",\n    \"consumerId\": \"testing_29196\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"c915184f-c22a-4cc8-96a3-09420aa5e228\",\n\n    \"clientSiteId\": \"http://apple.com-mcs-xpod777777\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "X-MDES-RECOMMENDATION",
          "value": "card_auth_yellow",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n//set synapse endPoint header url\ninsomnia.environment.set('pi-core-service_endPointUri', insomnia.environment.get('pi-core-service_endPoint') + insomnia.environment.get('pi-core-service_card'));\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\n\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/",
      "afterResponseScript": "//response taking cardId and assigning to veriable\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\nconsole.log(\"======== tokenUniqueReference : \"+ insomnia.environment.get('pi-core-service_tokenUniqueReference'));"
    },
    {
      "_id": "req_3d674fb2328c4a3c8731ae43",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll source card",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n   \"expiryDate\": \"0830\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"zoesfgfgd@consumertest.net\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n\t\"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n//5455031000100002",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Get TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_d0fef6ec866f48acb9ae6d3b",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "tur base enrollment with clientSite",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\"tokenUniqueReference\": \"{{ _['pi-core-service_sourceTokenUniqueReference'] }}\",\n \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n \"enrollmentSourceReference\": \"tokenUniqueReference\",\n \"enrollmentProviderId\": \"enrollmentProviderId11112\",\n \"existing_credential\": \"EXISTING_CREDENTIAL\",\n \"expiryDate\": \"0830\",\n \"tokenRequestorId\": \"50191159210\",\n \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n \"consumerId\": \"apple-test6@testconsumer.net\",\n \"accountInfoNeeded\": false,\n \"clientRoutingId\": \"nc-pod1-smp.apple.com:443\",\n \"clientSiteId\": \"http://apple.com-xpod1\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', \"DM4MMC000000000RPU5JSXVDPPBMSAKRKIOUZ8DZTGLQ1YTQB\");\r\n\r\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_817c483b2f0c4e51a486f7d3",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "Enroll card-SRC4X",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"primaryAccountNumber\" : \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"1129\",\n    \"pushAccountReceipt\":\"\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"null\",\n    \"consumerId\": \"rrfhtddf7@testconsumers.net\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n\t\"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//program ids\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_5171690a2a034bd08726ae9a",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "https://blue-src-stage-synapse-test-harness.apps.stl.pcfstage00.mastercard.int/api/callWithPrism Copy",
      "method": "POST",
      "url": "https://blue-src-stage-synapse-test-harness.apps.stl.pcfstage00.mastercard.int/api/callWithPrism",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"DM4MMC000000000192e010ab505c4bca86d2ea64df2fb75d\"\n    },\n    \"credentialAuthData\": {\n        \"data\": \"AJeruEpUIjikAAISNFZ4GoADFA==\",\n        \"key\": \"DWSPMC00000000032d72d4ffcb2f4136a0532d32d72d4fcb\",\n        \"keyType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"type\": \"DSRP\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd80a1f-f13a-42c2-b141-17da8c287765-zoe971110",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/polytransactioncredentials",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "UP",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_5f00ede0a6524620883b8932",
      "_type": "request",
      "parentId": "fld_514a3ffb351347e19c9095ce",
      "name": "https://paymentinstrument-services-poly-with-mdes-mock.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/polytransactioncredentials Copy",
      "method": "POST",
      "url": "https://paymentinstrument-services-poly-with-mdes-mock.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/polytransactioncredentials",
      "body": {
        "mimeType": "application/json",
        "text": "{\n \"cardReference\": {\n \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n \"refValue\": \"DM4MMC00000000017f1c3cd62eb54b5bbacc6599380b078d\"\n },\n \"credentialAuthData\": {\n \"data\": \"AJeruEpUIjikAAISNFZ4GoADFA==\",\n \"key\": \"DWSPMC00000000032d72d4ffcb2f4136a0532d32d72d4fcb\",\n \"keyType\": \"TOKEN_UNIQUE_REFERENCE\",\n \"type\": \"DSRP\"\n },\n \"credentialRequests\": [\n {\n \"credentialRequestId\": \"1\",\n \"transaction\": {\n \"amount\": 10,\n \"currencyCode\": \"USD\"\n },\n \"transactionOptions\": {\n \"credentialType\": \"DTVC\",\n \"debitTokenRequested\": true,\n \"merchantIdentifier\": null\n },\n \"unpredictableNumber\": null\n }\n ],\n \"isCustomerStronglyAuthenticated\": true,\n \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd80a1f-f13a-42c2-b141-17da8c287765",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_68c8990e29264bbbbf29b2cb",
      "_type": "request_group",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Sngle Transaction"
    },
    {
      "_id": "req_e48d25d6c1d14c72a658116b",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Tokenized Card but FPAN Requested is true UCAF_FORMAT_0",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardId\":\"{{ _['pi-core-service_cardId'] }}\",\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": false,\n    \"fpanRequested\": true,\n    \"ucafFormat\": \"UCAF_FORMAT_0\",\n    \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\",\n    \"isCustomerStronglyAuthenticated\": false,\n    \"unpredictableNumber\": \"12345678\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}transactioncredentials/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_7229e86a655540d7af0e2bc2",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Tokenized Card but FPAN Requested is true UCAF_FORMAT_3",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardId\":\"{{ _['pi-core-service_cardId'] }}\",\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": false,\n    \"fpanRequested\": true,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\",\n    \"isCustomerStronglyAuthenticated\": false,\n    \"unpredictableNumber\": \"12345678\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}transactioncredentials/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_cb5e47f6e7d741259bccb0de",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Tokenized Card but FPAN Requested is true-hardcoded",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardId\":\"33218b9b-d687-4ba4-8417-3a1bc9e51fd1\",\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": false,\n    \"fpanRequested\": true,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\",\n    \"isCustomerStronglyAuthenticated\": false,\n    \"unpredictableNumber\": \"12345678\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}transactioncredentials/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_daa14b07000545d3b3c24a35",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Tokenized Card -UCAF_FORMAT_0 requested_by_CARDID",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardId\":\"{{ _['pi-core-service_cardId'] }}\",\n    \"transactionId\": \"2b9b5725-0cad-4361-982b-9e576a32fd32\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": true,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_0\",\n    \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\",\n    \"isCustomerStronglyAuthenticated\": false,\n    \"unpredictableNumber\": \"12345678\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}transactioncredentials",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_fa3c5632924b49ca93c4e3d0",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Tokenized Card -UCAF_FORMAT_0 requested_by_CARDID_and_CONSUMERID",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardId\":\"{{ _['pi-core-service_cardId'] }}\",\n    \"consumerId\": \"{{ _['pi-core-service_consumerId'] }}\",\n    \"transactionId\": \"2b9b5725-0cad-4361-982b-9e576a32fd32\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": true,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_0\",\n    \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\",\n    \"isCustomerStronglyAuthenticated\": false,\n    \"unpredictableNumber\": \"12345678\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}transactioncredentials",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_b34054dca2a24c4884e4efa7",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Tokenized Card -UCAF_FORMAT_0 requested -hardcoded",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardId\":\"6ce9c3bc-2f75-4a85-9d6a-1ce3b498af0c\",\n    \"transactionId\": \"2b9b5725-0cad-4361-982b-9e576a32fd32\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": false,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_0\",\n    \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\",\n    \"isCustomerStronglyAuthenticated\": false,\n    \"unpredictableNumber\": \"12345678\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}transactioncredentials/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_5278112261cf45608b4a3504",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Tokenized Card - UCAF_FORMAT_3 requested_by_CARDID",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardId\":\"{{ _['pi-core-service_cardId'] }}\",\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": false,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\",\n    \"isCustomerStronglyAuthenticated\": false,\n    \"unpredictableNumber\": \"12345678\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}transactioncredentials/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_73e76b4e7fe64f99987695fa",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Tokenized Card - UCAF_FORMAT_3 requested_by_CARDID_and_CONSUMERID",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardId\":\"{{ _['pi-core-service_cardId'] }}\",\n    \"consumerId\": \"{{ _['pi-core-service_consumerId'] }}\",\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": false,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\",\n    \"isCustomerStronglyAuthenticated\": false,\n    \"unpredictableNumber\": \"12345678\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}transactioncredentials/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_c066d4c3a4c64eea84ebfde1",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Tokenized Card - UCAF_FORMAT_3 requestedhardcoded",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardId\":\"6c2a9c60-0e70-4a12-a349-41f1d8507ac4\",\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": false,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\",\n    \"isCustomerStronglyAuthenticated\": false,\n    \"unpredictableNumber\": \"12345678\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}transactioncredentials/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-UNIVERSEUM_AB#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_51f2f7c7384e48f7bea0e3da",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Tokenized Card -UCAF_FORMAT_0 requested_by_TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\":\"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": true,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_0\",\n    \"isCustomerStronglyAuthenticated\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_transactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//previously-set program id: SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\n\n//set method and Kick-one url: /paymentinstrument/src/1/0/transactioncredentials\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_transactioncredentials')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);"
    },
    {
      "_id": "req_4d5c8745f066406dbff927fa",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Tokenized Card -UCAF_FORMAT_0 requested_by_TUR_and_CONSUMERID",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\":\"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n    \"consumerId\": \"{{ _['pi-core-service_consumerId'] }}\",\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": true,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_0\",\n    \"isCustomerStronglyAuthenticated\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_transactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//previously-set program id: SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\n\n//set method and Kick-one url: /paymentinstrument/src/1/0/transactioncredentials\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_transactioncredentials')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);"
    },
    {
      "_id": "req_85a907701fa24abeb33d9b5a",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Tokenized Card - UCAF_FORMAT_3 requested_by_TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\":\"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": true,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"isCustomerStronglyAuthenticated\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_transactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//previously-set program id: SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\n\n//set method and Kick-one url: /paymentinstrument/src/1/0/transactioncredentials\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_transactioncredentials')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);"
    },
    {
      "_id": "req_ff8086d2aace4db8abe44195",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Tokenized Card - UCAF_FORMAT_3 requested_by_TUR _and_CONSUMERID",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\":\"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n    \"consumerId\": \"{{ _['pi-core-service_consumerId'] }}\",\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": true,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"isCustomerStronglyAuthenticated\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_transactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//previously-set program id: SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\n\n//set method and Kick-one url: /paymentinstrument/src/1/0/transactioncredentials\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_transactioncredentials')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);"
    },
    {
      "_id": "req_9087489268fd4323af88adf3",
      "_type": "request",
      "parentId": "fld_68c8990e29264bbbbf29b2cb",
      "name": "Transaction Credentials Non-tokenized Card",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardId\":\"f987f3e7-0df9-4087-a54c-6da6558efd52\",\n    \"transactionId\": \"900f9ea8-546a-4269-9374-4b7350db3e62\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": false,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\",\n    \"isCustomerStronglyAuthenticated\": false,\n    \"unpredictableNumber\": \"12345678\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}transactioncredentials/",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_f8e5f10c36e140ca90979e47",
      "_type": "request_group",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Polytransactioncredentials"
    },
    {
      "_id": "req_64ba26b2476a4453b48e1c43",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - DTVC - TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_dynamicCVC', jsonData.credentials[0].dynamicCVC);"
    },
    {
      "_id": "req_6e788cd395d44521965c221b",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - DTVC - cardId",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n// previous hard-coded transactionId\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_1fddb367db7f4e2dad0ca140",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - DTVC - cardId - Hardcoded",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"7kBWyf3HSVKTd027O-kNRg000000000000BR\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"fpanRequested\": true,\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "polytransaction-scof-dtvc-BR-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n// previous hard-coded transactionId\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_62355b8bcd04455987697030",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - DTVC with Invalid Issuer Country Code",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "issuer-country-code",
          "value": "G",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_537a054fa28a402191136e67",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - FPAN - TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"5\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\r\n\r\n//previous cardreference from body - gives invalid credential type error for fpan:\r\n// \"cardReference\": {\r\n//         \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\r\n//         \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\r\n//     },",
      "afterResponseScript": ""
    },
    {
      "_id": "req_787c2dab715342ecb334e0af",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - FPAN - cardId",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"5\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\r\n\r\n//previous cardreference from body - gives invalid credential type error for fpan:\r\n// \"cardReference\": {\r\n//         \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\r\n//         \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\r\n//     },",
      "afterResponseScript": ""
    },
    {
      "_id": "req_9fdfccc523bb402c9086ea76",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials-FPAN-cardId-fpanRequested",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"5\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\",\n    \"fpanRequested\": true\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Inc-GOOGLE_e2e_stage#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\r\n\r\n//previous cardreference from body - gives invalid credential type error for fpan:\r\n// \"cardReference\": {\r\n//         \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\r\n//         \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\r\n//     },",
      "afterResponseScript": ""
    },
    {
      "_id": "req_e5cb2aad4f8c415d882d0a09",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - UCAF_V0 - CARDID",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"transactionId-{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_c6b2ba824e04427b9f882a11",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - UCAF_V0 - CARDID Hardcoded",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"iMM-eu9WSpG7GFG5gAt0VQ000000000000BR\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        }\n    ],\n    \"fpanRequested\": false,\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"transactionId-{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "polytransaction-scof-BR-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_80e220e3be3f45d1b7ff26a3",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - UCAF_V3 - CARDID",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111112\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"transactionId-{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_472b2e53622841d69b2bc39f",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - UCAF_V3 - CARDID Hardcoded",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"1LY5G99CQpCwKKKdyOjBUg000000000000US\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111112\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"transactionId-{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "polytransaction-c2p-ucafv3-US-test-2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_ae793a285f1f4db3bb62eac7",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - UCAF_V3 - CARDID without merchant identifier",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false\n            },\n            \"unpredictableNumber\": \"11111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_469983b842174a338c0f837f",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - UCAF_V0 - UCAF_V3 - CARDID without merchant identifier",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"110\",\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false\n            },\n            \"unpredictableNumber\": \"E5F6A7A8\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_a4ddc3b99acb4a7388ab3062",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - CARD_ID - ALL - IN -ONE",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        },\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12339\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"fpanRequested\": true,\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"transactionId-{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "mani-vcn-poly-test-1",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_829963bd34ca4a53b09ceaa5",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - BACKFILL - CARD_ID - ALL - IN -ONE",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"80127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        },\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12339\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"fpanRequested\": true,\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"transactionId-{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "mani-vcn-poly-test-1",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_2a5b01ef1c1c4889a36606ac",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - CARD_ID - ALL - IN -ONE CARDID_STATUS_INACTIVE",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"transactionId-{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_b4644fdfea774f51ae137a52",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - UCAF_V0 - TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"transactionId-{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_322f0e139d1d4400a8e8429c",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - UCAF_V3 - TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"transactionId-{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_cb60dcd09a4840559a52c865",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - UCAF_V3 - TUR Direct MDES hit - First run bearer tokne",
      "method": "POST",
      "url": "https://mdes-transaction-cryptogram-service.apps.stl.pcfstage00.mastercard.int/mdes/internal/remotetransaction/transactions/cryptograms",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"706bbd62-3617-4462-9ba6-93f54cbfc0e0\",\n    \"tokenUniqueReference\": \"DM4MMC0000118254a376ccb8e47b431a9860a04cdb7a91df\",\n    \"responseHost\": \"stage.apigw.mc.int/src/itf/api/card-services\",\n    \"cryptogramRequestData\": [\n        {\n            \"transactionCryptogramId\": \"12332\",\n            \"isCustomerStronglyAuthenticated\": true,\n            \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\",\n            \"amount\": 10,\n            \"currencyCode\": \"USD\",\n            \"unpredictableNumber\": \"11111112\",\n            \"cryptogramType\": \"UCAF_V3\"\n        }\n    ]\n}\n\n// below works in ITF\n//to find data in splunk\n//index=* \"internal/remotetransaction/transactions/cryptograms\" status=200 \"DM4MMC1US*\" cf_app_name=\"mdes-transaction-cryptogram-service\"\n\n//mobileWalletApplicationId: SRCCLOUDDSRP\n//tokenRequestorId: 50123197928\n//DM4MMC0000118254a376ccb8e47b431a9860a04cdb7a91df\n\n//\n//DM4MMC1US0000000931293054bdd49b58be11b885378b712\n//DM4MMC1US0000000bbe1609faa36491ba99c62819fda79b5\n//DM4MMC1US0000000b6d291d149884157aef86d207c551cab\n//DM4MMC1US0000000bcb2b68b751f48cdb9df9eb160507ff6\n//DM4MMC1US000000034f7daf895ae4508839d4b5b289f58c0\n//DM4MMC1US0000000aae1861faa2944a7921c87f202926b22"
      },
      "parameters": [],
      "headers": [
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "x-client-userid",
          "value": "esb_client_srcsystem_alberta",
          "disabled": false
        },
        {
          "name": "x-openapi-clientid",
          "value": "SRCCLOUDDSRP",
          "disabled": false
        },
        {
          "name": "Authorization",
          "value": "Bearer {{ _['pi-core-service_itf-mdes-credential-cryptogram-token'] }}",
          "disabled": false
        },
        {
          "name": "X-MC-Correlation-Id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_54f6b268d7904ce486628236",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - credentialAuthData- UCAF_V3-TUR-HARDCODED",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"DM4MMC00001143934f4e41b2c7a74d49affa8a3cc7706267\"\n    },\n    \"credentialAuthData\": {\n        \"data\": \"AKZEmoroC8oOBTqN6Qi2AAABFA==\",\n        \"key\": \"DAPLMC000011439354be5cc97d224297a52d8bcc0551600c\",\n        \"keyType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"type\": \"DSRP\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"1\",\n            \"transaction\": {\n                \"amount\": 100.00,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LlItNDIyNS1CUkFQdWJsaWNXYXJlaG91c2luZy5jb20=\"\n            },\n            \"unpredictableNumber\": \"570dbbb9\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"12345678-2235-1234-1234-123456789012\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_6a98ce8dbb5b4fe2aa833a01",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - UCAF_V3 - TUR without merchant identifier",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12338\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": true\n            },\n            \"unpredictableNumber\": \"11111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_95d0629667a94d4ebb37bc48",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - UCAF_V0 - UCAF_V3 - TUR without merchant identifier",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"110\",\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false\n            },\n            \"unpredictableNumber\": \"E5F6A7A8\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_5b6a60646bb64f32b61e4585",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - TUR - ALL - IN -ONE",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        },\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12339\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"transactionId-{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_02c01ea2cf0b4ec795a70da8",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - BACKFILL - TUR - ALL - IN -ONE",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"80127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    },    \n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        },\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12339\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"transactionId-{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_eb13b501b17545d78a7e2656",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - UCAF_V3 - TUR Hardcoded",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"DM4MMC000000000DEPMXV0ZDVVNCW3HADF1DOTFESASKF3PUH\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "INVALID_TOKEN_UNIQUE_REFERENCE_200",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-COMPANYADYENTESTTOKENIZATION#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_8fdc00fad7c149d2958683c6",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "Polytransactioncredentials - UCAF_V3 - TUR Mono test",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"1\",\n            \"isCustomerStronglyAuthenticated\": true,\n            \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": true\n            },\n            \"unpredictableNumber\": \"E5F6A7A8\"\n        },\n        {\n            \"credentialRequestId\": \"2\",\n            \"isCustomerStronglyAuthenticated\": false,\n            \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": true\n            },\n            \"unpredictableNumber\": \"E5F6A7A9\"\n        }\n    ],\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mono-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_d8d350ae9a884eb3b4ddf111",
      "_type": "request",
      "parentId": "fld_f8e5f10c36e140ca90979e47",
      "name": "[STAGE] DTVC",
      "method": "POST",
      "url": "https://blue-src-stage-synapse-test-harness.apps.stl.pcfstage00.mastercard.int/api/callWithPrism",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"PqrhcGXRR3O1l4k3GkjGfQ000000000000ZA\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\",\n    \"tokenPreference\": \"CLOUD\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/polytransactioncredentials",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd80a1f-f13a-42c2-b141-17da8c287765-poly-test",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_78b37886316645eb96cb3ac1",
      "_type": "request_group",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "TransactionCredentials-V2"
    },
    {
      "_id": "req_5a24df7a285049c4af4950e8",
      "_type": "request",
      "parentId": "fld_78b37886316645eb96cb3ac1",
      "name": "stage-v2-poly",
      "method": "POST",
      "url": "https://blue-src-stage-synapse-test-harness.apps.stl.pcfstage00.mastercard.int/api/callWithPrism",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"DM4MMC000000000QV2I64IGYYMPV120LGCNVU0GNF2SOPOMKD\"\n    },\n    \"accountReferences\": [\n        \"FPAN\",\n        \"CLOUD\"\n    ],\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12333\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\",\n    \"tokenPreference\": \"CLOUD\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/polytransactioncredentials/v2",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd80a1f-f13a-42c2-b141-17da8c287765",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_a3eece844add465da2480821",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Delete card by cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=false,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one method and url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deleteCardSchema'));\r\n// console.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\n//pm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\n// insomnia.test('response matches JSON schema', () => {\r\n//     pm.response.to.have.jsonSchema(expectedSchema);\r\n// });"
    },
    {
      "_id": "req_38f7160fd8bc4d4d9662a540",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Delete card by cardId before If UPDATE happened on it earlier for test schema",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one method and url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deleteCardSchemaIfUpdateHappened'));\r\nconsole.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\npm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\ninsomnia.test('response matches JSON schema', () => {\r\n    pm.response.to.have.jsonSchema(expectedSchema);\r\n});"
    },
    {
      "_id": "req_6e4cafbb15d14fe18a26bd2e",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Delete card by cardId HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}D2FehN48Q2Gs5LP5euhwlQ000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#GOOGLE#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "deletebycardid-non-scof-negative-test-2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one method and url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deleteCardSchemaIfUpdateHappened'));\r\n// console.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\n//pm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\n// insomnia.test('response matches JSON schema', () => {\r\n//     pm.response.to.have.jsonSchema(expectedSchema);\r\n// });"
    },
    {
      "_id": "req_b8dec028acff4d5d9e79c4de",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Delete card by cardId unmigrate-token=true for Migrate Token Enrollment",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?unmigrate-token=true",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "unmigrate-token",
          "value": "true"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one method and url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deleteCardSchema'));\r\nconsole.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\npm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\ninsomnia.test('response matches JSON schema', () => {\r\n    pm.response.to.have.jsonSchema(expectedSchema);\r\n});"
    },
    {
      "_id": "req_c498cf089d4d4be6a6a0ccfc",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Delete card by TUR",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?tokenUniqueReference={{ _['pi-core-service_tokenUniqueReference'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "tokenUniqueReference",
          "value": "{{ _['pi-core-service_tokenUniqueReference'] }}"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url and method: /paymentinstrument/src/1/0/card?tokenUniqueReference={{ _['pi-core-service_tokenUniqueReference'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deleteCardSchema'));\r\n//console.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\n// pm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\n// insomnia.test('response matches JSON schema', () => {\r\n//     pm.response.to.have.jsonSchema(expectedSchema);\r\n// });"
    },
    {
      "_id": "req_bdea99c8fda142e9843835b9",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Delete card by TUR hardcoded",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?tokenUniqueReference=DM4MMC1US0000000e0a5ea4e74b849a5837bdec91c522f8c",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "tokenUniqueReference",
          "value": "DM4MMC1US0000000e0a5ea4e74b849a5837bdec91c522f8c"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#GOOGLE#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "deletebytur-non-scof-positive-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url and method: /paymentinstrument/src/1/0/card?tokenUniqueReference={{ _['pi-core-service_tokenUniqueReference'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deleteCardSchema'));\r\n//console.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\n// pm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\n// insomnia.test('response matches JSON schema', () => {\r\n//     pm.response.to.have.jsonSchema(expectedSchema);\r\n// });"
    },
    {
      "_id": "req_990188267cd94ceeba7e14c3",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Delete card by consumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_consumerId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "mani-e2e-delete-consumer-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url and method: /paymentinstrument/src/1/0/delete/consumer/{{ _['pi-core-service_consumerId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deletecardByConsumerIdSchema'));\r\nconsole.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\n// pm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\n// insomnia.test('response matches JSON schema', () => {\r\n//     pm.response.to.have.jsonSchema(expectedSchema);\r\n// });"
    },
    {
      "_id": "req_d6bd8f33e97d4f34bfadb9ba",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Delete card by consumerId hardcoded",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_consumer'] }}wargame3verification-m2-cons-14pemcf2ubhskrqvlbdb",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#GOOGLE#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "deletebyconsumerid-non-scof-negative-test-2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url and method: /paymentinstrument/src/1/0/delete/consumer/{{ _['pi-core-service_consumerId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deletecardByConsumerIdSchema'));\r\nconsole.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\n// pm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\n// insomnia.test('response matches JSON schema', () => {\r\n//     pm.response.to.have.jsonSchema(expectedSchema);\r\n// });"
    },
    {
      "_id": "req_0e14dc6f96c646b4bfbd8c7a",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "m4-ios-non-scof-positive-test-3",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#GOOGLE#01",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_e913c4a5a7774713ad7c2295",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId-includeSupportedAuthMethods=true",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?includeSupportedAuthMethods=true",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "includeSupportedAuthMethods",
          "value": "true"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "mani-regular-static-token-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_fea02d2c42284ff4975798cc",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId-includeSupportedAuthMethods=true&includeAddressVerificationRequired=true",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?includeSupportedAuthMethods=true&includeAddressVerificationRequired=true",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "includeSupportedAuthMethods",
          "value": "true"
        },
        {
          "name": "includeAddressVerificationRequired",
          "value": "true"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "mani-regular-static-token-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_e148634e04e94f3d8ba4b680",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId-accountInformation=TOKEN",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=TOKEN",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "TOKEN"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "mani-regular-static-token-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_20213c6469934cab9390bb57",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId-includeSupportedAuthMethods=true&accountInformation=TOKEN",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?includeSupportedAuthMethods=true&accountInformation=TOKEN",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "includeSupportedAuthMethods",
          "value": "true"
        },
        {
          "name": "accountInformation",
          "value": "TOKEN"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "mani-regular-static-token-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_c3ee9ae1f25e473388f296cc",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId accountInformation=token",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=token",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "token"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchemaWithDpanOrFpanInfo'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_f3df1559a71c4671a5ec53f8",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId accountInformation=card",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=card",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "card"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchemaWithDpanOrFpanInfo'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_217289b66b8d41eab0d07af9",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId accountInformation=card",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=card",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "card"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}dsSI6RGdSfKTPp2ZmkZmWA000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Autofill_Test#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchemaWithDpanOrFpanInfo'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_3c788d6b31684a319f3a7c0d",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by NON TOKENIZED cardId accountInformation=card HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=card",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "card"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}f7b1320a-a811-4bce-aa36-71e64faf2a1d",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getNonTokenizedCardSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_8a3ea5a340034a2098327a53",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=card",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "card"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}lHBq3WQpRPecgqTWgle97w000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#Performancetesting#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "getcard-push-src-GB-test-2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_6f6242225720402b8d75af2e",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId HARDCODED MTF DEL",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}7c6ddc25-1b46-4d18-9e8c-3bb4b0072750",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});"
    },
    {
      "_id": "req_9dd75596e7e94ba0bfe1473c",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId HARDCODED accountInformation=token",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=token",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "token"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}_9WbD9gESe-1KO913t76aA000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-fpan-swap-test",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchemaWithDpanOrFpanInfo'));\n//console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_c9b5535b797a402ba6dbc99d",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId HARDCODED accountInformation=card",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=card",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "card"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}Mx3OE9wKQAiKvGVk1j4qQQ000000000000GB",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-fpan-swap-test",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchemaWithDpanOrFpanInfo'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_0583f61ce7114906b21a3fb3",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId HARDCODED accountInformation=token and programId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=card",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "card"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}3aCKQOoaRcGmnt2fE4VgkQ000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-test",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchemaWithDpanOrFpanInfo'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n// pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_e86603f054724f998eab19c6",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by TUR CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?tokenUniqueReference={{ _['pi-core-service_tokenUniqueReference'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "tokenUniqueReference",
          "value": "{{ _['pi-core-service_tokenUniqueReference'] }}"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n// pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_f3db514bda9049f88ec22fdd",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by TUR STATIC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?tokenUniqueReference={{ _['pi-core-service_staticTokenUniqueReference'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "tokenUniqueReference",
          "value": "{{ _['pi-core-service_staticTokenUniqueReference'] }}"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n// pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_6a1fa931889c4e2b86987e31",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by TUR Hardcoded",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?tokenUniqueReference=DM4MMC0000144136ab1ab1dcbe56475387970e74f8da006d",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "tokenUniqueReference",
          "value": "DM4MMC0000144136ab1ab1dcbe56475387970e74f8da006d"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_3decb89feb214079933aa23c",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get supportedIssuerAuthMethods by CARDID",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?cardId={{ _['pi-core-service_cardId'] }}&reasonCode=ADD_CARD",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "cardId",
          "value": "{{ _['pi-core-service_cardId'] }}"
        },
        {
          "name": "reasonCode",
          "value": "ADD_CARD"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_supportedIssuerAuthMethods'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/supportedIssuerAuthMethods?cardId={cardId}&reasonCode=ADD_CARD\r\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_supportedIssuerAuthMethods')]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n//params: reasonCode = ADD_CARD or VERIFY_ACCOUNT - use ADD_CARD",
      "afterResponseScript": ""
    },
    {
      "_id": "req_923c61e9a6f24584b7fabbe6",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get supportedIssuerAuthMethods CARDID hardcoded",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?cardId=LVfCJBbOQ46bzErXSUhUvg000000000000BR&reasonCode=ADD_CARD",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "cardId",
          "value": "LVfCJBbOQ46bzErXSUhUvg000000000000BR"
        },
        {
          "name": "reasonCode",
          "value": "ADD_CARD"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_supportedIssuerAuthMethods'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/supportedIssuerAuthMethods?cardId={cardId}&reasonCode=ADD_CARD\r\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_supportedIssuerAuthMethods')]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n//params: reasonCode = ADD_CARD or VERIFY_ACCOUNT - use ADD_CARD",
      "afterResponseScript": ""
    },
    {
      "_id": "req_b103c9b4a7ae49549c8b31fc",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get supportedIssuerAuthMethods by TUR and TRID",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?tokenUniqueReference={{ _['pi-core-service_tokenUniqueReference'] }}&tokenRequestorId={{ _['pi-core-service_tokenRequestorId'] }}&reasonCode=ADD_CARD",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "tokenUniqueReference",
          "value": "{{ _['pi-core-service_tokenUniqueReference'] }}"
        },
        {
          "name": "tokenRequestorId",
          "value": "{{ _['pi-core-service_tokenRequestorId'] }}"
        },
        {
          "name": "reasonCode",
          "value": "ADD_CARD"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_supportedIssuerAuthMethods'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/supportedIssuerAuthMethods?tokenUniqueReference={{ _['pi-core-service_tokenUniqueReference'] }}&tokenRequestorId={{ _['pi-core-service_tokenRequestorId'] }}&reasonCode=ADD_CARD\r\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_supportedIssuerAuthMethods')]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n//params: reasonCode = ADD_CARD or VERIFY_ACCOUNT - use ADD_CARD",
      "afterResponseScript": ""
    },
    {
      "_id": "req_fcfb5891e712423a97d617ad",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get supportedIssuerAuthMethods by TUR and donor TRID",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?tokenUniqueReference={{ _['pi-core-service_tokenUniqueReference'] }}&tokenRequestorId={{ _['pi-core-service_donorTokenRequestorId'] }}&reasonCode=ADD_CARD",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "tokenUniqueReference",
          "value": "{{ _['pi-core-service_tokenUniqueReference'] }}"
        },
        {
          "name": "tokenRequestorId",
          "value": "{{ _['pi-core-service_donorTokenRequestorId'] }}"
        },
        {
          "name": "reasonCode",
          "value": "ADD_CARD"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_supportedIssuerAuthMethods'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/supportedIssuerAuthMethods?tokenUniqueReference={{ _['pi-core-service_tokenUniqueReference'] }}&tokenRequestorId={{ _['pi-core-service_tokenRequestorId'] }}&reasonCode=ADD_CARD\r\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_supportedIssuerAuthMethods')]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n//params: reasonCode = ADD_CARD or VERIFY_ACCOUNT - use ADD_CARD",
      "afterResponseScript": ""
    },
    {
      "_id": "req_bc65c8c50fe54294a1810374",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get supportedIssuerAuthMethods by TUR and TRID harcoded",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?tokenUniqueReference=DM4MMC0000114393aeb2b77d836a4149b06f0ebea4f9819f&tokenRequestorId=50123197928&reasonCode=ADD_CARD",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "tokenUniqueReference",
          "value": "DM4MMC0000114393aeb2b77d836a4149b06f0ebea4f9819f"
        },
        {
          "name": "tokenRequestorId",
          "value": "50123197928"
        },
        {
          "name": "reasonCode",
          "value": "ADD_CARD"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_supportedIssuerAuthMethods'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/supportedIssuerAuthMethods?tokenUniqueReference={{ _['pi-core-service_tokenUniqueReference'] }}&tokenRequestorId={{ _['pi-core-service_tokenRequestorId'] }}&reasonCode=ADD_CARD\r\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_supportedIssuerAuthMethods')]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n//params: reasonCode = ADD_CARD or VERIFY_ACCOUNT - use ADD_CARD",
      "afterResponseScript": ""
    },
    {
      "_id": "req_3a27d5e90bec4ff899f2e365",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by ConsumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_consumerId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "m4-getconsumer-non-scof-test-2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#GOOGLE#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/consumer/{consumerId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardByConsumerIdSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_7b998d61197548f680e1a8bd",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by ConsumerId Hardcoded",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_consumer'] }}payment-account-fpan-consumer-id-682",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "getconsumer-scof-us-positive-test-7",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/consumer/{consumerId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardByConsumerIdSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_542ceb92893c42fd9ba27129",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "getTransactionHistoryWithTimestamp",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?transactionsFromTimestamp=2022-01-01T12:08:56.123-07:00",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "transactionsFromTimestamp",
          "value": "2022-01-01T12:08:56.123-07:00"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_transactions'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/transactions/{{ _['pi-core-service_cardId'] }}\n//In headers, update end-point-uri header with path for synapse\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'),\"transactions/\",insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_4c01f27f6387497ba08f52e4",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "getTransactionHistory-Kick1",
      "method": "GET",
      "url": "https://pi-core-service-silent-verfication.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/card/transactions/zIa59N94QNSDM-gAoG-3ew000000000000US?transactionsFromTimestamp=2022-01-01T12:08:56.123-07:00",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "transactionsFromTimestamp",
          "value": "2022-01-01T12:08:56.123-07:00"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/transactions/ESHn7txKROuuxXbSyRAUkQ000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "mac-gettranhist-5",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "FACADE",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_15e728f11e7c44339811e69a",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "getTransactionHistoryWithTimestamp Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?transactionsFromTimestamp=2024-01-01T12:08:56.123-07:00",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "transactionsFromTimestamp",
          "value": "2024-01-01T12:08:56.123-07:00"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_transactions'] }}zcJ4JmBnTEGSiMDMmZv0yQ000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/transactions/{{ _['pi-core-service_cardId'] }}\n//In headers, update end-point-uri header with path for synapse\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'),\"transactions/\",insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_c6f10ff7245745f9b44f143d",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "getTransactionHistory",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "transactionsFromTimestamp",
          "value": "2022-01-01T12:08:56.123-07:00"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_transactions'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/transactions/{{ _['pi-core-service_cardId'] }}\n//In headers, update end-point-uri header with path for synapse\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'),\"transactions/\",insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_2658cc08c1c44404a5d8cc0f",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update orphan card with consumerId (binding consumer with card)",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}/{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set new consumer Id\ninsomnia.environment.set('pi-core-service_updatedConsumerId', \"person12345@consumer.com\");\n\n//Non-synapse url: /paymentinstrument/src/1/0/card/{cardid}/consumer/{updatedConsumerId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), \"/\", \n                            insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updateOrphanCardConsumerIdSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);"
    },
    {
      "_id": "req_9343935804364535982a7c1f",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update orphan card with consumerId (binding consumer with card) HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}5__qQGzEQ0eiAbMBsdzovQ000000000000MX/{{ _['pi-core-service_consumer'] }}maniv2testm4consumer",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "bind-consumer-c2p-MX-test-2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set new consumer Id\ninsomnia.environment.set('pi-core-service_updatedConsumerId', \"person12345@consumer.com\");\n\n//Non-synapse url: /paymentinstrument/src/1/0/card/{cardid}/consumer/{updatedConsumerId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), \"/\", \n                            insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updateOrphanCardConsumerIdSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);"
    },
    {
      "_id": "req_67ab08f9be2241abb5deeec9",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "TAM-Update-CONSENT",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\r\n    \"method\": \"CONSENT\",\r\n    \"type\": \"TEXT_TO_CARDHOLDER_NUMBER\",\r\n    \"authTime\": \"2020-09-22T14:20:26.122Z\",\r\n    \"status\": \"ISS_AUTH_FAILED\",\r\n    \"skipCardUpdate\": true,\r\n    \"tamUpdate\": true,\r\n    \"additionalAuthData\": {\r\n        \"transactionReferenceId\": \"xxxxx\",\r\n        \"responseCode\": \"fewrw4\",\r\n        \"tamData\": {\r\n            \"authUseType\": \"ENROLL\",\r\n            \"authContext\": {\r\n                \"authTransactionId\": \"atreada1235\",\r\n                \"authTimestamp\": \"2020-09-22T14:20:26.122Z\",\r\n                \"authResult\": \"AUTHENTICATED\",\r\n                \"challengePerformed\": true,\r\n                \"authInitiator\": \"MACS\",\r\n                \"authVerifier\": \"DAS\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\ntamUpdate will publish message to mdes topic with tamData\r\n*/"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updateConsentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_2e3638e601374929afb95dc1",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update-CONSENT-TEXT_TO_CARDHOLDER_NUMBER-ISS_AUTH_VERIFIED-cardVerifications",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\r\n    \"method\": \"CONSENT\",\r\n    \"type\": \"TEXT_TO_CARDHOLDER_NUMBER\",\r\n    \"authTime\": \"2024-07-16T14:20:26.122Z\",\r\n    \"status\": \"ISS_AUTH_VERIFIED\",\r\n    \"additionalAuthData\": {\r\n        \"transactionReferenceId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\r\n        \"responseCode\": \"SUCCESS\"\r\n    }\r\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updateConsentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_ea732980d0104d8b9c2ecb80",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update-CONSENT-TEXT_TO_CARDHOLDER_NUMBER-ISS_AUTH_VERIFIED-cardVerifications-hardcoded",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\r\n    \"method\": \"CONSENT\",\r\n    \"type\": \"TEXT_TO_CARDHOLDER_NUMBER\",\r\n    \"authTime\": \"2024-07-16T14:20:26.122Z\",\r\n    \"status\": \"ISS_AUTH_VERIFIED\",\r\n    \"additionalAuthData\": {\r\n        \"transactionReferenceId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\r\n        \"responseCode\": \"SUCCESS\"\r\n    }\r\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}kZFHZ7_CSI-qeGkDRvwR2Q000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "update-auth-verifications-c2p-US-test-4",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updateConsentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_c0b565bf83d54939beca6ff8",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update-CONSENT-CARDHOLDER_TO_USE_ISSUER_MOBILE_APP-ISS_AUTH_FAILED-cardVerifications",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\r\n    \"method\": \"CONSENT\",\r\n    \"type\": \"CARDHOLDER_TO_USE_ISSUER_MOBILE_APP\",\r\n    \"authTime\": \"2024-07-16T14:22:26.122Z\",\r\n    \"status\": \"ISS_AUTH_VERIFIED\",\r\n    \"additionalAuthData\": {\r\n        \"transactionReferenceId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\r\n        \"responseCode\": \"SUCCESS\"\r\n    }\r\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}-cardVerifications-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updateConsentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_0fcce5ff4add43c8b7271d5a",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update-CONSENT-CARDHOLDER_TO_VISIT_WEBSITE-ISS_AUTH_FAILED-cardVerifications",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\r\n  \"method\": \"CONSENT\",\r\n  \"type\": \"CARDHOLDER_TO_VISIT_WEBSITE\",\r\n  \"authTime\": \"2024-07-16T14:20:26.122Z\",\r\n  \"status\": \"ISS_AUTH_VERIFIED\",\r\n  \"additionalAuthData\": {\r\n    \"transactionReferenceId\": \" dbc55444496a4896b41c5d5e2dd432b6\",\r\n    \"responseCode\": \"SUCCESS\"\r\n  }\r\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}51c5eb5a-f4e7-49b5-80bb-27091900c650",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updateConsentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_fa99cc3745ee426483a66279",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update-CONSENT-TEXT_TO_CARDHOLDER_NUMBER-ISS_AUTH_FAILED-cardVerifications",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n  \"method\": \"CONSENT\",\n  \"type\": \"TEXT_TO_CARDHOLDER_NUMBER\",\n  \"authTime\": \"2023-06-01T14:20:26.122Z\",\n  \"status\": \"ISS_AUTH_FAILED\",\n  \"additionalAuthData\": {\n      \"transactionReferenceId\":\"12348\",\n      \"responseCode\":\"FAILED\"\n  }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updateConsentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_61b545be4bfc45698f8f9e79",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update-3DS-NPA-3DS_PA_IDV_NOT_PERFORMED-cardVerifications",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"method\": \"3DS\",\n    \"type\": \"NPA\",\n    \"authTime\": \"2020-09-22T14:20:26.00Z\",\n    \"status\": \"3DS_PA_IDV_NOT_PERFORMED\",\n    \"additionalAuthData\": {\n        \"transactionReferenceId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n        \"responseCode\": \"SUCCESS\"\n    }\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updateConsentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_b0cb3a08f7d84b0db28ef683",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update-3DS-NPA-3DS_PA_IDV_CHALLENGE_REQUIRED-cardVerifications",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"method\": \"3DS\",\n    \"type\": \"NPA\",\n    \"authTime\": \"2020-09-22T14:20:26.00Z\",\n    \"status\": \"3DS_PA_IDV_CHALLENGE_REQUIRED\",\n    \"additionalAuthData\": {\n        \"transactionReferenceId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n        \"responseCode\": \"SUCCESS\"\n    }\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updateConsentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_2807d2e2f4fb43f2a67b0939",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update-3DS-IDV-3DS-IDV_CHALLENGE_REQUIRED-cardVerifications",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"method\": \"3DS\",\n    \"type\": \"IDV\",\n    \"status\": \"3DS_PA_IDV_CHALLENGE_VERIFIED\",\n    \"authTime\": \"2020-09-22T14:20:26.00Z\",\n    \"additionalAuthData\": {\n        \"transactionReferenceId\": \"fc5946c8-3179-4ed9-5207-921752556756\",\n        \"responseCode\": \"C\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updateConsentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_35b298fb9a5b4b4084b65d7a",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update Patch SUSPENDED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardMetaDataAttributes\": [\n        {\n            \"fieldName\": \"CARD_ID_STATUS\",\n            \"fieldValue\": \"SUSPENDED\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}/patch",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updatePatchSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});"
    },
    {
      "_id": "req_7c09f8106f6d4678a9763bb6",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update Patch ACTIVE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardMetaDataAttributes\": [\n        {\n            \"fieldName\": \"CLIENT_SITE_ID\",\n            \"fieldValue\": \"capitalone.com\"\n        },\n        {\n            \"fieldName\": \"CARD_ID_STATUS\",\n            \"fieldValue\": \"ACTIVE\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}/patch",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updatePatchSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_4778c6efdae74838a47a9cf8",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update Patch BLC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardMetaDataAttributes\": [\n        {\n            \"fieldName\": \"EXTERNAL_CARD_ID\",\n            \"fieldValue\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n        },\n        {\n            \"fieldName\": \"EXTERNAL_CONSUMER_ID\",\n            \"fieldValue\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n        },\n        {\n            \"fieldName\": \"EXTERNAL_CLIENT_ID\",\n            \"fieldValue\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n        },\n        {\n            \"fieldName\": \"CLIENT_SITE_ID\",\n            \"fieldValue\": \"{{ _['pi-core-service_$randomUrl'] }}\"\n        },\n        {\n            \"fieldName\": \"CARD_ID_STATUS\",\n            \"fieldValue\": \"ACTIVE\"\n        },\n        {\n            \"fieldName\": \"ENROLLMENT_CHANNEL\",\n            \"fieldValue\": \"BULK\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}/patch",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updatePatchSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_30ecf5263f8e48009ff27bc2",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update Patch BLC ALL-hardcoded",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardMetaDataAttributes\": [\n        {\n            \"fieldName\": \"EXTERNAL_CARD_ID\",\n            \"fieldValue\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n        },\n        {\n            \"fieldName\": \"EXTERNAL_CONSUMER_ID\",\n            \"fieldValue\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n        },\n        {\n            \"fieldName\": \"EXTERNAL_CLIENT_ID\",\n            \"fieldValue\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n        },\n        {\n            \"fieldName\": \"CLIENT_SITE_ID\",\n            \"fieldValue\": \"{{ _['pi-core-service_$randomUrl'] }}\"\n        },\n        {\n            \"fieldName\": \"CARD_ID_STATUS\",\n            \"fieldValue\": \"ACTIVE\"\n        },\n        {\n            \"fieldName\": \"ENROLLMENT_CHANNEL\",\n            \"fieldValue\": \"BULK\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}5__qQGzEQ0eiAbMBsdzovQ000000000000MX/patch",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "update-patch-c2p-MX-negative-test-4",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updatePatchSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_4ea9bfa74ff74227b3706847",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update Patch BLC kick1",
      "method": "PUT",
      "url": "http://localhost:8080/paymentinstrument/src/1/0/card/SjD_BOcoRH-DPMowcM7iOQ000000000000US/patch",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardMetaDataAttributes\": [\n        {\n            \"fieldName\": \"EXTERNAL_CARD_ID\",\n            \"fieldValue\": \"EXTERNAL_CARD_ID-1\"\n        },\n        {\n            \"fieldName\": \"EXTERNAL_CONSUMER_ID\",\n            \"fieldValue\": \"EXTERNAL_CONSUMER_ID-1\"\n        },\n        {\n            \"fieldName\": \"EXTERNAL_CLIENT_ID\",\n            \"fieldValue\": \"EXTERNAL_CLIENT_ID-1\"\n        },\n        {\n            \"fieldName\": \"CLIENT_SITE_ID\",\n            \"fieldValue\": \"CLIENT_SITE_ID-1\"\n        },\n        {\n            \"fieldName\": \"CARD_ID_STATUS\",\n            \"fieldValue\": \"DEACTIVATED\"\n        },\n        {\n            \"fieldName\": \"ENROLLMENT_CHANNEL\",\n            \"fieldValue\": \"ISSUER\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}/patch",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updatePatchSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_df5a2e7dfdc644cda1194e37",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update Patch ACTIVE HARDCODED",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardMetaDataAttributes\": [\n        {\n            \"fieldName\": \"CLIENT_SITE_ID\",\n            \"fieldValue\": \"demo.com\"\n        },\n        {\n            \"fieldName\": \"CARD_ID_STATUS\",\n            \"fieldValue\": \"ACTIVE\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}ac29802b-36c5-41b0-918a-35302e8f2271/patch",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updatePatchSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\npm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test('response matches JSON schema', () => {\n    pm.response.to.have.jsonSchema(expectedSchema);\n});"
    },
    {
      "_id": "req_c952a28d09894ecc8bfda783",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "PI Address Verification API",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line2\": \"whatever\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"IN\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}{{ _['pi-core-service_addressVerification'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/addressVerification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_addressVerification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Success Status Code 200:\", function () {\n    pm.response.to.have.status(200);\n    pm.response.to.be.ok;\n});\n\nconst code = jsonData.result;\ninsomnia.expect(code).to.be.equals(\"PASSED\");\n\ninsomnia.test(\"result is equals to PASSED\", () => {\n    insomnia.expect(code).to.be.equals(\"PASSED\");\n});"
    },
    {
      "_id": "req_ba15121d470b4d73b6a6ac21",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "verifyCardUsingCVC2",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n   \"expiryDate\": \"1122\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"null\",\n   \"consumerId\": null,\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}{{ _['pi-core-service_cvc2Verification'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Success Status Code 200:\", function () {\n    pm.response.to.have.status(200);\n    pm.response.to.be.ok;\n});\n\nconst code = jsonData.result;\ninsomnia.expect(code).to.be.equals(\"PASSED\");\n\ninsomnia.test(\"result is equals to PASSED\", () => {\n    insomnia.expect(code).to.be.equals(\"PASSED\");\n});"
    },
    {
      "_id": "req_0b8682e1f16741f4bdbf44ac",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "accountRange by FPAN",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"FPAN\",\n        \"refValue\": \"5473501084214760\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}accountrange",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});"
    },
    {
      "_id": "req_9c21ac8c8c8f4a3eb44fd47a",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "accountRange by FPAN Copy",
      "method": "POST",
      "url": "https://pi-core-service-silent-verfication.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/card/accountrange",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"FPAN\",\n        \"refValue\": \"2221194219375862\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}accountrange",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});"
    },
    {
      "_id": "req_10ec75255ba642c687757e14",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "accountRange by CARDID",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}accountrange",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_accountRangeSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_ee5e2eab9ef34c3bb5c9cadb",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "accountRange by CARDID Hardcoded-C2P-NZ",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"X2uksKgrRvStvNm1u-nAbQ000000000000NZ\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}accountrange",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "account-range-c2p-src-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_accountRangeSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_156d31ded5b64be68cb118fc",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "accountRange by CARDID Hardcoded-SCOF-BR",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"88c33e7a-ef56-4a91-bb18-51b9800b7455\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}accountrange",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "account-range-scof-br-legacy-test-3",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_accountRangeSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_2efc2cc5c23a47e393cfa3c9",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "accountRange by CARDID Hardcoded-SCOF-US",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"ba9fe95e-70c1-4b28-a1a0-997d69c7ad95\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}accountrange",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "account-range-scof-us-legacy-test-5",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_accountRangeSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_4d7e1b3b291c40fdadf4a229",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "accountRange by CARDID Hardcoded-SCOF-US IOS",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"274b00ba-72b6-45d0-a553-27cdde7bb3c5\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}accountrange",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "account-range-ios-scof-us-legacy-test-9",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_accountRangeSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_3f9c504024764397bb4e13ad",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "accountRange by CARDID Hardcoded-non-SCOF-US IOS",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"czbz9pWFTLuYXC6Os_0G9Q000000000000IN\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}accountrange",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#GOOGLE#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "account-range-ios-non-scof-us-legacy-test-7",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_accountRangeSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_0cdd716d2c7a499da05ff356",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "accountRange by CARDID Hardcoded-non-SCOF-US",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"9dM5QUiHT_6zcxbIDyzlhA000000000000US\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}accountrange",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#GOOGLE#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "account-range-non-scof-us-test-7",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_accountRangeSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_1c5aa01d59ce4110b4c265f0",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "accountRange by CARDID Hardcoded-C2P-US",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"1LY5G99CQpCwKKKdyOjBUg000000000000US\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}accountrange",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "account-range-c2p-src-us-test-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_accountRangeSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_224a79726b9d47cdaa0c4fb5",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "accountRange by CARDID Hardcoded-C2P-US legacy card",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"d4b6391b-df42-4290-b028-a29dc8e8c152\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}accountrange",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "account-range-c2p-src-us-legacy-card-test-2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_accountRangeSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_6dce59c8dd3847709046e86f",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "accountRange by CARDID Copy",
      "method": "POST",
      "url": "https://pi-core-service-silent-verfication.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/card/accountrange",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"ANvK9ED4TmSXnheUVySjWw000000000000AR\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}accountrange",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#SCOF_PROGRAM#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "acctRange-m4-c2p-pgm-id-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_accountRangeSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_24973f208cca4931a0d5ee77",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Transactioncredentials by cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardId\": \"{{ _['pi-core-service_cardId'] }}\", \n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"merchantCVCSupport\": true,\n    \"fpanRequested\": false,\n    \"debitTokenRequested\": false,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"isCustomerStronglyAuthenticated\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"merchantIdentifier\": \"merchant\"\n\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_transactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/transactioncredentials\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_transactioncredentials')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);"
    },
    {
      "_id": "req_5aa1c82eae894a28b2ccca5f",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Transactioncredentials by TUR",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\":\"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": true,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"isCustomerStronglyAuthenticated\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_transactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/transactioncredentials\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_transactioncredentials')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);"
    },
    {
      "_id": "req_fbe52ad0bd1e446c90746321",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Delete Card by cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_b71711d3325f4ed4b883e011",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Delete Card by TUR",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?tokenUniqueReference={{ _['pi-core-service_tokenUniqueReference'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "tokenUniqueReference",
          "value": "{{ _['pi-core-service_tokenUniqueReference'] }}"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_35f5ee6105834c8c8894e67d",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Delete card by consumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_consumerId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/delete/consumer/{{ _['pi-core-service_consumerId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_2b66ffa64a494ca6bf0fd119",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01",
      "afterResponseScript": ""
    },
    {
      "_id": "req_a7ff8a723bb04eeda33e1f8d",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by TUR",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?tokenUniqueReference={{ _['pi-core-service_tokenUniqueReference'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "tokenUniqueReference",
          "value": "{{ _['pi-core-service_tokenUniqueReference'] }}"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_3a0f2b07008f4b38adcd30a6",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Get card by consumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_consumerId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/consumer/{consumerId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01",
      "afterResponseScript": "//Does not successfully retrieve card with consumer id after updating consumer id with update card with consumerId - this issue is with update card by consumerId"
    },
    {
      "_id": "req_baee271276f74442bb74fe13",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update CardMetaData With AuthenticationData-record card verifications API",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n  \"method\": \"CONSENT\",\n  \"type\": \"TEXT_TO_CARDHOLDER_NUMBER\",\n  \"authTime\": \"2020-09-22T14:20:26.122Z\",\n  \"status\": \"ISS_AUTH_FAILED\",\n  \"additionalAuthData\": {\n      \"transactionReferenceId\":\"gggg\",\n      \"responseCode\":\"fh\"\n  }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//record card verifications API\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'),insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//--header 'program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01' \\",
      "afterResponseScript": "var jsonData = insomnia.response.json();"
    },
    {
      "_id": "req_2b1ab1a15dcd4f4b89216137",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "PI Address Verification API",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"address\": {\n        \"line1\": \"Ap #867-859\",\n        \"line2\": \"SIT Road\",\n        \"city\": \"New York\",\n        \"postalCode\": \"39531\",\n        \"country\": \"US\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}{{ _['pi-core-service_addressVerification'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/addressVerification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_addressVerification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_3101cd05795449f7932871f8",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "verifyCardUsingCVC2",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n   \"expiryDate\": \"1125\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": \"123\",\n   \"cardHolderName\": \"null\",\n   \"consumerId\": null,\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}{{ _['pi-core-service_cvc2Verification'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_1c70917c908c47c1afc6fcf9",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "accountRange",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"FPAN\",\n        \"refValue\": \"5424150109266239\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}accountrange",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/cvc2Verification\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), insomnia.environment.get('pi-core-service_cvc2Verification')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_b16004b04ce248a692102f4d",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update orphan card with consumerid",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}/{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_consumerId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//new consumer Id\ninsomnia.environment.set('pi-core-service_updatedConsumerId', \"test@consumer.com\");\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/consumer/{updatedConsumerId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), \"/\", \n                            insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//1) After updating card with consumerId, get card with consumerId says invalid cardId\n//To get card with consumerId successfully, you have to enroll a new card\n\n//2) new issue: Doesn't consistently work returns 422 error\n//Doesn't consistently update the consumer id\n//code issue\n\n//response taking cardId and assigning to variable\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);"
    },
    {
      "_id": "req_95e0b22d00b648e98d5a7225",
      "_type": "request",
      "parentId": "fld_0fbc09d84c1c41b2b06828f0",
      "name": "Update cardmetadata - patch",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardMetaDataAttributes\": [\n        {\n            \"fieldName\": \"CARD_ID_STATUS\",\n            \"fieldValue\": \"SUSPENDED\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}/patch",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//new consumer Id\ninsomnia.environment.set('pi-core-service_updatedConsumerId', \"testyuii67ryf@consumer.net\");\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/consumer/{consumerId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), \"/patch/\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//1) After updating card with consumerId, get card with consumerId says invalid cardId\n//To get card with consumerId successfully, you have to enroll a new card\n\n//2) new issue: Doesn't consistently work returns 422 error\n//Doesn't consistently update the consumer id\n//environment issue with the new consumerId variable\n\n//response taking cardId and assigning to variable\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);"
    },
    {
      "_id": "fld_b6fc316c6a4f4e4993892dd2",
      "_type": "request_group",
      "parentId": "fld_1d41a75ff2934f6bb41884c9",
      "name": "Cross_Program_Management"
    },
    {
      "_id": "req_4ec06ed0ef124280b69b684b",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Enroll card",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"1131\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Shaquille O'Neal\",\n    \"consumerId\": \"consumer-id-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line2\": \"whatever\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//What is program_id? SRC_C2P#C2P_COF or SRC\n\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_fd53ce843ce045c69e8f1782",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Enroll card random pull from array",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_expiryDate'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"{{ _['pi-core-service_primaryAccountNumberSource'] }}\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Shaquille O'Neal\",\n    \"consumerId\": \"consumer-id-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line2\": \"whatever\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_135aa60c0b814f2a81a7e157",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Enroll card-child",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"sourceCardId\": \"{{ _['pi-core-service_cardId'] }}\",\n   \"sourceProgramId\": \"{{ _['pi-core-service_program-id'] }}\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"Shaquille O'Neal\",\n   \"consumerId\" : \"different-consumer-id-from-parent-{{ _['pi-core-service_$randomInt'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"address\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_child_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_child_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_child_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);"
    },
    {
      "_id": "req_3fc40a72a9d54c95989985e6",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Enroll card-child use random pull from array",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"sourceCardId\": \"{{ _['pi-core-service_cardId'] }}\",\n   \"sourceProgramId\": \"{{ _['pi-core-service_program-id'] }}\",\n   \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n   \"primaryAccountNumberSource\": \"{{ _['pi-core-service_primaryAccountNumberSource'] }}\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"Shaquille O'Neal Jr\",\n   \"consumerId\" : \"different-consumer-id-from-parent-{{ _['pi-core-service_$randomInt'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"address\": null,\n   \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\ninsomnia.environment.set('pi-core-service_child_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_child_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_child_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);"
    },
    {
      "_id": "req_c2d351df24af408fb9d4950e",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Transactioncredentials by parent cardId UCAF_FORMAT_3",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardId\": \"{{ _['pi-core-service_cardId'] }}\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"merchantCVCSupport\": true,\n    \"fpanRequested\": false,\n    \"debitTokenRequested\": false,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"isCustomerStronglyAuthenticated\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"merchantIdentifier\": \"wwwmerchantcom\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_transactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//insomnia.environment.set('pi-core-service_cardId', \"903c9eb7-b84c-494f-bd66-a735f41a854b\");\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/transactioncredentials\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_transactioncredentials')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);"
    },
    {
      "_id": "req_623e914e357241d996b87dd2",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Transactioncredentials by child cardId UCAF_FORMAT_3",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardId\": \"{{ _['pi-core-service_child_cardId'] }}\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"merchantCVCSupport\": true,\n    \"fpanRequested\": false,\n    \"debitTokenRequested\": false,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"isCustomerStronglyAuthenticated\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"merchantIdentifier\": \"wwwmerchantcom\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_transactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//insomnia.environment.set('pi-core-service_cardId', \"903c9eb7-b84c-494f-bd66-a735f41a854b\");\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/transactioncredentials\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_transactioncredentials')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);"
    },
    {
      "_id": "req_25a85f4a4e4b41af809f71fe",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Transactioncredentials with parent TUR UCAF_FORMAT_3",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\":\"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": true,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"isCustomerStronglyAuthenticated\": false\n}\n\n//    \"tokenUniqueReference\":\"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_transactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//previously-set program id: SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\n\n//set method and Kick-one url: /paymentinstrument/src/1/0/transactioncredentials\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_transactioncredentials')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);"
    },
    {
      "_id": "req_64771bdffc5d470c91d09d6c",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Transactioncredentials with child TUR UCAF_FORMAT_3",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\":\"{{ _['pi-core-service_child_tokenUniqueReference'] }}\",\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\",\n    \"transactionAmount\": 1.00,\n    \"transactionCurrencyCode\": \"USD\",\n    \"integratedCircuitCardSupported\": false,\n    \"universalCardholderAuthenticationFieldSupported\": true,\n    \"debitTokenRequested\": false,\n    \"merchantCVCSupport\": true,\n    \"fpanRequested\": false,\n    \"ucafFormat\": \"UCAF_FORMAT_3\",\n    \"isCustomerStronglyAuthenticated\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_transactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//previously-set program id: SECURE_COF_COMMERCE_PLATFORM#E2E-Manitoba#01\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\n\n//set method and Kick-one url: /paymentinstrument/src/1/0/transactioncredentials\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_transactioncredentials')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);"
    },
    {
      "_id": "req_48f2bca7649f4675a8d49eb4",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Polytransactioncredentials - parent CARD_ID - ALL - IN -ONE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        },\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12339\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_3bb4a25ed6d54bc1880b34e6",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Polytransactioncredentials - child CARD_ID - ALL - IN -ONE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_child_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        },\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12339\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_d89069ebdce54b4ca27e6689",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Polytransactioncredentials - parent TUR - ALL - IN -ONE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        },\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12339\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}\n\n//\"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\""
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_42776bee34dd4b27bcdf90c2",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Polytransactioncredentials - child TUR - ALL - IN -ONE",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_child_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        },\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12339\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}\n//\"refValue\": \"{{ _['pi-core-service_child_tokenUniqueReference'] }}\"\n//DM4MMC0000114393b9d5d7834fcc4da1baa0eca27f0a4c90"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_cd108cf6628d4e118f3250d5",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Delete card by parent cardId ( child card will still be there )",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_9765bb916e33419695183736",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Delete card by child cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_child_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_24c944e0bbb740db9e02beaa",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Delete card by parent consumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_consumerId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/delete/consumer/{{ _['pi-core-service_consumerId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_5d661707195349bc9410708e",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Delete card by child consumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_child_consumerId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/delete/consumer/{{ _['pi-core-service_consumerId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_e8df8e1a5e9c4c67a6c4478a",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Get card by cardId-parent",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_cb91af5be86c48959583eeb0",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Get card by cardId-child",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "token"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_child_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_child_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_0f7a9b936d8543c2aefd5bbf",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Get card by consumerId - parent",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_consumerId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/consumer/{consumerId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_28c4dd483ab148d792b8c4ed",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Get card by consumerId - child",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_child_consumerId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/consumer/{consumerId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_0c5cfb1aebe74a29bb0de5e9",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Update PARENT CardMetaData With Authentication-record card verifications API",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n  \"method\": \"CONSENT\",\n  \"type\": \"TEXT_TO_CARDHOLDER_NUMBER\",\n  \"authTime\": \"2020-09-22T14:20:26.122Z\",\n  \"status\": \"ISS_AUTH_FAILED\",\n  \"additionalAuthData\": {\n      \"transactionReferenceId\":\"xyz\",\n      \"responseCode\":\"fh\"\n  }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_157924189b0a479ba8c62e20",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Update CHILD CardMetaData With Authentication-record card verifications API",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n  \"method\": \"CONSENT\",\n  \"type\": \"TEXT_TO_CARDHOLDER_NUMBER\",\n  \"authTime\": \"2020-09-22T14:20:26.122Z\",\n  \"status\": \"ISS_AUTH_FAILED\",\n  \"additionalAuthData\": {\n      \"transactionReferenceId\":\"xyz\",\n      \"responseCode\":\"fh\"\n  }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_child_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_20de0f94826e4ed3b7b3354e",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Update orphan card with consumerid",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}/{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_updatedConsumerId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//new consumer Id\ninsomnia.environment.set('pi-core-service_updatedConsumerId', \"test@consumer.net\");\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/consumer/{consumerId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), \"/\", \n                            insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_updatedConsumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//1) After updating card with consumerId, get card with consumerId says invalid cardId\n//To get card with consumerId successfully, you have to enroll a new card\n\n//2) new issue: Doesn't consistently work returns 422 error\n//Doesn't consistently update the consumer id\n//environment issue with the new consumerId variable\n\n//response taking cardId and assigning to variable\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);"
    },
    {
      "_id": "req_cd40df77fa424ceebfb9afa8",
      "_type": "request",
      "parentId": "fld_b6fc316c6a4f4e4993892dd2",
      "name": "Update cardmetadata - patch Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardMetaDataAttributes\": [\n        {\n            \"fieldName\": \"CARD_ID_STATUS\",\n            \"fieldValue\": \"SUSPENDED\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}/patch",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//new consumer Id\ninsomnia.environment.set('pi-core-service_updatedConsumerId', \"testyuii67ryf@consumer.net\");\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardid}/consumer/{consumerId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId'), \"/patch/\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//1) After updating card with consumerId, get card with consumerId says invalid cardId\n//To get card with consumerId successfully, you have to enroll a new card\n\n//2) new issue: Doesn't consistently work returns 422 error\n//Doesn't consistently update the consumer id\n//environment issue with the new consumerId variable\n\n//response taking cardId and assigning to variable\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);"
    },
    {
      "_id": "fld_9e62f9ab36524ff298f6b232",
      "_type": "request_group",
      "parentId": "fld_1d41a75ff2934f6bb41884c9",
      "name": "Notification Batch APIs"
    },
    {
      "_id": "req_a4e4c4dce27c41edb0bf3d54",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "getBatchByTUR-Single-CLOUD-TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"mani-postman-wargame-m4-{{ _['pi-core-service_$randomInt'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"wargame-m4-id-1\",\n            \"digitalData\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/getdetails",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/getdetails\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"getdetails\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'))",
      "afterResponseScript": ""
    },
    {
      "_id": "req_d11a7579390d4cd0b6563329",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "getBatchByTUR-Single -STATIC-TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"test-1\",\n    \"identities\": [\n        {\n            \"id\": \"test-id-1\",\n            \"digitalData\": \"{{ _['pi-core-service_staticTokenUniqueReference'] }}\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/getdetails",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/getdetails\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"getdetails\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'))",
      "afterResponseScript": ""
    },
    {
      "_id": "req_7a6fab42a5f84385a29d9741",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "getBatchByTUR-Single HARDCODED-m4",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n            \"digitalData\": \"DM4MMC00001441364631ef8dc2f14e1aa34852a0c1ebdadc\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/getdetails",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/getdetails\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"getdetails\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'))",
      "afterResponseScript": ""
    },
    {
      "_id": "req_82f2f986bc56486cb86adf01",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "getBatchByTUR-Single HARDCODED-m4 scof",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"test-3\",\n    \"identities\": [\n        {\n            \"id\": \"test-id-3\",\n            \"digitalData\": \"DM4MMC1IN0000000fa998e8465f04a30931fd38d3bf1b850\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/getdetails",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "getbatch-ios-m4-non-scof-pgm-id-2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/getdetails\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"getdetails\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'))",
      "afterResponseScript": ""
    },
    {
      "_id": "req_a0935e4dddd842dda23c184f",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "getBatchByTUR-Multiple",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"test-1\",\n    \"identities\": [\n        {\n            \"id\": \"test-id-1\",\n            \"digitalData\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\"\n        },\n        {\n            \"id\": \"test-id-2\",\n            \"digitalData\": \"DM4MMC0000143432f72b761f42294e38b607d3801ac35f4c\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/getdetails",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/getdetails\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"getdetails\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'))",
      "afterResponseScript": ""
    },
    {
      "_id": "req_1e91153c8b934398a77174fc",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "getBatchBy CARD_ID",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"test-1\",\n    \"identities\": [\n        {\n            \"id\": \"test-id-1\",\n            \"digitalData\": \"{{ _['pi-core-service_cardId'] }}\",\n            \"type\": \"CARD_ID\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/getdetails",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/getdetails\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"getdetails\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'))",
      "afterResponseScript": ""
    },
    {
      "_id": "req_76606af9f5424af9992c427d",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "getBatchBy CARD_ID HARDCODED",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"test-1\",\n    \"identities\": [\n        {\n            \"id\": \"test-id-1\",\n            \"digitalData\": \"aeoQiRfUSeWLf7Ot9NhhdA000000000000US\",\n            \"type\": \"CARD_ID\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/getdetails",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Inc-GOOGLE_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/getdetails\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"getdetails\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'))",
      "afterResponseScript": ""
    },
    {
      "_id": "req_3b54117f72e841b8a0116d9e",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "getBatchBy HASHED PAN",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"test-id-1\",\n            \"type\": \"HASH_PAN\",\n            \"digitalData\": \"{{ _['pi-core-service_hashedFpan'] }}\",\n            \"additionalData\": {\n                \"panExpiry\": \"0829\"\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/getdetails",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/getdetails\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"getdetails\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'))",
      "afterResponseScript": ""
    },
    {
      "_id": "req_57cb5198471b41c7baab9cc0",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "getBatchBy HASHED PAN and TUR Mixed",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"test-id-1\",\n            \"type\": \"HASH_PAN\",\n            \"digitalData\": \"9a29c3132bea6def206bc5383de846f9c0f91b2126dd4450d6bf437d84cf1901\",\n            \"additionalData\": {\n                \"panExpiry\": \"0829\"\n            }\n        },\n        {\n            \"id\": \"test-id-2\",\n            \"digitalData\": \"DM4MMC00001143931349b611152949b0bb76fe43ac20263b\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/getdetails",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/getdetails\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"getdetails\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'))",
      "afterResponseScript": ""
    },
    {
      "_id": "req_167cafecba934bc29a947a00",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "UPDATE-BATCH by TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_$randomUUID'] }}-requestId\",\n    \"items\": [\n        {\n            \"identity\": {\n                \"id\": \"{{ _['pi-core-service_$randomUUID'] }}-id\",\n                \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n                \"digitalData\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n            },\n            \"data\": {\n                \"cardIdStatus\": \"ACTIVE\",\n                \"cardArtUrl\": \"https://stage.assets.mastercard.com/card-art/itf/combined-image-asset/fb5febb9-d944-4565-b077-c5623eb2f969.png\",\n                \"tokenMetaData\": {\n                    \"productConfig\": {\n                        \"brandLogoAssetId\": \"3789637f-32a1-4810-a138-4bf34501c509\",\n                        \"isCoBranded\": \"false\",\n                        \"foregroundColor\": \"234454\",\n                        \"customerServiceUrl\": \"www.citibank.com\",\n                        \"termsAndConditionsUrl\": \"https://test.com\",\n                        \"issuerProductConfigCode\": \"122333dddd\",\n                        \"issuerName\": \"citibank\",\n                        \"shortDescription\": \"citibank mc\",\n                        \"longDescription\": \"Citi Bank Product Configuration for Manitoba over the MDES platform\",\n                        \"cardBackgroundCombinedAssetId\": \"a6157169-9ca5-43e1-98df-c3d2994ee036\"\n                    },\n                    \"tokenInfo\": {\n                        \"tokenPanSuffix\": \"5529\",\n                        \"accountPanSuffix\": \"6199\",\n                        \"financialAccountSuffix\": null,\n                        \"alternateAccountIdentifierSuffix\": null,\n                        \"tokenExpiry\": \"0727\",\n                        \"dsrpCapable\": \"true\",\n                        \"productCategory\": \"CREDIT\",\n                        \"tokenAssuranceLevel\": 10,\n                        \"accountPanExpiry\": \"0726\",\n                        \"accountPanPrefix\": \"529806\"\n                    }\n                }\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/update",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/update\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"update\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_7e74884c300a4c238b8dc197",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "UPDATE-BATCH by TUR Hardcoded",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"cloud-cloud-test-request-id-1\",\n    \"items\": [\n        {\n            \"identity\": {\n                \"id\": \"cloud-cloud-test-identity-id-1\",\n                \"digitalData\": \"DM4MMC1US0000000b6aa75c0cd334204951944193b69ea7b\",\n                \"type\": \"TOKEN_UNIQUE_REFERENCE\"\n            },\n            \"data\": {\n                \"cardId\": \"5vrjn7SuRiCt6319y5ZPOQ000000000000US\",\n                \"consumerId\": \"ChangeConsumerId23-327@test.com\",\n                \"expiryDate\": \"0829\",\n                \"tokenMetaData\": {\n                    \"productConfig\": {\n                        \"brandLogoAssetId\": \"3789637f-32a1-4810-a138-4bf34501c509\",\n                        \"isCoBranded\": \"false\",\n                        \"foregroundColor\": \"FF0000\",\n                        \"customerServiceUrl\": \"www.citibank.com\",\n                        \"termsAndConditionsUrl\": \"https: //test.com\" ,\n                        \"issuerProductConfigCode\": \"122333dddd\",\n                        \"issuerName\": \"Citi Bank\",\n                        \"shortDescription\": \"Citi Bank Product Configuration v2 mode1\",\n                        \"longDescription\": \"v2 Citi Bank Product Configuration for Manitoba over the MDES platform\",\n                        \"cardBackgroundCombinedAssetId\": \"a6157169-9ca5-43e1-98df-c3d2994ee036\"\n                    }\n                }\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/update",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/update\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"update\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_9a727c1452024a75bfe11c35",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "UPDATE-BATCH by TUR m4",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"m4-request-id-1\",\n    \"items\": [\n        {\n            \"identity\": {\n                \"id\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n                \"digitalData\": \"DM4MMC1US0000000fe616225a5fa4ad89350e00a41663da9\",\n                \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n                \"additionalData\": null\n            },\n            \"data\": {\n                \"cardIdStatus\": \"ACTIVE\",\n                \"cardArtUrl\": \"https://sbx.assets.mastercard.com/card-art/combined-image-asset/7c4c671c-0299-4651-9c46-695a8eb47e52.png\",\n                \"tokenPanEncrypted\": \"\",\n                \"tokenPanExpiryEncrypted\": \"\",\n                \"encryptedStaticToken\": \"\",\n                \"expiryDate\": \"1132\",\n                \"tokenMetaData\": {\n                    \"productConfig\": {\n                        \"brandLogoAssetId\": \"810f1c0b-3330-42c1-99bf-7ce817b6f458\",\n                        \"isCoBranded\": \"false\",\n                        \"foregroundColor\": \"C00F00\",\n                        \"customerServiceUrl\": \"www.brazil.com\",\n                        \"termsAndConditionsUrl\": \"https://test.com\",\n                        \"issuerProductConfigCode\": \"ProfName\",\n                        \"issuerName\": \"ProfName Brazil\",\n                        \"shortDescription\": \"Brazil Combo\",\n                        \"longDescription\": \"Brazil Combo long desc\",\n                        \"cardBackgroundCombinedAssetId\": \"4b3caae5-c671-4d81-ab2e-d52dcc8f58f3\"\n                    },\n                    \"tokenInfo\": {\n                        \"tokenPanSuffix\": \"0928\",\n                        \"accountPanSuffix\": \"3893\",\n                        \"financialAccountSuffix\": null,\n                        \"alternateAccountIdentifierSuffix\": null,\n                        \"tokenExpiry\": \"0227\",\n                        \"dsrpCapable\": \"true\",\n                        \"productCategory\": \"CREDIT\",\n                        \"tokenAssuranceLevel\": 10,\n                        \"accountPanExpiry\": \"1132\",\n                        \"accountPanPrefix\": \"542428\"\n                    }\n                }\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/update",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "m4-m4-corr-id-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/update\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"update\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_de1e88c8d84047bdba5bd5d6",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "UPDATE-BATCH by TUR m4 negative",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"m4-request-id-1\",\n    \"items\": [\n        {\n            \"identity\": {\n                \"id\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n                \"digitalData\": \"DM4MMC1US0000000fe616225a5fa4ad89350e00a41663da9\",\n                \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n                \"additionalData\": null\n            },\n            \"data\": {\n                \"cardIdStatus\": \"ACTIVE\",\n                \"cardArtUrl\": \"https://stage.assets.mastercard.com/card-art/itf/combined-image-asset/2f0ac8a2-6607-4341-a127-58117d1ebef8.png\",\n                \"tokenPanEncrypted\": \"\",\n                \"tokenPanExpiryEncrypted\": \"\",\n                \"encryptedStaticToken\": \"\",\n                \"expiryDate\": \"0926\",\n                \"tokenMetaData\": {\n                    \"productConfig\": {\n                        \"brandLogoAssetId\": \"3789637f-32a1-4810-a138-4bf34501c509\",\n                        \"isCoBranded\": \"false\",\n                        \"foregroundColor\": \"786868\",\n                        \"customerServiceUrl\": \"www.TESTFORSRC.com\",\n                        \"termsAndConditionsUrl\": \"https://test.com\",\n                        \"issuerProductConfigCode\": \"4565464567\",\n                        \"issuerName\": \"TESTFORSRC\",\n                        \"shortDescription\": \"TESTFORSRC\",\n                        \"longDescription\": \"TESTFORSRC long desc\",\n                        \"cardBackgroundCombinedAssetId\": \"b2b196f2-593c-4ad1-92bc-3f8264d941d8\"\n                    },\n                    \"tokenInfo\": {\n                        \"dsrpCapable\": \"true\",\n                        \"tokenAssuranceLevel\": 10,\n                        \"tokenPanSuffix\": \"3798\",\n                        \"accountPanSuffix\": \"7313\",\n                        \"accountPanPrefix\": \"520798\",\n                        \"tokenExpiry\": \"0927\",\n                        \"accountPanExpiry\": \"0926\",\n                        \"productCategory\": \"CREDIT\"\n                    }\n                }\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/update",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "m4-m4-corr-id-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/update\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"update\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_bf4a9dfc72e542ebbf4c2f27",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "UPDATE-BATCH by TUR with tokenPanEncrypted and tokenPanExpiryEncrypted (CASS call)",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"items\": [\n        {\n            \"identity\": {\n                \"id\": \"test-id-1\",\n                \"digitalData\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n                \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n                \"additionalData\": {\n                    \"panExpiry\": \"0829\"\n                }\n            },\n            \"data\": {\n                \"cardIdStatus\": \"ACTIVE\",\n                \"tokenPanEncrypted\": \"20a6e1a85aa237bc53c54bbe45d3b5ae10f1039ac41e8363404736ad0abb4e69d47e9b360b0279f693453566901f30b847b0a1959e817bea364dff981fb6b85e29\",\n                \"tokenPanExpiryEncrypted\": \"20a6e1a85aa237bc53c54bbe45d3b5ae104fa5e69180a276ccd7e0097166bcf7089e9a92a4194a1e883e1cb7a0139b765f\",\n                \"cardArtUrl\": \"https://stage3.wallet.masterpass.com/lightbox/cardbrandimages/Mastercard_Alberta.svg\",\n                \"tokenMetaData\": {\n                    \"productConfig\": {\n                        \"cardBackgroundCombinedAssetId\": \"assetid\",\n                        \"foregroundColor\": \"blue\",\n                        \"issuerName\": \"issuerName\",\n                        \"shortDescription\": \"shortDescription\",\n                        \"longDescription\": \"longDescription\",\n                        \"customerServiceUrl\": \"https://bank.com/customerservice\",\n                        \"customerServiceEmail\": \"a@mail.com\",\n                        \"customerServicePhoneNumber\": \"1234567424\",\n                        \"onlineBankingLoginUrl\": \"https://online.com\",\n                        \"termsAndConditionsUrl\": \"https://terms.com\",\n                        \"privacyPolicyUrl\": \"https://privacy.com\"\n                    },\n                    \"tokenInfo\": {\n                        \"tokenPanSuffix\": \"9463\",\n                        \"tokenPanPrefix\": \"510571\",\n                        \"tokenExpiry\": \"0727\",\n                        \"dsrpCapable\": false,\n                        \"tokenAssuranceLevel\": 0\n                    }\n                }\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/update",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/update\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"update\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_8f4ab17fe9fb4ee3922ba3cc",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "UPDATE-BATCH by CLOUD TUR with tokenPanEncrypted and tokenPanExpiryEncrypted (CASS call) WARGAME",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"items\": [\n        {\n            \"identity\": {\n                \"id\": \"test-id-1\",\n                \"digitalData\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n                \"type\": \"TOKEN_UNIQUE_REFERENCE\"\n            },\n            \"data\": {\n                \"cardIdStatus\": \"ACTIVE\",\n                \"tokenPanEncrypted\": \"28f3b70ec8fe0ce466cd5657275047e510bedf7b030f77de9c3858aa42b6930d87eeb86cc707fc446ad4769c5e7306fbe4b048228e36dc68dc433c4dc266cf8a79\",\n                \"tokenPanExpiryEncrypted\": \"28f3b70ec8fe0ce466cd5657275047e510107c8ee5c85abd0d7323b9006c3a9c7076e0557692cf0f91d93b01720cd166d9\",\n                \"cardArtUrl\": \"https://sbx.assets.mastercard.com/card-art/combined-image-asset/7c4c671c-0299-4651-9c46-695a8eb47e52.png\",\n                \"tokenMetaData\": {\n                    \"productConfig\": {\n                        \"cardBackgroundCombinedAssetId\": \"e7b7fbc7-06de-4a3b-a136-13a94f846ff3\",\n                        \"foregroundColor\": \"da65d6\",\n                        \"issuerName\": \"Test Issuer\",\n                        \"shortDescription\": \"Test Bank 3\",\n                        \"longDescription\": \"Test Bank 3 for MasterCard MTF\",\n                        \"customerServiceUrl\": \"https://bank.com/customerservice\",\n                        \"customerServiceEmail\": \"a@mail.com\",\n                        \"customerServicePhoneNumber\": \"1234567424\",\n                        \"onlineBankingLoginUrl\": \"https://online.com\",\n                        \"termsAndConditionsUrl\": \"https://terms.com\",\n                        \"privacyPolicyUrl\": \"https://privacy.com\"\n                    },\n                    \"tokenInfo\": {\n                        \"tokenPanSuffix\": \"0133\",\n                        \"tokenPanPrefix\": \"510571\",\n                        \"tokenExpiry\": \"0728\",\n                        \"dsrpCapable\": true,\n                        \"tokenAssuranceLevel\": 10\n                    }\n                }\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/update",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/update\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"update\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_f9ac4c3d36ac49acac21ac79",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "UPDATE-BATCH by STATIC TUR with tokenPanEncrypted and tokenPanExpiryEncrypted (CASS call) WARGAME",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"items\": [\n        {\n            \"identity\": {\n                \"id\": \"test-id-1\",\n                \"digitalData\": \"{{ _['pi-core-service_staticTokenUniqueReference'] }}\",\n                \"type\": \"TOKEN_UNIQUE_REFERENCE\"\n            },\n            \"data\": {\n                \"cardIdStatus\": \"ACTIVE\",\n                \"tokenPanEncrypted\": null,\n                \"tokenPanExpiryEncrypted\": null,\n                \"encryptedStaticToken\": \"28f3b70ec8fe0ce466cd5657275047e510d4715860db5bc89be6436781933c490759fd2fe3506d8039738405ba3c4c72525374a322c909766acf3fc5998eea25fb465633847a6a2c45a3bbcdfb2ed4949ed9628463db7bd2f038f1533e314b6c0c2f1d21c6ca5d3ecc8ea0a524165a598599c67940f1f6b9abcca47b58fdbaf89d4ca2b8bc64f14bfc93fb19309a8e7b3745661ecd1acdc0f5fc184f7039d97ec1d76fc09286a05ab246ca91c60039c7dd\",\n                \"cardArtUrl\": \"https://sbx.assets.mastercard.com/card-art/combined-image-asset/7c4c671c-0299-4651-9c46-695a8eb47e52.png\",\n                \"tokenMetaData\": {\n                    \"productConfig\": {\n                        \"cardBackgroundCombinedAssetId\": \"e7b7fbc7-06de-4a3b-a136-13a94f846ff3\",\n                        \"foregroundColor\": \"da65d6\",\n                        \"issuerName\": \"Test Issuer\",\n                        \"shortDescription\": \"Test Bank 3\",\n                        \"longDescription\": \"Test Bank 3 for MasterCard MTF\",\n                        \"customerServiceUrl\": \"https://bank.com/customerservice\",\n                        \"customerServiceEmail\": \"a@mail.com\",\n                        \"customerServicePhoneNumber\": \"1234567424\",\n                        \"onlineBankingLoginUrl\": \"https://online.com\",\n                        \"termsAndConditionsUrl\": \"https://terms.com\",\n                        \"privacyPolicyUrl\": \"https://privacy.com\"\n                    },\n                    \"tokenInfo\": {\n                        \"tokenPanSuffix\": \"0133\",\n                        \"tokenPanPrefix\": \"510571\",\n                        \"tokenExpiry\": \"0728\",\n                        \"dsrpCapable\": true,\n                        \"tokenAssuranceLevel\": 10\n                    }\n                }\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/update",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/update\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"update\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_fa3e3b6e5c664d4d9d5fdd28",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "UPDATE-BATCH by CARD_ID",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"items\": [\n        {\n            \"identity\": {\n                \"id\": \"test-id-1\",\n                \"digitalData\": \"{{ _['pi-core-service_cardId'] }}\",\n                \"type\": \"CARD_ID\",\n                \"additionalData\": {\n                    \"panExpiry\": \"0829\",\n                    \"somekey1\": \"somevalue2\"\n                }\n            },\n            \"data\": {\n                \"cardIdStatus\": \"ACTIVE\",\n                \"tokenPanEncrypted\": \"20a6e1a85aa237bc53c54bbe45d3b5ae10f1039ac41e8363404736ad0abb4e69d47e9b360b0279f693453566901f30b847b0a1959e817bea364dff981fb6b85e29\",\n                \"tokenPanExpiryEncrypted\": \"20a6e1a85aa237bc53c54bbe45d3b5ae104fa5e69180a276ccd7e0097166bcf7089e9a92a4194a1e883e1cb7a0139b765f\",\n                \"cardArtUrl\": \"https://stage3.wallet.masterpass.com/lightbox/cardbrandimages/Mastercard_update1.svg\",\n                \"tokenMetaData\": {\n                    \"productConfig\": {\n                        \"cardBackgroundCombinedAssetId\": \"3789637f-32a1-4810-a138-4bf34501c509\",\n                        \"foregroundColor\": \"yellow\",\n                        \"issuerName\": \"capital one\",\n                        \"shortDescription\": \"cloud shortDescription\",\n                        \"longDescription\": \"legacy cloud longDescription\"\n                    },\n                    \"tokenInfo\": {\n                        \"tokenPanSuffix\": \"9463\",\n                        \"tokenPanPrefix\": \"510571\",\n                        \"tokenExpiry\": \"0727\",\n                        \"dsrpCapable\": false,\n                        \"tokenAssuranceLevel\": 0\n                    }\n                },\n                \"staticTokenMetaData\": {\n                    \"productConfig\": {\n                        \"cardBackgroundCombinedAssetId\": \"assetid\",\n                        \"foregroundColor\": \"green\",\n                        \"issuerName\": \"capital one\",\n                        \"shortDescription\": \"legacy static shortDescription\",\n                        \"longDescription\": \"static longDescription\"\n                    },\n                    \"tokenInfo\": {\n                        \"tokenPanSuffix\": \"9463\",\n                        \"tokenPanPrefix\": \"510571\",\n                        \"tokenExpiry\": \"0727\",\n                        \"dsrpCapable\": false,\n                        \"tokenAssuranceLevel\": 0\n                    }\n                }\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/update",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/update\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"update\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_6cd9d580e53d4ffca4380b2f",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "UPDATE-BATCH by HASH_PAN - Not supported",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"items\": [\n        {\n            \"identity\": {\n                \"id\": \"replacement_card-test-26\",\n                \"type\": \"HASH_PAN\",\n                \"digitalData\": \"fa123ac97561b2d647681a2037568a54af7b97d76e00c7b67decda87812422e9\",\n                \"additionalData\": {\n                    \"panExpiry\": \"0829\"\n                }\n            },\n            \"data\": {\n                \"tokenRequestorId\": \"50123197928\",\n                \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n                \"correlationId\": \"ab9ce33a-3c7a-40ba-b4eb-01f3dd528ea1\",\n                \"paymentCardType\": \"DEBIT\",\n                \"issuerCustomerId\": \"118309\",\n                \"cardIdStatus\": \"ACTIVE\",\n                \"expiryDate\": \"1129\",\n                \"hashedPan\": \"fa123ac97561b2d647681a2037568a54af7b97d76e00c7b67decda87812422e9\",\n                \"primaryAccountNumberPrefix\": \"545503\",\n                \"primaryAccountNumberSuffix\": \"2457\",\n                \"encryptedCardCriticalData\": \"20a6e1a85aa237bc53c54bbe45d3b5ae10d3db04568e5d9342bad0562fa880e5c3941849b4b13a087b649af3ada037a9579c9e645bbaa3ebb2802e5c8708e57059ffaca37f9d80d4ffdb44eda31406dcb20aefdde3c88ce94722de9277088a9cc0cdc554d595aca1b8c77f99d36f27aadb634699a80196c12edcf488a02ff50a31ed5080e7646bb3b07b014bbeabebc668\",\n                \"tokenPanEncrypted\": \"20a6e1a85aa237bc53c54bbe45d3b5ae10f1039ac41e8363404736ad0abb4e69d47e9b360b0279f693453566901f30b847b0a1959e817bea364dff981fb6b85e29\",\n                \"tokenPanExpiryEncrypted\": \"20a6e1a85aa237bc53c54bbe45d3b5ae104fa5e69180a276ccd7e0097166bcf7089e9a92a4194a1e883e1cb7a0139b765f\",\n                \"cardArtUrl\": \"https://stage.assets.mastercard.com/card-art/combined-image-asset/HIGH-MASK-3x.png\",\n                \"consumerId\": \"7010fce2-9b53-4ae2-8530-c2c554e26260\",\n                \"programId\": \"SRC\",\n                \"issuerCountryCode\": \"840\",\n                \"clientRoutingId\": \"routing-1\",\n                \"tokenMetaData\": {\n                    \"tokenUniqueReference\": \"DM4MMC00001143931349b611152949b0bb76fe43ac20263b\",\n                    \"panUniqueReference\": \"FM4MMC00001143937c7cfce4232d474c93010034d8854637\",\n                    \"paymentAccountReference\": \"50012W0HR7C3OIPQYAQMV59T6L4KX\",\n                    \"productConfig\": {\n                        \"brandLogoAssetId\": \"3789637f-32a1-4810-a138-4bf34501c509\",\n                        \"isCoBranded\": \"false\",\n                        \"cardBackgroundCombinedAssetId\": \"fca03837-2a46-4902-9d9c-8408e41ec2e3\",\n                        \"foregroundColor\": \"0f0f0f\",\n                        \"issuerName\": \"Citi Bank\",\n                        \"shortDescription\": \"Citi Bank Product Configuration\",\n                        \"longDescription\": \"Citi Bank Product Configuration for Manitoba over the MDES platform\",\n                        \"customerServiceUrl\": \"www.citibank.com\",\n                        \"termsAndConditionsUrl\": \"https://test.com\",\n                        \"issuerProductConfigCode\": \"2123456789\"\n                    },\n                    \"tokenInfo\": {\n                        \"tokenPanSuffix\": \"4205\",\n                        \"accountPanSuffix\": \"2457\",\n                        \"alternateAccountIdentifierSuffix\": \"5432\",\n                        \"tokenExpiry\": \"0625\",\n                        \"dsrpCapable\": true,\n                        \"tokenAssuranceLevel\": 10,\n                        \"productCategory\": \"DEBIT\",\n                        \"accountPanExpiry\": \"1123\"\n                    },\n                    \"authenticationMethods\": []\n                }\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/update",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/update\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"update\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_c35af79441ba4d319feb4bec",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "DELETE-BATCH by TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_requestId'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"2\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n            \"digitalData\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n            \"additionalData\": {\n                \"panExpiry\": \"{{ _['pi-core-service_panExpiry'] }}\"\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/delete",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/delete\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"delete\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_d5e79f47034e487a9027f8be",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "DELETE-BATCH by CLOUD TUR wargame",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_requestId'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"2\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n            \"digitalData\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/delete",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/delete\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"delete\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_28ba22d0618a42c486b249c9",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "DELETE-BATCH by STATIC TUR wargame",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_requestId'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"2\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n            \"digitalData\": \"{{ _['pi-core-service_staticTokenUniqueReference'] }}\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/delete",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/delete\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"delete\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_de20d6e30c284a6a82175be4",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "DELETE-BATCH by TUR HARDCODED",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"1\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n            \"digitalData\": \"DM4MMC000011439375e752bece3441cbb668725a6ec7c944\",\n            \"additionalData\": {\n                \"panExpiry\": \"0828\"\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/delete",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/delete\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"delete\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_b128046195d64f148d4f1d52",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "DELETE-BATCH by TUR m4",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"1\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n            \"digitalData\": \"DM4MMC0000114393e817b32468424e499a28bb977df10e15\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/delete",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "m4-m4-delete-corrid-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/delete\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"delete\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_1b2f0a1497e04102be00ce5b",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "DELETE-BATCH by TUR m2",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"1\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n            \"digitalData\": \"DM4MMC1IT0000000c4d10c50a37a4447b42123cc17d05f58\",\n            \"additionalData\": {\n                \"panExpiry\": \"0828\"\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/delete",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/delete\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"delete\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_4829db6d808f4c9b82e4e3ea",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "DELETE-BATCH by CARD_ID",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_requestId'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"2\",\n            \"type\": \"CARD_ID\",\n            \"digitalData\": \"{{ _['pi-core-service_cardId'] }}\",\n            \"additionalData\": {\n                \"panExpiry\": \"0829\"\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/delete",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/delete\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"delete\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_7b1902bff77449afb457062a",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "cardArtImage-CapitalBank",
      "method": "GET",
      "url": "https://stage.assets.mastercard.com/card-art/itf/combined-image-asset/5a522c2e-7205-47f6-b31a-6ac7405eb809.png",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_2d4543ea7644484f81642e9f",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "cardArtImage-NorthShoreBank",
      "method": "GET",
      "url": "https://stage.assets.mastercard.com/card-art/itf/combined-image-asset/2f0ac8a2-6607-4341-a127-58117d1ebef8.png",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_d87d9fbc0ee647afbf88e473",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "cardArtImage-defaultImage",
      "method": "GET",
      "url": "https://stage.assets.mastercard.com/card-art/combined-image-asset/HIGH-MASK-3x.png",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_b309790627794c20a9778955",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "cardArtImage-stage-paypal-imageid-4df901d2-3795-46c2-bf34-880055459a70",
      "method": "GET",
      "url": "https://stage.assets.mastercard.com/card-art/combined-image-asset/20e2ca7e-e6e8-476a-9434-e573a572da37.png",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_2dcafa4577354aa29510f945",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "cardArtImage-stage-banamex-4fb34820-de34-4ffd-823d-7f18c570ccf4",
      "method": "GET",
      "url": "https://stage.assets.mastercard.com/card-art/combined-image-asset/72698a7d-c39f-4ce5-9140-ef8b39670e23.png",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_4e38010f596b479cabddb904",
      "_type": "request",
      "parentId": "fld_9e62f9ab36524ff298f6b232",
      "name": "cardArtImage-stage-citi-123f1128-566f-1e13-e053-18909e0a417f",
      "method": "GET",
      "url": "https://stage.assets.mastercard.com/card-art/combined-image-asset/b1c32caa-9913-4369-b0b4-1f32a511de54.png",
      "body": {},
      "parameters": [],
      "headers": [],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_faf175c0e2494898a3ded2cd",
      "_type": "request_group",
      "parentId": "fld_1d41a75ff2934f6bb41884c9",
      "name": "Outbound from Card Services"
    },
    {
      "_id": "req_a8476ce0b8fe4d80814c280a",
      "_type": "request",
      "parentId": "fld_faf175c0e2494898a3ded2cd",
      "name": "3.1 Notify token update - To Axon",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\r\n   \"requestId\":\"ac4da7a4-3e22-45cf-afb5-893fb1bfce5d\",\r\n   \"cards\":[\r\n      {\r\n         \"cardId\":\"b7g52993-512d-5449-cb61-1c50020167b3\",\r\n         \"hashedFPAN\":\"6e8ecae713c99302902897c9528626887dc4c20df4026e8d8ec4cf2d266a86bc\",\r\n         \"primaryAccountNumberSuffix\":\"4265\",\r\n         \"paymentNetworkName\":\"Mastercard\",\r\n         \"cardArtUrl\":\"http://cardartforsrc.com\",\r\n         \"cardIdStatus\":\"ACTIVE\",\r\n         \"consumerId\":\"neo.anderson@abcxyz.com\",\r\n         \"tokenSuffix\":\"1234\",\r\n         \"coBrandName\":\"Co Brand Partner\",\r\n         \"issuerName\":\"Issuing Bank\",\r\n         \"shortProductDescription\":\"Bank Rewards Mastercard\",\r\n         \"longProductDescription\":\"Bank Rewards Mastercard with Rewards Program\",\r\n         \"fpanExpiration\":\"2012\",\r\n         \"paymentAccountReference\":\"585b128b-999e-473d-b60c-f2a1121b12ba\",\r\n         \"tokenUniqueReference\":\"{{ _['pi-core-service_sourceTokenUniqueReference'] }}\",\r\n         \"addressVerificationResult\":\"NOT_PERFORMED\",\r\n         \"programId\":\"123456\",\r\n         \"lastUpdatedTimestamp\":\"2019-07-04T12:08:56.123-07:00\"\r\n      },\r\n      {\r\n         \"cardId\":\"1c5002993-512d-5449-cb61- b7g5220167b3\",\r\n         \"hashedFPAN\": \"6e8ecae713c99302902897c9528626887dc4c20df4026e8d8ec4cf2d266a86bc\",\r\n         \"primaryAccountNumberSuffix\":\"4631\",\r\n         \"paymentNetworkName\":\"Mastercard\",\r\n         \"cardArtUrl\":\"http://cardartforsrc.com\",\r\n         \"cardIdStatus\":\"ACTIVE\",\r\n         \"consumerId\":\"trinity@zyxcba.com\",\r\n         \"tokenSuffix\":\"1234\",\r\n         \"coBrandName\":\"Co Brand Partner\",\r\n         \"issuerName\":\"Issuing Bank\",\r\n         \"shortProductDescription\":\"Bank Rewards Mastercard\",\r\n         \"longProductDescription\":\"Bank Rewards Mastercard with Rewards Program\",\r\n         \"fpanExpiration\":\"2026\",\r\n         \"paymentAccountReference\":\"585b128b-999e-473d-b60c-f2a1121b12ba\",\r\n         \"tokenUniqueReference\":\"{{ _['pi-core-service_sourceTokenUniqueReference'] }}\",\r\n         \"addressVerificationResult\":\"NOT_PERFORMED\",\r\n         \"programId\":\"123456\",\r\n         \"lastUpdatedTimestamp\":\"2019-07-04T12:08:56.123-07:00\"\r\n      }\r\n   ]\r\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_notifyTokenUpdate'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/notifyTokenUpdate\r\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_notifyTokenUpdate')]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_b057eb2ec1884637ba2bfd74",
      "_type": "request",
      "parentId": "fld_faf175c0e2494898a3ded2cd",
      "name": "3.2 Notify Transaction Details - To Axon",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\r\n   \"requestId\":\"8083-201\",\r\n   \"transactions\":[\r\n      {\r\n         \"recordId\":\"3cd80a1f-f13a-42c2-b141-17da8c287765\",\r\n         \"transactionIdentifier\":\"4MMC0000000001b3d8d5aaa34240efbd3ac0a596d1bce9\",\r\n         \"tokenUniqueReference\":\"{{ _['pi-core-service_sourceTokenUniqueReference'] }}\",\r\n         \"transactionType\":\"PURCHASE\",\r\n         \"amount\":123.45,\r\n         \"currencyCode\":\"USD\",\r\n         \"authorizationStatus\":\"CLEARED\",\r\n         \"transactionTimestamp\":\"2016-04-25T12:00:00.000-07:00\",\r\n         \"merchantName\":\"Bob's Burgers\",\r\n         \"merchantType\":\"5812\",\r\n         \"merchantPostalCode\":\"61000\",\r\n         \"installments\":1,\r\n         \"transactionCountryCode\":\"840\",\r\n         \"comboCordAccountType\":\"\",\r\n         \"issuerResponseInformation\":\"\",\r\n         \"programId\":\"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\r\n         \"consumerId\":\"burgers@bobsburgers.com\",\r\n         \"cardId\":\"386a2d5e-3018-49b0-ab93-6817ea602070\"\r\n      },\r\n      {\r\n         \"recordId\":\"3cd80a1f-f13a-42c2-b141-17da8c287765\",\r\n         \"transactionIdentifier\":\"DM4MMC000000000186ed152376c740d78a5b81450a0d5d72\",\r\n         \"tokenUniqueReference\":\"{{ _['pi-core-service_sourceTokenUniqueReference'] }}\",\r\n         \"transactionType\":\"PURCHASE\",\r\n         \"amount\":129.45,\r\n         \"currencyCode\":\"USD\",\r\n         \"authorizationStatus\":\"CLEARED\",\r\n         \"transactionTimestamp\":\"2016-04-25T12:00:00.000-07:00\",\r\n         \"merchantName\":\"Bob's Burgers1\",\r\n         \"merchantType\":\"5812\",\r\n         \"merchantPostalCode\":\"61000\",\r\n         \"installments\":1,\r\n         \"transactionCountryCode\":\"840\",\r\n         \"comboCordAccountType\":\"\",\r\n         \"issuerResponseInformation\":\"\",\r\n         \"programId\":\"SECURE_COF_COMMERCE_PLATFORM#E2E#01\",\r\n         \"consumerId\":\"burgers@bobsburgers.com\",\r\n         \"cardId\":\"386a2d5e-3018-49b0-ab93-6817ea602070\"\r\n      }\r\n   ]\r\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_pushTransactionDetails'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/pushTransactionDetails\r\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_pushTransactionDetails')]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_f12a9c944f054d29be8d9fff",
      "_type": "request",
      "parentId": "fld_faf175c0e2494898a3ded2cd",
      "name": "3.3 Get Card Art Url",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_card-art-url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\r\n    \"assetIds\": [\r\n        \"d06f8439-3cb3-47a8-80ae-ce4630db2b8f\",\r\n        \"739d27e5-629d-11e3-949a0800200c9a67png\"\r\n    ]\r\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_card-art-service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_api'] }}{{ _['pi-core-service_assets'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/api/assets\r\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_api'), insomnia.environment.get('pi-core-service_assets')]);\r\n\r\n// let apiUrl = new utils.DirectUrlBuilder()\r\n//         .addHost()\r\n//         .addUrls([insomnia.environment.get('pi-core-service_api'), insomnia.environment.get('pi-core-service_assets')])\r\n//         .build();\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n//https://blue-src-stage-card-art-service.apps.stl.pcfstage00.mastercard.int - route to card art app",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_5a7d0419a85a476eb2df56e9",
      "_type": "request_group",
      "parentId": "fld_1d41a75ff2934f6bb41884c9",
      "name": "byFeatures"
    },
    {
      "_id": "fld_c7cdae6b45b84a24b19a318f",
      "_type": "request_group",
      "parentId": "fld_5a7d0419a85a476eb2df56e9",
      "name": "India on Soil"
    },
    {
      "_id": "fld_8751b120792e4fb6a492960f",
      "_type": "request_group",
      "parentId": "fld_5a7d0419a85a476eb2df56e9",
      "name": "CCF"
    },
    {
      "_id": "fld_b1671c527baa4586937cd0df",
      "_type": "request_group",
      "parentId": "fld_5a7d0419a85a476eb2df56e9",
      "name": "Sanctions"
    },
    {
      "_id": "req_6642d8ffc6924f2a8c1f23d7",
      "_type": "request",
      "parentId": "fld_b1671c527baa4586937cd0df",
      "name": "Update test data with missing issuerCustomerId, countryCode",
      "method": "PUT",
      "url": "https://paymentinstrument-services-jenny.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/card/{{ _['pi-core-service_cardId'] }}/patch",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardMetaDataAttributes\": [\n        {\n            \"fieldName\": \"ICC\",\n            \"fieldValue\": null\n        },\n        {\n            \"fieldName\": \"CID\",\n            \"fieldValue\": null\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}/patch",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "772153eb-3a7c-43df-ab4a-58cec6d0b047",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\ninsomnia.environment.set('pi-core-service_cardIdBKP', insomnia.environment.get('pi-core-service_cardId'));\n\n//insomnia.environment.set('pi-core-service_cardId', \"0f11d216-22d8-48fb-831e-d86bb832f328\");",
      "afterResponseScript": "insomnia.environment.set('pi-core-service_cardId', insomnia.environment.get('pi-core-service_cardIdBKP'));\npm.collectionVariables.unset(\"cardIdBKP\");"
    },
    {
      "_id": "fld_9c6e06f511584b19b3cb0ee8",
      "_type": "request_group",
      "parentId": "fld_5a7d0419a85a476eb2df56e9",
      "name": "BFF"
    },
    {
      "_id": "req_5eb395b41b39493cbb78196d",
      "_type": "request",
      "parentId": "fld_9c6e06f511584b19b3cb0ee8",
      "name": "Enroll card-tokenized-AC1-S2655676",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5204248789938634\",\n    \"tokenType\": \"STATIC\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenOnly\": true,\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Anne\",\n    \"consumerId\": \"dfwjecvsdffZdsddet.test.com\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//3ds test data for static token - 5204248751100114\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_f355e59e58d944779275ae9d",
      "_type": "request",
      "parentId": "fld_9c6e06f511584b19b3cb0ee8",
      "name": "Enroll card-tokenized-AC2-S2655676",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"11111222223\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"null\",\n    \"consumerId\": \"zoeasacsdsdffdfdg@testconsumer.com\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\":\"CLOUD\",\n    \"tokenOnly\": true,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_02544afe7389433a84e1004e",
      "_type": "request",
      "parentId": "fld_9c6e06f511584b19b3cb0ee8",
      "name": "Enroll card-tokenized-AC3-S2655676",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031977709900\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"null\",\n    \"consumerId\": \"zoeaghfdffghjg@testconsumer.com\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_04f881c2bd424c8ab9b43514",
      "_type": "request",
      "parentId": "fld_9c6e06f511584b19b3cb0ee8",
      "name": "Enroll card-non-tokenized-AC4-S2655676",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber-non-tokenized'] }}\",\n    \"expiryDate\": \"0830\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"null\",\n    \"consumerId\": \"zogew41@testconsumenet.com\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenOnly\": false,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenType\": \"STATIC\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_ee3a5b886aab47138f257d46",
      "_type": "request",
      "parentId": "fld_9c6e06f511584b19b3cb0ee8",
      "name": "Enroll card-tokenized-CLOUD-S2655676",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber'] }}\",\n    \"expiryDate\": \"0828\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"null\",\n    \"consumerId\": \"zoeasdswwterrfhjg@testconsumer.com\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"tokenOnly\": true,\n    \"enrolmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_68204d1c0a10439cb49b894f",
      "_type": "request",
      "parentId": "fld_9c6e06f511584b19b3cb0ee8",
      "name": "Enroll card with TUR - static token",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_sourceTokenUniqueReference'] }}\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"apple-cloud-tesesdfet5fderdddehdwer\",\n    \"tokenRequestorId\": \"11111222223\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_1d38a3aae8c24c07aa24e41f",
      "_type": "request_group",
      "parentId": "fld_5a7d0419a85a476eb2df56e9",
      "name": "34.1 Support"
    },
    {
      "_id": "fld_7fd46a310ec44426a4821d91",
      "_type": "request_group",
      "parentId": "fld_1d38a3aae8c24c07aa24e41f",
      "name": "Enroll tur bff card_added_manually issue"
    },
    {
      "_id": "req_83d366469cb348ed837661f2",
      "_type": "request",
      "parentId": "fld_7fd46a310ec44426a4821d91",
      "name": "Enroll card-tokenized-AC1-S2655676",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500000512\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenOnly\": true,\n    \"tokenType\": \"STATIC\",\n    \"expiryDate\": \"0829\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Anne\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Inc-GOOGLE_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd72h1f-f13a-42c2-b141-17dafh6rd768-zoe11",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//works with static: 5204248789938634-GB, 3DS",
      "afterResponseScript": "//3ds test data for static token - 5204248751100114\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_3e3059e794fe4f97a4eae7d2",
      "_type": "request",
      "parentId": "fld_7fd46a310ec44426a4821d91",
      "name": "Enroll card with TUR",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"FM4MMC000000000129158f31dbe243dba566236be93ec78d\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenType\": \"STATIC\",\n    \"consumerId\": \"nbrfdthrdf@seawefsd.net\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_digitalData', jsonData.cardMetaData.hashedFPAN);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_6522dcd4e48a49eaaf28d229",
      "_type": "request",
      "parentId": "fld_7fd46a310ec44426a4821d91",
      "name": "Enroll card with TUR",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenType\": \"STATIC\",\n    \"consumerId\": \"sasgjkllmmlhjkjuytgla@gmail.com\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd72h1f-f13a-44nc2-b141-17dafbhfd768-zoe04",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_4d582e1da5934fa4b87f39fe",
      "_type": "request_group",
      "parentId": "fld_1d38a3aae8c24c07aa24e41f",
      "name": "Checkout polytransactioncredentials issue"
    },
    {
      "_id": "req_68657b6a38c34f75a0eef5aa",
      "_type": "request",
      "parentId": "fld_4d582e1da5934fa4b87f39fe",
      "name": "Polytransactioncredentials - DTVC - cardId",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n// previous hard-coded transactionId\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_9ed4fa73bce6440d9677c083",
      "_type": "request",
      "parentId": "fld_4d582e1da5934fa4b87f39fe",
      "name": "Polytransactioncredentials - DTVC - TUR - BFT",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n// previous hard-coded transactionId\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\n\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_855ca438acb24b129aaf3c14",
      "_type": "request",
      "parentId": "fld_4d582e1da5934fa4b87f39fe",
      "name": "Polytransactioncredentials - Multicredential Request Copy",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12334\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        },\n        {\n            \"credentialRequestId\": \"12337\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12339\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_8685e813654247458240a4db",
      "_type": "request",
      "parentId": "fld_4d582e1da5934fa4b87f39fe",
      "name": "Polytransactioncredentials - Multicredential Request",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        },\n        {\n            \"credentialRequestId\": \"12333\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        },\n        {\n            \"credentialRequestId\": \"5\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd80a1f-f13a-42c2-b141-17da8c287765",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_97bfca2c68ec4c08ae6b6075",
      "_type": "request",
      "parentId": "fld_4d582e1da5934fa4b87f39fe",
      "name": "Polytransactioncredentials - UCAF_V0",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_fe550e9df1de472693e6291f",
      "_type": "request",
      "parentId": "fld_4d582e1da5934fa4b87f39fe",
      "name": "Polytransactioncredentials - UCAF_V3",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12332\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3LmphYmFsdWNhbi5jb20=\"\n            },\n            \"unpredictableNumber\": \"11111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_be63bf2b98e749c98f7124dc",
      "_type": "request",
      "parentId": "fld_4d582e1da5934fa4b87f39fe",
      "name": "Polytransactioncredentials - FPAN - cardId",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"5\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Inc-GOOGLE_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\r\n\r\n//previous cardreference from body - gives invalid credential type error for fpan:\r\n// \"cardReference\": {\r\n//         \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\r\n//         \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\r\n//     },",
      "afterResponseScript": ""
    },
    {
      "_id": "req_47b2776be82447b0a253318d",
      "_type": "request",
      "parentId": "fld_4d582e1da5934fa4b87f39fe",
      "name": "Polytransactioncredentials - FPAN - TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"5\",\n            \"transactionOptions\": {\n                \"credentialType\": \"FPAN\"\n            }\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Inc-GOOGLE_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());\r\n\r\n//previous cardreference from body - gives invalid credential type error for fpan:\r\n// \"cardReference\": {\r\n//         \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\r\n//         \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\r\n//     },",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_d8ea88d01c454ec98777219b",
      "_type": "request_group",
      "parentId": "fld_5a7d0419a85a476eb2df56e9",
      "name": "NMS (paymentNetworkName)"
    },
    {
      "_id": "req_b3bde3eba5da4cd3aae80058",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - US - Maestro - Tokenized",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"50951201679231264\",\n    \"expiryDate\": \"0829\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"mani\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": false,\n    \"tokenOnly\": false\n}\n//50951201679231264-00 US maestro\n//5095100348002852736 US maestro\n//6392410225083665267 NLD maestro\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "let requestJson = JSON.parse(pm.request.body[pm.request.body.mode]);\nlet responseJson = insomnia.response.json();\n\ninsomnia.test(\"paymentNetworkName is equals to Maestro\", () => {\n    const paymentNetworkName = responseJson.cardMetaData.paymentNetworkName;\n    insomnia.expect(paymentNetworkName).to.be.equals(\"maestro\");\n});\n\ninsomnia.test(\"issuerCountryCode is equals to US 840\", () => {\n    const countryCode = responseJson.cardMetaData.issuerCountryCodeInfo[0].countryCode;\n    insomnia.expect(countryCode).to.be.equals(\"US\");\n    insomnia.expect(responseJson.cardMetaData.issuerCountryCode).to.be.equals(\"840\");   \n});\n\ninsomnia.test(\"tokenUniqueReference is not null.(tokenized)\", () => {\n    const tokenUniqueReference = responseJson.cardMetaData.tokenUniqueReference;    \n    insomnia.expect(tokenUniqueReference).to.be.not.equals(null);\n});\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_3109b887547c4273a4c205bd",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - US - BY TUR  - Maestro - Tokenized",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "let requestJson = JSON.parse(pm.request.body[pm.request.body.mode]);\nlet responseJson = insomnia.response.json();\n\ninsomnia.test(\"paymentNetworkName is equals to Maestro\", () => {\n    const paymentNetworkName = responseJson.cardMetaData.paymentNetworkName;\n    insomnia.expect(paymentNetworkName).to.be.equals(\"maestro\");\n});\n\ninsomnia.test(\"issuerCountryCode is equals to US 840\", () => {\n    const countryCode = responseJson.cardMetaData.issuerCountryCodeInfo[0].countryCode;\n    insomnia.expect(countryCode).to.be.equals(\"US\");\n    insomnia.expect(responseJson.cardMetaData.issuerCountryCode).to.be.equals(\"840\");   \n});\n\ninsomnia.test(\"tokenUniqueReference is not null.(tokenized)\", () => {\n    const tokenUniqueReference = responseJson.cardMetaData.tokenUniqueReference;    \n    insomnia.expect(tokenUniqueReference).to.be.not.equals(null);\n});\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_270edaf3edd8409398f50ce8",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - US - BY PUR - Maestro - Tokenized",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"tokenUniqueReference\": \"\",\n   \"panUniqueReference\": \"FM4MMC00001143939d809f992b0f49ba8f12e13df88fcab8\",\n   \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n   \"enrollmentSourceReference\": \"panUniqueReference\",\n   \"enrollmentProviderId\": \"enrollmentProviderId\",\n   \"existing_credential\": \"EXISTING_CREDENTIAL\",\n   \"clientRoutingId\": \"clientRoutingId\",\n   \"primaryAccountNumber\": \"\",\n   \"expiryDate\": \"0831\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50122967937\",\n   \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": false,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "let requestJson = JSON.parse(pm.request.body[pm.request.body.mode]);\nlet responseJson = insomnia.response.json();\n\ninsomnia.test(\"paymentNetworkName is equals to Maestro\", () => {\n    const paymentNetworkName = responseJson.cardMetaData.paymentNetworkName;\n    insomnia.expect(paymentNetworkName).to.be.equals(\"maestro\");\n});\n\ninsomnia.test(\"issuerCountryCode is equals to US 840\", () => {\n    const countryCode = responseJson.cardMetaData.issuerCountryCodeInfo[0].countryCode;\n    insomnia.expect(countryCode).to.be.equals(\"US\");\n    insomnia.expect(responseJson.cardMetaData.issuerCountryCode).to.be.equals(\"840\");   \n});\n\ninsomnia.test(\"tokenUniqueReference is not null.(tokenized)\", () => {\n    const tokenUniqueReference = responseJson.cardMetaData.tokenUniqueReference;    \n    insomnia.expect(tokenUniqueReference).to.be.not.equals(null);\n});\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_bf1688acadd64d6aa32b7b22",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - US - mastercard - Tokenized",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5207980015967857\",\n    \"expiryDate\": \"0829\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"mani\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "let requestJson = JSON.parse(pm.request.body[pm.request.body.mode]);\nlet responseJson = insomnia.response.json();\n\ninsomnia.test(\"paymentNetworkName is equals to mastercard\", () => {\n    const paymentNetworkName = responseJson.cardMetaData.paymentNetworkName;\n    insomnia.expect(paymentNetworkName).to.be.equals(\"mastercard\");\n});\n\ninsomnia.test(\"issuerCountryCode is equals to US 840\", () => {\n    const countryCode = responseJson.cardMetaData.issuerCountryCodeInfo[0].countryCode;\n    insomnia.expect(countryCode).to.be.equals(\"US\");\n    insomnia.expect(responseJson.cardMetaData.issuerCountryCode).to.be.equals(\"840\");   \n});\n\ninsomnia.test(\"tokenUniqueReference is not null.(tokenized)\", () => {\n    const tokenUniqueReference = responseJson.cardMetaData.tokenUniqueReference;    \n    insomnia.expect(tokenUniqueReference).to.be.not.equals(null);\n});"
    },
    {
      "_id": "req_d12436091d3e4829b3a03f8e",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - US - BY TUR  - mastercard - Tokenized",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC000011825499ec7e710dbb4093b2eb2289408ad564\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "let requestJson = JSON.parse(pm.request.body[pm.request.body.mode]);\nlet responseJson = insomnia.response.json();\n\ninsomnia.test(\"paymentNetworkName is equals to Maestro\", () => {\n    const paymentNetworkName = responseJson.cardMetaData.paymentNetworkName;\n    insomnia.expect(paymentNetworkName).to.be.equals(\"maestro\");\n});\n\ninsomnia.test(\"issuerCountryCode is equals to US 840\", () => {\n    const countryCode = responseJson.cardMetaData.issuerCountryCodeInfo[0].countryCode;\n    insomnia.expect(countryCode).to.be.equals(\"US\");\n    insomnia.expect(responseJson.cardMetaData.issuerCountryCode).to.be.equals(\"840\");   \n});\n\ninsomnia.test(\"tokenUniqueReference is not null.(tokenized)\", () => {\n    const tokenUniqueReference = responseJson.cardMetaData.tokenUniqueReference;    \n    insomnia.expect(tokenUniqueReference).to.be.not.equals(null);\n});\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_7559169b59294ea5a7ba9c6e",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - US - BY PUR  - mastercard - Tokenized",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"tokenUniqueReference\": \"\",\n   \"panUniqueReference\": \"FM4MMC000011825463d8d7810f394a0bb8fa5baab6a677bd\",\n   \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n   \"enrollmentSourceReference\": \"panUniqueReference\",\n   \"enrollmentProviderId\": \"enrollmentProviderId\",\n   \"existing_credential\": \"EXISTING_CREDENTIAL\",\n   \"clientRoutingId\": \"clientRoutingId\",\n   \"primaryAccountNumber\": \"\",\n   \"expiryDate\": \"0831\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50122967937\",\n   \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": false,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "let requestJson = JSON.parse(pm.request.body[pm.request.body.mode]);\nlet responseJson = insomnia.response.json();\n\ninsomnia.test(\"paymentNetworkName is equals to Maestro\", () => {\n    const paymentNetworkName = responseJson.cardMetaData.paymentNetworkName;\n    insomnia.expect(paymentNetworkName).to.be.equals(\"maestro\");\n});\n\ninsomnia.test(\"issuerCountryCode is equals to US 840\", () => {\n    const countryCode = responseJson.cardMetaData.issuerCountryCodeInfo[0].countryCode;\n    insomnia.expect(countryCode).to.be.equals(\"US\");\n    insomnia.expect(responseJson.cardMetaData.issuerCountryCode).to.be.equals(\"840\");   \n});\n\ninsomnia.test(\"tokenUniqueReference is not null.(tokenized)\", () => {\n    const tokenUniqueReference = responseJson.cardMetaData.tokenUniqueReference;    \n    insomnia.expect(tokenUniqueReference).to.be.not.equals(null);\n});\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_6232660a4b1d4f4fb351f3a3",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - MX - mastercard - Tokenized",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031247200300\",\n    \"expiryDate\": \"1123\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"mani\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "let requestJson = JSON.parse(pm.request.body[pm.request.body.mode]);\nlet responseJson = insomnia.response.json();\n\ninsomnia.test(\"paymentNetworkName is equals to mastercard\", () => {\n    const paymentNetworkName = responseJson.cardMetaData.paymentNetworkName;\n    insomnia.expect(paymentNetworkName).to.be.equals(\"mastercard\");\n});\n\ninsomnia.test(\"issuerCountryCode is equals to MX 484\", () => {\n    const countryCode = responseJson.cardMetaData.issuerCountryCodeInfo[0].countryCode;\n    insomnia.expect(countryCode).to.be.equals(\"MX\");\n    insomnia.expect(responseJson.cardMetaData.issuerCountryCode).to.be.equals(\"484\");\n});\n\ninsomnia.test(\"tokenUniqueReference is not null.(tokenized)\", () => {\n    const tokenUniqueReference = responseJson.cardMetaData.tokenUniqueReference;\n    insomnia.expect(tokenUniqueReference).to.be.not.equals(null);\n});"
    },
    {
      "_id": "req_16769aee1ba446cea888e019",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - MX - mastercard - Tokenized Copy",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031247200300\",\n    \"expiryDate\": \"1123\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"mani\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "let requestJson = JSON.parse(pm.request.body[pm.request.body.mode]);\nlet responseJson = insomnia.response.json();\n\ninsomnia.test(\"paymentNetworkName is equals to mastercard\", () => {\n    const paymentNetworkName = responseJson.cardMetaData.paymentNetworkName;\n    insomnia.expect(paymentNetworkName).to.be.equals(\"mastercard\");\n});\n\ninsomnia.test(\"issuerCountryCode is equals to MX 484\", () => {\n    const countryCode = responseJson.cardMetaData.issuerCountryCodeInfo[0].countryCode;\n    insomnia.expect(countryCode).to.be.equals(\"MX\");\n    insomnia.expect(responseJson.cardMetaData.issuerCountryCode).to.be.equals(\"484\");\n});\n\ninsomnia.test(\"tokenUniqueReference is not null.(tokenized)\", () => {\n    const tokenUniqueReference = responseJson.cardMetaData.tokenUniqueReference;\n    insomnia.expect(tokenUniqueReference).to.be.not.equals(null);\n});"
    },
    {
      "_id": "req_b389518628614c71a3a192e1",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - US - NonTokenized  - default - mastercard - when  no paymentNetworkName in yml doc",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5400170000064598\",\n    \"expiryDate\": \"0829\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"mani\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "let requestJson = JSON.parse(pm.request.body[pm.request.body.mode]);\nlet responseJson = insomnia.response.json();\n\ninsomnia.test(\"paymentNetworkName is equals to mastercard\", () => {\n    const paymentNetworkName = responseJson.cardMetaData.paymentNetworkName;\n    insomnia.expect(paymentNetworkName).to.be.equals(\"mastercard\");\n});\n\ninsomnia.test(\"issuerCountryCode is equals to US 840\", () => {\n    const countryCode = responseJson.cardMetaData.issuerCountryCodeInfo[0].countryCode;\n    insomnia.expect(countryCode).to.be.equals(\"US\");\n    insomnia.expect(responseJson.cardMetaData.issuerCountryCode).to.be.equals(\"840\");\n});\n\ninsomnia.test(\"tokenUniqueReference is null.(non tokenized)\", () => {\n    const tokenUniqueReference = responseJson.cardMetaData.tokenUniqueReference;\n    insomnia.expect(tokenUniqueReference).to.be.equals(null);\n});"
    },
    {
      "_id": "req_6dd500ca63724e04bc1d6842",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - US - NonTokenized  - VISA",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"4988750000064566\",\n    \"expiryDate\": \"1129\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"null\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"tokenOnly\": false,\n    \"enrollAsFpanOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "let requestJson = JSON.parse(pm.request.body[pm.request.body.mode]);\nlet responseJson = insomnia.response.json();\n\ninsomnia.test(\"paymentNetworkName is equals to visa\", () => {\n    const paymentNetworkName = responseJson.cardMetaData.paymentNetworkName;\n    insomnia.expect(paymentNetworkName).to.be.equals(\"visa\");\n});\n\ninsomnia.test(\"issuerCountryCode is equals to US 840\", () => {\n    const countryCode = responseJson.cardMetaData.issuerCountryCodeInfo[0].countryCode;\n    insomnia.expect(countryCode).to.be.equals(\"US\");\n    insomnia.expect(responseJson.cardMetaData.issuerCountryCode).to.be.equals(\"840\");\n});\n\ninsomnia.test(\"tokenUniqueReference is null.(non tokenized)\", () => {\n    const tokenUniqueReference = responseJson.cardMetaData.tokenUniqueReference;\n    insomnia.expect(tokenUniqueReference).to.be.equals(null);\n});"
    },
    {
      "_id": "req_8a5a0f8c464a479c9505220f",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - NL - Maestro - Tokenized",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_primaryAccountNumber-nld-maestro'] }}\",\n    \"expiryDate\": \"0829\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"mani\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "let requestJson = JSON.parse(pm.request.body[pm.request.body.mode]);\nlet responseJson = insomnia.response.json();\n\ninsomnia.test(\"paymentNetworkName is equals to maestro\", () => {\n    const paymentNetworkName = responseJson.cardMetaData.paymentNetworkName;\n    insomnia.expect(paymentNetworkName).to.be.equals(\"maestro\");\n});\n\ninsomnia.test(\"issuerCountryCode is equals to NL 528\", () => {\n    const countryCode = responseJson.cardMetaData.issuerCountryCodeInfo[0].countryCode;\n    insomnia.expect(countryCode).to.be.equals(\"NL\");\n    insomnia.expect(responseJson.cardMetaData.issuerCountryCode).to.be.equals(\"528\");\n});\n\ninsomnia.test(\"tokenUniqueReference is not null.(tokenized)\", () => {\n    const tokenUniqueReference = responseJson.cardMetaData.tokenUniqueReference;\n    insomnia.expect(tokenUniqueReference).to.be.not.equals(null);\n});\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_a9c9aaf5d7104a4d8632e4ce",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - NL - BY TUR - maestro using FPAN NL enrolled",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC00001143933f8994c1daf64f60890c87c91cd5dc40\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenRequestorId\": \"50122967937\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_d426f516a9a8483aaaf499f7",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - NL - BY PUR - maestro using FPAN NL enrolled",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"tokenUniqueReference\": \"\",\n   \"panUniqueReference\": \"FM4MMC00001143935394f6f44c0a4c25ab23ec8468e54c5f\",\n   \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n   \"enrollmentSourceReference\": \"panUniqueReference\",\n   \"enrollmentProviderId\": \"enrollmentProviderId\",\n   \"existing_credential\": \"EXISTING_CREDENTIAL\",\n   \"clientRoutingId\": \"clientRoutingId\",\n   \"primaryAccountNumber\": \"\",\n   \"expiryDate\": \"0831\",\n   \"pushAccountReceipt\":\"\",\n   \"tokenRequestorId\": \"50122967937\",\n   \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": false,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_79c75dd5e4d74417a30818bd",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - US - PUSH_ACCOUNT_RECEIPT - Mastercard",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Mani Srni\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"pushAccountReceipt\": \"MCC-STL-E9F77A33-DC79-4339-B091-58B20061CHEZ\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "let requestJson = JSON.parse(pm.request.body[pm.request.body.mode]);\nlet responseJson = insomnia.response.json();\n\ninsomnia.test(\"paymentNetworkName is equals to mastercard\", () => {\n    const paymentNetworkName = responseJson.cardMetaData.paymentNetworkName;\n    insomnia.expect(paymentNetworkName).to.be.equals(\"mastercard\");\n});\n\ninsomnia.test(\"issuerCountryCode is equals to US 840\", () => {\n    const countryCode = responseJson.cardMetaData.issuerCountryCodeInfo[0].countryCode;\n    insomnia.expect(countryCode).to.be.equals(\"US\");\n    insomnia.expect(responseJson.cardMetaData.issuerCountryCode).to.be.equals(\"840\");\n});\n\ninsomnia.test(\"tokenUniqueReference is not null.(tokenized)\", () => {\n    const tokenUniqueReference = responseJson.cardMetaData.tokenUniqueReference;\n    insomnia.expect(tokenUniqueReference).to.be.not.equals(null);\n});"
    },
    {
      "_id": "req_295227875ec8482c80989e53",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - PUSH_ACCOUNT_RECEIPT - maestro",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Peter Parker\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"pushAccountReceipt\": \"MCC-STL-E9F77A33-DC79-4340-C102-58B20061CCBK\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_aa4781c408a94ef78ef8865e",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment- US - Non Tokenized - tokenOnly - false - maestro",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5095120106392294\",\n    \"expiryDate\": \"0930\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"tokenType\": \"CLOUD\",\n    \"accountInfoNeeded\": true,\n    \"tokenOnly\": false,\n    \"enrollAsFpanOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_0b8fa7a488784b9c90274cd9",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment- NL - Non Tokenized - tokenOnly - false - maestro",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5010243814437479517\",\n    \"expiryDate\": \"0930\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"tokenType\": \"CLOUD\",\n    \"accountInfoNeeded\": true,\n    \"tokenOnly\": false,\n    \"enrollAsFpanOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_ceeaffabfb694d038724e7cb",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment- US - Non Tokenized - tokenOnly - false - mastercard",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5400170000000055\",\n    \"expiryDate\": \"0930\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"tokenType\": \"CLOUD\",\n    \"tokenOnly\": false,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_21eeae3988ae4e5386c12c6f",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - US - Tokenized - tokenOnly - true - maestro",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5095120106392294\",\n    \"expiryDate\": \"0930\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"tokenType\": \"CLOUD\",\n    \"tokenOnly\": true,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_19400305969c452c9b5c9f4a",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - NL - Tokenized - tokenOnly - true - maestro",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5010243814437479517\",\n    \"expiryDate\": \"0930\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"tokenType\": \"CLOUD\",\n    \"tokenOnly\": true,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_6c147e82b73949239d530788",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - Tokenized - tokenType - static - maestro",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5095120106392294\",\n    \"expiryDate\": \"0930\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_8a0c3c1e87d24f0ea7ee1335",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - Tokenized - tokenType - static - mastercard",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500000314\",\n    \"expiryDate\": \"0930\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_0d58e30a066f4018810d63e4",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enrollment - Tokenized - tokenType - cloud - mastercard",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500000314\",\n    \"expiryDate\": \"0930\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomEmail'] }}\",\n    \"tokenType\": \"CLOUD\",\n    \"tokenOnly\": true,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}-mani-1",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_9cb21ca64ee34ba1b7259fc7",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Delete card by cardId unmigrate-token=true for Migrate Token Enrollment",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}?unmigrate-token=true",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "unmigrate-token",
          "value": "true"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one method and url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Optional - clear variables for deleted card\r\n// insomnia.environment.set('pi-core-service_cardId', \"\");\r\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', \"\");\r\n// // insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', \"\");\r\n// // insomnia.environment.set('pi-core-service_sourcePANUniqueReference', \"\");\r\n// insomnia.environment.set('pi-core-service_consumerId', \"\");\r\n\r\n// insomnia.environment.set('pi-core-service_tokenRequestorId', \"\");"
    },
    {
      "_id": "req_3b7a337b905e4332b14742de",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Enroll card-Migrate Token",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n    \"enrollmentType\": \"MIGRATE_TOKEN\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n    \"consumerId\": \"{{ _['pi-core-service_consumerId'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_tokenRequestorId'] }}\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"nc-pod1-smp.merchant.com:443\",\n    \"clientSiteId\": \"http://merchant-migration.com\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n// Before Migrate token, you need to delete card using unmigrate-token = true flag and then, use the same TUR value again here with enrollmentType migrate_token"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Data from downstream simulator:\n//Maestro - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f58\n//Mastercard - DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f56\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_481963703f224fe4bc4e613f",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Get card by cardId",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_fc63e394694d400f9dec8607",
      "_type": "request",
      "parentId": "fld_d8ea88d01c454ec98777219b",
      "name": "Delete card by cardId",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one method and url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Optional - clear variables for deleted card\r\n// insomnia.environment.set('pi-core-service_cardId', \"\");\r\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', \"\");\r\n// // insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', \"\");\r\n// // insomnia.environment.set('pi-core-service_sourcePANUniqueReference', \"\");\r\n// insomnia.environment.set('pi-core-service_consumerId', \"\");\r\n\r\n// insomnia.environment.set('pi-core-service_tokenRequestorId', \"\");"
    },
    {
      "_id": "fld_28c167637d6843769b19c1d3",
      "_type": "request_group",
      "parentId": "fld_5a7d0419a85a476eb2df56e9",
      "name": "CFT-TokenType"
    },
    {
      "_id": "req_63dd6b71b9bf42189a845299",
      "_type": "request",
      "parentId": "fld_28c167637d6843769b19c1d3",
      "name": "FPAN-CLOUD-ITF",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5298068863090004\",\n    \"expiryDate\": \"0726\",\n    \"consumerId\": \"22a961ca-9478-4e4b-8b0f-035dc5c71d3180\",\n    \"tokenType\": \"CLOUD\",\n    \"Xcvc2\": \"123\",\n    \"tokenRequestorId\": \"50129208200\",\n    \"cardHolderName\": \"john\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"ipAddress\": \"17.234.23.123\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"accountInfoNeeded\": true,\n    \"sourceProgramId\": \"tobeignored\",\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"clientSiteId\": \"clientSiteId\",\n    \"externalId\": \"externalId\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_ff776c45678d4e70ac807d18",
      "_type": "request",
      "parentId": "fld_28c167637d6843769b19c1d3",
      "name": "Polytransactioncredentials - DTVC - TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"12345678-1234-1234-1234-123456789015\",\n    \"fpanRequested\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#TEST2256_PRGMCRS11#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_dynamicCVC', jsonData.credentials[0].dynamicCVC);"
    },
    {
      "_id": "fld_c50d29d18963487a91427676",
      "_type": "request_group",
      "parentId": "fld_5a7d0419a85a476eb2df56e9",
      "name": "m2-mode-fire-and-forgot"
    },
    {
      "_id": "req_0cb59331619a486292e5f7ce",
      "_type": "request",
      "parentId": "fld_c50d29d18963487a91427676",
      "name": "Enroll card-tokenized-FAF",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"2221198833241103\",\n    \"expiryDate\": \"1130\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "test-enroll-now-2",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);\n\n//pm.response.to.have.jsonSchema(expectedSchema);\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_d3c723f230b941bd898b9d9b",
      "_type": "request",
      "parentId": "fld_c50d29d18963487a91427676",
      "name": "Enroll-STATIC-card-tokenized-random-pull-from-array-with-decision-and-address Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"2221198833241103\",\n    \"expiryDate\": \"0829\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Milestone Test\",\n    \"consumerId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}-testdatapers",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Inc-GOOGLE_e2e_stage#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nconst expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\nconsole.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_ec7162aa7a4d48afb2578f8e",
      "_type": "request",
      "parentId": "fld_c50d29d18963487a91427676",
      "name": "Get card by cardId accountInformation=token",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=token",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "token"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Inc-GOOGLE_e2e_stage#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchemaWithDpanOrFpanInfo'));\n//console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "fld_0e8cd2c6173a440fa5587460",
      "_type": "request_group",
      "parentId": "fld_1d41a75ff2934f6bb41884c9",
      "name": "byStories"
    },
    {
      "_id": "fld_2251d3ed7f434ae5994280f2",
      "_type": "request_group",
      "parentId": "fld_0e8cd2c6173a440fa5587460",
      "name": "S2725448-populate-tokenType-In-Response"
    },
    {
      "_id": "req_de466c4ee9044d2982b5e001",
      "_type": "request",
      "parentId": "fld_2251d3ed7f434ae5994280f2",
      "name": "Enroll card with TUR - CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"FM4MMC000000000129158f31dbe243dba566236be93ec78d\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenType\": null,\n    \"consumerId\": \"nbrfdthjkrdf@seawefsd.net\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_digitalData', jsonData.cardMetaData.hashedFPAN);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_2ab215530fb743bc89b6937f",
      "_type": "request",
      "parentId": "fld_2251d3ed7f434ae5994280f2",
      "name": "Enroll card with TUR - STATIC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"FM4MMC000000000129158f31dbe243dba566236be93ec78d\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenType\": \"STATIC\",\n    \"consumerId\": \"gla@gmail.com\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd72h1f-f13a-44ng2-b141-17dafh6rd768-zoe02",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_digitalData', jsonData.cardMetaData.hashedFPAN);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_0aabb29922b94483bf2f60a6",
      "_type": "request",
      "parentId": "fld_2251d3ed7f434ae5994280f2",
      "name": "Enroll card again with TUR - STATIC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"FM4MMC0000000001e2b7a034f0ff4518897691167dc1b4fd\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenType\": \"STATIC\",\n    \"consumerId\": \"gla@gmail.com\",\n    \"tokenRequestorId\": \"50175815454\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"clientRoutingId\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd72h1f-f13a-44ng2-b141-17dafh6rd768-zoe02",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_digitalData', jsonData.cardMetaData.hashedFPAN);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_e201f197e53f42fdab04a5d9",
      "_type": "request",
      "parentId": "fld_2251d3ed7f434ae5994280f2",
      "name": "Get card by cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?accountInformation=token",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "accountInformation",
          "value": "token"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_896df46ff2c6453297bcf0eb",
      "_type": "request",
      "parentId": "fld_2251d3ed7f434ae5994280f2",
      "name": "Get card by ConsumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_consumerId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/consumer/{consumerId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_55bade23dac745bbaf941d81",
      "_type": "request",
      "parentId": "fld_2251d3ed7f434ae5994280f2",
      "name": "Get card by TUR",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?tokenUniqueReference={{ _['pi-core-service_tokenUniqueReference'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "tokenUniqueReference",
          "value": "{{ _['pi-core-service_tokenUniqueReference'] }}"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_615caf990a344b99bdad9792",
      "_type": "request",
      "parentId": "fld_2251d3ed7f434ae5994280f2",
      "name": "GET-BATCH",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_requestId'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"2\",\n            \"type\": \"HASH_PAN\",\n            \"digitalData\": \"{{ _['pi-core-service_hashedFpan'] }}\",\n            \"additionalData\": {\n                \"panExpiry\": \"{{ _['pi-core-service_panExpiry'] }}\"\n            }\n        }\n    ]\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/getdetails",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/getdetails\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"getdetails\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_c985f32fa1f642ecaa6cb6d3",
      "_type": "request",
      "parentId": "fld_2251d3ed7f434ae5994280f2",
      "name": "UPDATE-BATCH",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_requestId'] }}\",\n    \"items\": [\n        {\n            \"identity\": {\n                \"id\": \"replacement_card-test-25\",\n                \"type\": \"HASH_PAN\",\n                \"digitalData\": \"{{ _['pi-core-service_hashedFpan'] }}\",\n                \"additionalData\": {\n                    \"panExpiry\": \"{{ _['pi-core-service_panExpiry'] }}\"\n                }\n            },\n            \"data\": {\n                \"tokenRequestorId\": \"50123197928\",\n                \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n                \"correlationId\": \"ab9ce33a-3c7a-40ba-b4eb-01f3dd528ea1\",\n                \"paymentCardType\": \"DEBIT\",\n                \"issuerCustomerId\": \"118309\",\n                \"cardId\": \"148dfeb3-66a6-49c9-a638-513f7bea7534\",\n                \"cardIdStatus\": \"ACTIVE\",\n                \"expiryDate\": \"1129\",\n                \"hashedPan\": \"ccaaacc1e459dbc42354d2ee33a8c0d00f4c767290a0c679c071a6bd0fbe04f2\",\n                \"primaryAccountNumberPrefix\": \"545503\",\n                \"primaryAccountNumberSuffix\": \"2457\",\n                \"encryptedCardCriticalData\": \"27648eba9312f15b54c97eb1842ca4e010212e30fd6f788e3a19ebfebfaab24d1a35e3f5c14fc57877f466662e20d48e815b07cc48ed2f3d3f2716010eb1209a1d3a65287aa541df0b2d99ba5fd78a4dfd50912de2c8d37b42d451ced909630a90004c4d93d26e97c1feac1234948c862e95e3d4fd5ab0e95650a094d926e3423c35dbfb36c1160bed6569604e15958c21\",\n                \"tokenPanEncrypted\": \"27648eba9312f15b54c97eb1842ca4e010febc8e0b56a666dc03fdef89ef9ec03e39c6902d78d5dd18fe2a7cc9fdc0ebee116738dce5c96f21656db75747e1c309\",\n                \"tokenPanExpiryEncrypted\": \"27648eba9312f15b54c97eb1842ca4e010c8d6b0cf79782ed7e9a436583586d10b13602573ebed844f7c38732946d9d523\",\n                \"cardArtUrl\": \"https://stage.assets.mastercard.com/card-art/combined-image-asset/HIGH-MASK-3x.png\",\n                \"consumerId\": \"7010fce2-9b53-4ae2-8530-c2c554e26260\",\n                \"programId\": \"SRC\",\n                \"issuerCountryCode\": \"840\",\n                \"clientRoutingId\": \"routing-1\",\n                \"tokenMetaData\": {\n                    \"tokenUniqueReference\": \"DM4MMC00000000018f6c9a1f419f460aa35302a6272f3ace\",\n                    \"panUniqueReference\": \"FM4MMC000000000127d1f6d3792d48538e512076e1fb6ffe\",\n                    \"paymentAccountReference\": \"50012W0HR7C3OIPQYAQMV59T6L4KX\",\n                    \"productConfig\": {\n                        \"brandLogoAssetId\": \"3789637f-32a1-4810-a138-4bf34501c509\",\n                        \"isCoBranded\": \"false\",\n                        \"cardBackgroundCombinedAssetId\": \"fca03837-2a46-4902-9d9c-8408e41ec2e3\",\n                        \"foregroundColor\": \"0f0f0f\",\n                        \"issuerName\": \"Citi Bank\",\n                        \"shortDescription\": \"Citi Bank Product Configuration\",\n                        \"longDescription\": \"Citi Bank Product Configuration for Manitoba over the MDES platform\",\n                        \"customerServiceUrl\": \"www.citibank.com\",\n                        \"termsAndConditionsUrl\": \"https://test.com\",\n                        \"issuerProductConfigCode\": \"2123456789\"\n                    },\n                    \"tokenInfo\": {\n                        \"tokenPanSuffix\": \"4205\",\n                        \"accountPanSuffix\": \"2457\",\n                        \"alternateAccountIdentifierSuffix\": \"5432\",\n                        \"tokenExpiry\": \"0625\",\n                        \"dsrpCapable\": true,\n                        \"tokenAssuranceLevel\": 10,\n                        \"productCategory\": \"DEBIT\",\n                        \"accountPanExpiry\": \"1123\"\n                    },\n                    \"authenticationMethods\": []\n                }\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/update",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/update\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"update\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_3044d93d9d44484082cb9db0",
      "_type": "request",
      "parentId": "fld_2251d3ed7f434ae5994280f2",
      "name": "DELETE-BATCH",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_requestId'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"2\",\n            \"type\": \"HASH_PAN\",\n            \"digitalData\": \"{{ _['pi-core-service_hashedFpan'] }}\",\n            \"additionalData\": {\n                \"panExpiry\": \"{{ _['pi-core-service_panExpiry'] }}\"\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/delete",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/delete\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"delete\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_e00706334d394775a16d19df",
      "_type": "request",
      "parentId": "fld_2251d3ed7f434ae5994280f2",
      "name": "GET-BATCH by TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_requestId'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"2\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n            \"digitalData\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n            \"additionalData\": {\n                \"panExpiry\": \"{{ _['pi-core-service_panExpiry'] }}\"\n            }\n        }\n    ]\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/getdetails",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/getdetails\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"getdetails\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_ee108440e5fa4b7f97bef3a9",
      "_type": "request",
      "parentId": "fld_2251d3ed7f434ae5994280f2",
      "name": "UPDATE-BATCH by TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_requestId'] }}\",\n    \"items\": [\n        {\n            \"identity\": {\n                \"id\": \"replacement_card-test-25\",\n                \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n                \"digitalData\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n                \"additionalData\": {\n                    \"panExpiry\": \"{{ _['pi-core-service_panExpiry'] }}\"\n                }\n            },\n            \"data\": {\n                \"tokenRequestorId\": \"50123197928\",\n                \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n                \"correlationId\": \"ab9ce33a-3c7a-40ba-b4eb-01f3dd528ea1\",\n                \"paymentCardType\": \"DEBIT\",\n                \"issuerCustomerId\": \"118309\",\n                \"cardId\": \"148dfeb3-66a6-49c9-a638-513f7bea7534\",\n                \"cardIdStatus\": \"ACTIVE\",\n                \"expiryDate\": \"1129\",\n                \"hashedPan\": \"ccaaacc1e459dbc42354d2ee33a8c0d00f4c767290a0c679c071a6bd0fbe04f2\",\n                \"primaryAccountNumberPrefix\": \"545503\",\n                \"primaryAccountNumberSuffix\": \"2457\",\n                \"encryptedCardCriticalData\": \"27648eba9312f15b54c97eb1842ca4e010212e30fd6f788e3a19ebfebfaab24d1a35e3f5c14fc57877f466662e20d48e815b07cc48ed2f3d3f2716010eb1209a1d3a65287aa541df0b2d99ba5fd78a4dfd50912de2c8d37b42d451ced909630a90004c4d93d26e97c1feac1234948c862e95e3d4fd5ab0e95650a094d926e3423c35dbfb36c1160bed6569604e15958c21\",\n                \"tokenPanEncrypted\": \"27648eba9312f15b54c97eb1842ca4e010febc8e0b56a666dc03fdef89ef9ec03e39c6902d78d5dd18fe2a7cc9fdc0ebee116738dce5c96f21656db75747e1c309\",\n                \"tokenPanExpiryEncrypted\": \"27648eba9312f15b54c97eb1842ca4e010c8d6b0cf79782ed7e9a436583586d10b13602573ebed844f7c38732946d9d523\",\n                \"cardArtUrl\": \"https://stage.assets.mastercard.com/card-art/combined-image-asset/HIGH-MASK-3x.png\",\n                \"consumerId\": \"7010fce2-9b53-4ae2-8530-c2c554e26260\",\n                \"programId\": \"SRC\",\n                \"issuerCountryCode\": \"840\",\n                \"clientRoutingId\": \"routing-1\",\n                \"tokenMetaData\": {\n                    \"tokenUniqueReference\": \"DM4MMC00000000018f6c9a1f419f460aa35302a6272f3ace\",\n                    \"panUniqueReference\": \"FM4MMC000000000127d1f6d3792d48538e512076e1fb6ffe\",\n                    \"paymentAccountReference\": \"50012W0HR7C3OIPQYAQMV59T6L4KX\",\n                    \"productConfig\": {\n                        \"brandLogoAssetId\": \"3789637f-32a1-4810-a138-4bf34501c509\",\n                        \"isCoBranded\": \"false\",\n                        \"cardBackgroundCombinedAssetId\": \"fca03837-2a46-4902-9d9c-8408e41ec2e3\",\n                        \"foregroundColor\": \"0f0f0f\",\n                        \"issuerName\": \"Citi Bank\",\n                        \"shortDescription\": \"Citi Bank Product Configuration\",\n                        \"longDescription\": \"Citi Bank Product Configuration for Manitoba over the MDES platform\",\n                        \"customerServiceUrl\": \"www.citibank.com\",\n                        \"termsAndConditionsUrl\": \"https://test.com\",\n                        \"issuerProductConfigCode\": \"2123456789\"\n                    },\n                    \"tokenType\":\"STATIC\",\n                    \"tokenInfo\": {\n                        \"tokenPanSuffix\": \"4205\",\n                        \"accountPanSuffix\": \"2457\",\n                        \"alternateAccountIdentifierSuffix\": \"5432\",\n                        \"tokenExpiry\": \"0625\",\n                        \"dsrpCapable\": true,\n                        \"tokenAssuranceLevel\": 10,\n                        \"productCategory\": \"DEBIT\",\n                        \"accountPanExpiry\": \"1123\"\n                    },\n                    \"authenticationMethods\": []\n                }\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/update",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/update\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"update\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_3598126ff6ee45bbaf436651",
      "_type": "request",
      "parentId": "fld_2251d3ed7f434ae5994280f2",
      "name": "UPDATE-BATCH by TUR Copy",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_requestId'] }}\",\n    \"items\": [\n        {\n            \"identity\": {\n                \"id\": \"replacement_card-test-26\",\n                \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n                \"digitalData\": \"DM4MMC000014413647084d4f34c94c0da0204097b7a31af2\",\n                \"additionalData\": {\n                    \"panExpiry\": \"0828\"\n                }\n            },\n            \"data\": {\n                \"tokenRequestorId\": \"50123197928\",\n                \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n                \"correlationId\": \"ab9ce33a-3c7a-40ba-b4eb-01f3dd528ea1\",\n                \"paymentCardType\": \"DEBIT\",\n                \"issuerCustomerId\": \"118309\",\n                \"cardIdStatus\": \"ACTIVE\",\n                \"expiryDate\": \"1129\",\n                \"hashedPan\": \"ccaaacc1e459dbc42354d2ee33a8c0d00f4c767290a0c679c071a6bd0fbe04f2\",\n                \"primaryAccountNumberPrefix\": \"545503\",\n                \"primaryAccountNumberSuffix\": \"2457\",\n                \"encryptedCardCriticalData\": \"27648eba9312f15b54c97eb1842ca4e010212e30fd6f788e3a19ebfebfaab24d1a35e3f5c14fc57877f466662e20d48e815b07cc48ed2f3d3f2716010eb1209a1d3a65287aa541df0b2d99ba5fd78a4dfd50912de2c8d37b42d451ced909630a90004c4d93d26e97c1feac1234948c862e95e3d4fd5ab0e95650a094d926e3423c35dbfb36c1160bed6569604e15958c21\",\n                \"tokenPanEncrypted\": \"27648eba9312f15b54c97eb1842ca4e010febc8e0b56a666dc03fdef89ef9ec03e39c6902d78d5dd18fe2a7cc9fdc0ebee116738dce5c96f21656db75747e1c309\",\n                \"tokenPanExpiryEncrypted\": \"27648eba9312f15b54c97eb1842ca4e010c8d6b0cf79782ed7e9a436583586d10b13602573ebed844f7c38732946d9d523\",\n                \"cardArtUrl\": \"https://stage.assets.mastercard.com/card-art/combined-image-asset/HIGH-MASK-3x.png\",\n                \"consumerId\": \"7010fce2-9b53-4ae2-8530-c2c554e26260\",\n                \"programId\": \"SRC\",\n                \"issuerCountryCode\": \"840\",\n                \"clientRoutingId\": \"routing-1\",\n                \"tokenMetaData\": {\n                    \"tokenUniqueReference\": \"DM4MMC000014413647084d4f34c94c0da0204097b7a31af2\",\n                    \"panUniqueReference\": \"FM4MMC000000000127d1f6d3792d48538e512076e1fb6ffe\",\n                    \"paymentAccountReference\": \"50012W0HR7C3OIPQYAQMV59T6L4KX\",\n                    \"productConfig\": {\n                        \"brandLogoAssetId\": \"3789637f-32a1-4810-a138-4bf34501c509\",\n                        \"isCoBranded\": \"false\",\n                        \"cardBackgroundCombinedAssetId\": \"fca03837-2a46-4902-9d9c-8408e41ec2e3\",\n                        \"foregroundColor\": \"0f0f0f\",\n                        \"issuerName\": \"Citi Bank\",\n                        \"shortDescription\": \"Citi Bank Product Configuration\",\n                        \"longDescription\": \"Citi Bank Product Configuration for Manitoba over the MDES platform\",\n                        \"customerServiceUrl\": \"www.citibank.com\",\n                        \"termsAndConditionsUrl\": \"https://test.com\",\n                        \"issuerProductConfigCode\": \"2123456789\"\n                    },\n                    \"tokenType\":\"STATIC\",\n                    \"tokenInfo\": {\n                        \"tokenPanSuffix\": \"4205\",\n                        \"accountPanSuffix\": \"2457\",\n                        \"alternateAccountIdentifierSuffix\": \"5432\",\n                        \"tokenExpiry\": \"0625\",\n                        \"dsrpCapable\": true,\n                        \"tokenAssuranceLevel\": 10,\n                        \"productCategory\": \"DEBIT\",\n                        \"accountPanExpiry\": \"1123\"\n                    },\n                    \"authenticationMethods\": []\n                }\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/update",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/update\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"update\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_476f9c1a0555472b922b5d54",
      "_type": "request",
      "parentId": "fld_2251d3ed7f434ae5994280f2",
      "name": "DELETE-BATCH by TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"requestId\": \"{{ _['pi-core-service_requestId'] }}\",\n    \"identities\": [\n        {\n            \"id\": \"2\",\n            \"type\": \"TOKEN_UNIQUE_REFERENCE\",\n            \"digitalData\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n            \"additionalData\": {\n                \"panExpiry\": \"{{ _['pi-core-service_panExpiry'] }}\"\n            }\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/batch/card/delete",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n\ninsomnia.environment.set('pi-core-service_requestId', uuidv4());\n\n//Kick-one url: /paymentinstrument/src/1/0/batch/card/delete\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([\"batch/\",insomnia.environment.get('pi-core-service_card'),\"delete\"]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_0efc7e6af74d4d11b13fb62d",
      "_type": "request_group",
      "parentId": "fld_0e8cd2c6173a440fa5587460",
      "name": "S2725754"
    },
    {
      "_id": "req_edfc0f7a8b8547d78b06dfbf",
      "_type": "request",
      "parentId": "fld_0efc7e6af74d4d11b13fb62d",
      "name": "Enroll card-tokenized-non-static data",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5207980040163043\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenOnly\": true,\n    \"tokenType\": \"STATIC\",\n    \"expiryDate\": \"0829\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Anne\",\n    \"consumerId\": \"consumerId-{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Inc-GOOGLE_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd72h1f-f13a-42c2-b141-17dafh6rd768-zoe11",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//works with static: 5204248789938634-GB, 3DS",
      "afterResponseScript": "//3ds test data for static token - 5204248751100114\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_dcac6bcd36be4728a10edd74",
      "_type": "request",
      "parentId": "fld_0efc7e6af74d4d11b13fb62d",
      "name": "Enroll card-tokenized-static data",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5455031500000512\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenOnly\": true,\n    \"tokenType\": \"STATIC\",\n    \"expiryDate\": \"0829\",\n    \"tokenRequestorId\": \"50136141297\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"Anne\",\n    \"consumerId\": \"fxedlvasrxiodadh@testfdfwnfgrd.net\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Inc-GOOGLE_e2e_stage#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd72h1f-f13a-42c2-b141-17dafh6rd768-zoe11",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//works with static: 5204248789938634-GB, 3DS",
      "afterResponseScript": "//3ds test data for static token - 5204248751100114\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_198fa52ceaea41cf8fb24a36",
      "_type": "request_group",
      "parentId": "fld_0e8cd2c6173a440fa5587460",
      "name": "S2844652"
    },
    {
      "_id": "req_ac3feba4eda84d0e88aef9df",
      "_type": "request",
      "parentId": "fld_198fa52ceaea41cf8fb24a36",
      "name": "Polytransactioncredentials - Minimal CardID Multicredential Request",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\"\n            },\n            \"credentialRequestId\": \"1\"\n        },\n        {\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\"\n            },\n            \"credentialRequestId\": \"2\",\n            \"transaction\": {\n                \"amount\": \"10.00\",\n                \"currencyCode\": \"USD\"\n            }\n        },\n        {\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\"\n            },\n            \"credentialRequestId\": \"3\"\n        },\n        {\n            \"unpredictableNumber\": \"97ba51f1\",\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\"\n            },\n            \"credentialRequestId\": \"4\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": true
        },
        {
          "name": "Accept",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_8707d60d81644471acab6b10",
      "_type": "request",
      "parentId": "fld_198fa52ceaea41cf8fb24a36",
      "name": "Polytransactioncredentials - Maximal CardID Multicredential Request",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"credentialAuthData\": {\n        \"data\": \"AJeruEpUIjikAAISNFZ4GoADFA==\",\n        \"key\": \"{{ _['pi-core-service_sourceTokenUniqueReference'] }}\",\n        \"keyType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"type\": \"DSRP\"\n    },\n    \"isCustomerStronglyAuthenticated\": true,\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"unpredictableNumber\": \"97ba51f1\",\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true\n            },\n            \"credentialRequestId\": \"1\"\n        },\n        {\n            \"unpredictableNumber\": \"97ba51f1\",\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3LnRhcmdldC5jb20=\"\n            },\n            \"credentialRequestId\": \"2\",\n            \"transaction\": {\n                \"amount\": \"10.00\",\n                \"currencyCode\": \"USD\"\n            }\n        },\n        {\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\"\n            },\n            \"credentialRequestId\": \"3\"\n        },\n        {\n            \"unpredictableNumber\": \"97ba51f1\",\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": false,\n                \"merchantIdentifier\": \"d3d3LnRhcmdldC5jb20=\"\n            },\n            \"credentialRequestId\": \"4\"\n        }\n    ],\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "Postman-Token",
          "value": "6446e843-afa7-4174-9208-13bfca8cce18",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "cache-control",
          "value": "no-cache",
          "disabled": true
        },
        {
          "name": "Accept",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "req_872e76321f5c4bcf95effebb",
      "_type": "request",
      "parentId": "fld_198fa52ceaea41cf8fb24a36",
      "name": "Polytransactioncredentials - Partial MDES Failure 3 TUR Multicredential Request",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"credentialAuthData\": {\n        \"data\": \"AJeruEpUIjikAAISNFZ4GoADFA==\",\n        \"key\": \"DM4MMC00001182544d0ddf987e3a4da5918b0b8c05aef5dd\",\n        \"keyType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"type\": \"DSRP\"\n    },\n    \"isCustomerStronglyAuthenticated\": true,\n    \"cardReference\": {\n        \"refType\": \"SRC_DIGITAL_CARD_ID\",\n        \"refValue\": \"{{ _['pi-core-service_cardId'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"unpredictableNumber\": \"97ba51f1\",\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V0\",\n                \"debitTokenRequested\": true\n            },\n            \"credentialRequestId\": \"1\"\n        },\n        {\n            \"unpredictableNumber\": \"97ba51f1\",\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": true,\n                \"merchantIdentifier\": \"d3d3LnRhcmdldC5jb20=\"\n            },\n            \"credentialRequestId\": \"2\",\n            \"transaction\": {\n                \"amount\": \"10.00\",\n                \"currencyCode\": \"USD\"\n            }\n        },\n        {\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\"\n            },\n            \"credentialRequestId\": \"3\"\n        },\n        {\n            \"unpredictableNumber\": \"97ba51f1\",\n            \"transactionOptions\": {\n                \"credentialType\": \"UCAF_V3\",\n                \"debitTokenRequested\": false,\n                \"merchantIdentifier\": \"d3d3LnRhcmdldC5jb20=\"\n            },\n            \"transaction\": {\n                \"amount\": \"10.00\",\n                \"currencyCode\": \"USD\"\n            },\n            \"credentialRequestId\": \"4\"\n        }\n    ],\n    \"transactionId\": \"{{ _['pi-core-service_transactionId'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Accept",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"12345678-1234-1234-1234-123456789012\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_56c188db2efc4ab2aa777348",
      "_type": "request_group",
      "parentId": "fld_0e8cd2c6173a440fa5587460",
      "name": "Test Migrate Token Mocks Copy"
    },
    {
      "_id": "req_4d4dc04f775e4be793feda5d",
      "_type": "request",
      "parentId": "fld_56c188db2efc4ab2aa777348",
      "name": "https://paymentinstrument-services-michaelc.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/card",
      "method": "POST",
      "url": "https://paymentinstrument-services-michaelc.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"DM4MMC000000000LPCVATAKEUMZWBE7A1S2UYRXPC3ULX0001\",\n    \"enrollmentType\": \"MIGRATE_TOKEN\",\n    \"consumerId\": \"27cfe804-52f4-11ec-bf63-0242ac130002\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"nc-pod1-smp.merchant.com:443\",\n    \"clientSiteId\": \"http://merchant-migration.com\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "3cd80a1f-f13a-42c2-b141-17da8c287765",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "34F4A04B",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": ""
    },
    {
      "_id": "req_6fb9a3afacc44b54b208724f",
      "_type": "request",
      "parentId": "fld_56c188db2efc4ab2aa777348",
      "name": "Migrate Token",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}?include=tokenAccount",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"clientId\": \"clientId\",\n    \"clientLdapId\": \"clientLdapId\",\n    \"tokenRequestorId\": \"1111111111\",\n    \"responseHost\": \"responseHost\",\n    \"requestId\": \"requestId\"\n}"
      },
      "parameters": [
        {
          "name": "include",
          "value": "tokenAccount"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}migrations/{{ _['pi-core-service_tokenUniqueReference'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: https://paymentinstrument-downstream-simulator-zoe.apps.stl.pcfstage00.mastercard.int/migrations/{{ _['pi-core-service_sourceTokenUniqueReference'] }}\n\n//https://paymentinstrument-downstream-simulator-michaelc.apps.stl.pcfstage00.mastercard.int/mdes/remotetransaction/dev/1/0/migrations/DM4MMC000000000DLT0EYTVPKYQY2EZCQNKBRXQODU7XKCUE9\n\n//In headers, update end-point-uri header with path for synapse\nlet apiUrl = utils.makeUrl([\"migrations/\", insomnia.environment.get('pi-core-service_tokenUniqueReference')]);\n\n// let apiUrl = new utils.DirectUrlBuilder()\n// \t.addToUrl(\"https://paymentinstrument-downstream-simulator-zoe.apps.stl.pcfstage00.mastercard.int/\")\n// \t.addToUrl(\"migrations/\")\n// \t.addToUrl(insomnia.environment.get('pi-core-service_tokenUniqueReference'))\n//     .build();\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "req_10d5f5c462744bde94511816",
      "_type": "request",
      "parentId": "fld_56c188db2efc4ab2aa777348",
      "name": "Enroll for Migrate Token",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_sourceTokenUniqueReference'] }}\",\n    \"enrollmentType\": \"MIGRATE_TOKEN\",\n    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n    \"consumerId\": \"27cfe804-52f4-11ec-bf63-0242ac12314\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"enrollmentProviderId\",\n    \"clientRoutingId\": \"nc-pod1-smp.merchant.com:443\",\n    \"clientSiteId\": \"http://merchant-migration.com\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"useExistingToken\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n//set synapse endPoint header url\ninsomnia.environment.set('pi-core-service_endPointUri', insomnia.environment.get('pi-core-service_endPoint') + insomnia.environment.get('pi-core-service_card'));\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\n\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_e71b2d14d0574823b38ef193",
      "_type": "request_group",
      "parentId": "fld_0e8cd2c6173a440fa5587460",
      "name": "S3081570-migrate-token-simulator"
    },
    {
      "_id": "req_71c33e0f75d4433781d48c6a",
      "_type": "request",
      "parentId": "fld_e71b2d14d0574823b38ef193",
      "name": "Migrate Token",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}?include=tokenAccount",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"clientId\": \"clientId\",\n    \"clientLdapId\": \"clientLdapId\",\n    \"tokenRequestorId\": \"1111111111\",\n    \"responseHost\": \"responseHost\",\n    \"requestId\": \"requestId\"\n}"
      },
      "parameters": [
        {
          "name": "include",
          "value": "tokenAccount"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}migrations/{{ _['pi-core-service_tokenUniqueReference'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: https://paymentinstrument-downstream-simulator-zoe.apps.stl.pcfstage00.mastercard.int/migrations/{{ _['pi-core-service_sourceTokenUniqueReference'] }}\n\n//https://paymentinstrument-downstream-simulator-michaelc.apps.stl.pcfstage00.mastercard.int/mdes/remotetransaction/dev/1/0/migrations/DM4MMC000000000DLT0EYTVPKYQY2EZCQNKBRXQODU7XKCUE9\n\n//In headers, update end-point-uri header with path for synapse\n//let apiUrl = utils.makeUrl([\"migrations/\", insomnia.environment.get('pi-core-service_tokenUniqueReference')]);\n\nlet apiUrl = new utils.DirectUrlBuilder()\n\t.addToUrl(\"https://paymentinstrument-downstream-simulator-zoe.apps.stl.pcfstage00.mastercard.int/\")\n\t.addToUrl(\"internal/digitization/migrations/\")\n\t.addToUrl(\"DM4MMC00000000014b9eb0d1a6924f98803aab0672b39f61\")\n    .build();\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    },
    {
      "_id": "fld_b9cff8511aae424db0f52add",
      "_type": "request_group",
      "parentId": "fld_1d41a75ff2934f6bb41884c9",
      "name": "Apple"
    },
    {
      "_id": "req_bcfad460e54248489acca246",
      "_type": "request",
      "parentId": "fld_b9cff8511aae424db0f52add",
      "name": "Enroll Source Card",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n   \"primaryAccountNumber\": \"5455031509212647\",\n   \"expiryDate\": \"0830\",\n   \"tokenRequestorId\": \"50123197928\",\n   \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n   \"cvc2\": null,\n   \"cardHolderName\": \"null\",\n   \"consumerId\": \"zoesfgfgd@consumertest.net\",\n   \"ipAddress\": null,\n   \"geoLocation\": null,\n   \"accountInfoNeeded\": true,\n   \"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n\t\"address\" : {\n\t\t\"line1\" : \"Ap#867-859\",\n\t\t\"line3\" : \"King's Street\",\n\t\t\"line4\" : \"Behind WallMart\",\n\t\t\"city\" : \"New York\",\n\t\t\"countrySubDivision\" : \"NY\",\n\t\t\"postalCode\" : \"39531\",\n\t\t\"country\" : \"USA\"\n\t}\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n//5455031000100002",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Get TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_8d629ff66a5a46d1bf04a49c",
      "_type": "request",
      "parentId": "fld_b9cff8511aae424db0f52add",
      "name": "Enroll card with TUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\"tokenUniqueReference\" : \"DM4MMC0000114393fd8706d08b164d3499088bcfb8dd9274\",\n\"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n\"consumerId\": \"apple-cloud-teseet5ddhd\",\n\"tokenRequestorId\": \"50123197928\",\n\"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n\"enrollmentProviderId\": \"enrollmentProviderId\",\n\"clientRoutingId\": \"clientRoutingId\",\n\"decisioningData\" : {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//ref body: See https://fusion.mastercard.int/stash/projects/ALBERTA/repos/paymentinstrument-services/pull-requests/593/overview\n// {\n// \"tokenUniqueReference\" : \"DM4MMC00000000010be5846ce1c84116b8b8e14d2dc188bc\",\n// \"enrollmentType\" : \"TOKEN_UNIQUE_REFERENCE\",\n// \"consumerId\": \"apple-cloud-test\",\n// \"tokenRequestorId\": \"50123197928\",\n// \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n// \"enrollmentProviderId\": \"enrollmentProviderId\",\n// \"clientRoutingId\": \"clientRoutingId\",\n// \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     }\n// }\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_74cb82d221254200a9fe4c12",
      "_type": "request",
      "parentId": "fld_b9cff8511aae424db0f52add",
      "name": "Enroll card with PUR",
      "method": "POST",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"panUniqueReference\": \"{{ _['pi-core-service_sourcePanUniqueReference'] }}\",\n    \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"ccc6\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"c915184f-c22a-4cc8-96a3-09420aa5e228\",\n    \"clientRoutingId\": \"clientRoutingId687\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//console.log(insomnia.environment.get('pi-core-service_sourcePANUniqueReference'));\n\n// //C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_sourceTokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "//program_id? SRC_C2P#C2P_COF or SRC\n\nvar jsonData = insomnia.response.json();\n    pm.response.to.have.status(200);\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "fld_8a79a8f9061841858fa043be",
      "_type": "request_group",
      "parentId": "fld_1d41a75ff2934f6bb41884c9",
      "name": "runner"
    },
    {
      "_id": "fld_a72ff0e6a05b45dcba1cbddc",
      "_type": "request_group",
      "parentId": "fld_8a79a8f9061841858fa043be",
      "name": "Enrollments"
    },
    {
      "_id": "req_bc0c0608a9b94c33bd035e57",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll FPAN Card CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0529\",\n    \"consumerId\": \"fpan-cloud-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_fpanE2EProgramId'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_5b430a9a9fcc4ddd918e0ac2",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll FPAN Card CLOUD default",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0529\",\n    \"consumerId\": \"fpan-cloud-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_fpanE2EProgramId'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_0c0791debc1945008e437dc4",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll FPAN Card STATIC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0529\",\n    \"consumerId\": \"fpan-static-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanStaticTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_911b7983b80e44eabdf4f05c",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll-CLOUD-yellow-auth",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0438\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"consumerId\": \"fpan-cloud-yellow-{{ _['pi-core-service_$randomInt'] }}\",\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}\n//5208000246393077\n//{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "perseverence-cvs-address-failure-1",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\n// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\n// insomnia.test(\"The response has all properties\", () => {\n//     insomnia.expect(responseJson.type).to.eql('vip');\n//     insomnia.expect(responseJson.name).to.be.a('string');\n//     insomnia.expect(responseJson.id).to.have.lengthOf(1);\n//     insomnia.expect(jsonData).to.be.an(\"object\");\n//     insomnia.expect(jsonData.age).to.be.a(\"number\");\n//     insomnia.expect(jsonData.hobbies).to.be.an(\"array\");\n//     insomnia.expect(jsonData.website).to.be.undefined;\n//     insomnia.expect(jsonData.email).to.be.null;\n//     insomnia.expect(jsonData.email).to.be.notnull;\n// });\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_f69bf4588bc4477eb815289e",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll-STATIC-yellow-auth",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0438\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanStaticTokenRequesterId'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"consumerId\": \"fpan-static-yellow-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    },\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true\n}\n//5213800405243721\n//\"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\""
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Google_Inc-GOOGLE_e2e_itf#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\n// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_30173ca9086044ee812b37b2",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll FPAN Card Non-Tokenized",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0529\",\n    \"consumerId\": \"fpan-non-tokenize-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": false,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_45094720530d40bdb30a766c",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll FPAN Card enrollAsFpanOnly=true",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0529\",\n    \"consumerId\": \"enrollAsFpanOnly-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": false,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"enrollment-provider-id\",\n    \"clientRoutingId\": \"client-routing-id\",\n    \"clientSiteId\": \"client-site-id\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": true,\n    \"retentionPeriod\": null,\n    \"externalId\": \"external-card-id\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_0af82ee274894232ad55d748",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll FPAN Card Tokenized with Auth Methods",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0529\",\n    \"consumerId\": \"fpan-auth-methods-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": false,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": null,\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"enrollment-provider-id\",\n    \"clientRoutingId\": \"client-routing-id\",\n    \"clientSiteId\": \"client-site-id\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": false,\n    \"retentionPeriod\": null,\n    \"externalId\": \"external-card-id\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_b050038b502c49809f3f23ef",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll FPAN Card Tokenized without Auth Methods",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0529\",\n    \"consumerId\": \"fpan-no-auth-methods-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": false,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}\n//{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\n//5424150109791731"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_c001c11b9e4c41e5b8180c2b",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll FPAN Card Tokenized CLOUD tokenOnly=false",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0529\",\n    \"consumerId\": \"fpan-tokenonly-false-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": false,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}\n//{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n//     insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_4a149e972a9740659c28f0b9",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll FPAN Card Tokenized CLOUD tokenOnly=true",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0529\",\n    \"consumerId\": \"fpan-tokenonly-true-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": false,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"enrollment-provider-id\",\n    \"clientRoutingId\": \"client-routing-id\",\n    \"clientSiteId\": \"client-site-id\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"external-card-id\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_e3d4f199d5b4493b8d41f9ec",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll FPAN Card Tokenized STATIC tokenOnly=true",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0529\",\n    \"consumerId\": \"fpan-static-tokenonly-true-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": false,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FUNDING_PRIMARY_ACCOUNT_NUMBER\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"enrollment-provider-id\",\n    \"clientRoutingId\": \"client-routing-id\",\n    \"clientSiteId\": \"client-site-id\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"external-card-id\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_a9bb88fa9bb84904a26bde01",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Source Enroll to do TUR and PUR based STATIC enroll",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0529\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanStaticTokenRequesterId'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"consumerId\": \"source-fpan-static-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"enrollmentProviderId\": \"test-enrollment-provider-id.com\",\n    \"accountInfoNeeded\": true,\n    \"tokenOnly\": true,\n    \"tokenType\": \"STATIC\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "x-openapi-clientid",
          "value": "APYSTATIC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_staticSourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_staticSourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_b32c544d50474b4fb6f08b20",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Source Enroll to do TUR and PUR based CLOUD enroll",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0529\",\n    \"pushAccountReceipt\": \"\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"consumerId\": \"source-fpan-cloud-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"enrollmentProviderId\": \"test-enrollment-provider-id.com\",\n    \"accountInfoNeeded\": true,\n    \"tokenOnly\": true,\n    \"tokenType\": \"CLOUD\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "x-openapi-clientid",
          "value": "APYSTATIC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_cloudSourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_cloudSourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_36143cb12b0743b79df917b2",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll by TUR Static",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": null,\n    \"expiryDate\": null,\n    \"consumerId\": \"tur-enroll-static-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": null,\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanStaticTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_staticSourceTokenUniqueReference'] }}\",\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"enrollment-provider-id\",\n    \"clientRoutingId\": \"client-routing-id\",\n    \"clientSiteId\": \"client-site-id\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"external-card-id\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#Manitoba-TEST1#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n\ninsomnia.environment.set('pi-core-service_consumerId', uuidv4());\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "//response taking cardId and assigning to veriable\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_069364f72cb54bf08d685da2",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll by TUR Cloud",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": null,\n    \"expiryDate\": null,\n    \"consumerId\": \"tur-enroll-cloud-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": null,\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"tokenOnly\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_cloudSourceTokenUniqueReference'] }}\",\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"enrollment-provider-id\",\n    \"clientRoutingId\": \"client-routing-id\",\n    \"clientSiteId\": \"client-site-id\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"external-card-id\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#Manitoba-TEST1#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\n\n\ninsomnia.environment.set('pi-core-service_consumerId', uuidv4());\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())\n\n\n\n//previous body\n// {\n//    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n//    \"PANUniqueReference\": \"\",\n//    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n//    \"enrollmentSourceReference\": \"tokenUniqueReference\",\n//    \"enrollmentProviderId\": \"enrollmentProviderId\",\n//    \"existing_credential\": \"EXISTING_CREDENTIAL\",\n//    \"clientRoutingId\": \"clientRoutingId\",\n//    \"primaryAccountNumber\": \"\",\n//    \"expiryDate\": \"0831\",\n//    \"pushAccountReceipt\":\"\",\n//    \"tokenRequestorId\": \"50123197928\",\n//    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n//    \"cvc2\": null,\n//    \"cardHolderName\": \"null\",\n//    \"consumerId\": \"apple-zoe@testconsumer.net\",\n//    \"ipAddress\": null,\n//    \"geoLocation\": null,\n//    \"accountInfoNeeded\": false,\n//    \"decisioningData\" : {\n//         \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n//     },\n// \t\"address\" : {\n// \t\t\"line1\" : \"Ap#867-859\",\n// \t\t\"line3\" : \"King's Street\",\n// \t\t\"line4\" : \"Behind WallMart\",\n// \t\t\"city\" : \"New York\",\n// \t\t\"countrySubDivision\" : \"NY\",\n// \t\t\"postalCode\" : \"39531\",\n// \t\t\"country\" : \"USA\"\n// \t}\n// }",
      "afterResponseScript": "//response taking cardId and assigning to veriable\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_ec189857cce64f70985c051e",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll by PUR Static",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": null,\n    \"expiryDate\": null,\n    \"consumerId\": \"pur-enroll-static-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": null,\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanStaticTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"tokenOnly\": true,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": \"{{ _['pi-core-service_staticSourcePANUniqueReference'] }}\",\n    \"enrollmentProviderId\": \"enrollment-provider-id\",\n    \"clientRoutingId\": \"client-routing-id\",\n    \"clientSiteId\": \"client-site-id\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"external-card-id\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#Manitoba-TEST1#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\ninsomnia.environment.set('pi-core-service_consumerId', uuidv4());\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//What is program_id? SRC_C2P#C2P_COF or SRC\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_237125712ba7439fb48b458a",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll by PUR Cloud",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": null,\n    \"expiryDate\": null,\n    \"consumerId\": \"pur-enroll-cloud-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"cvc2\": null,\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"tokenOnly\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": \"{{ _['pi-core-service_cloudSourcePANUniqueReference'] }}\",\n    \"enrollmentProviderId\": \"enrollment-provider-id\",\n    \"clientRoutingId\": \"client-routing-id\",\n    \"clientSiteId\": \"client-site-id\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"external-card-id\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#Manitoba-TEST1#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n\ninsomnia.environment.set('pi-core-service_consumerId', uuidv4());\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//What is program_id? SRC_C2P#C2P_COF or SRC\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_34af1659bfe74ce19944b10e",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll APPLE-DEVICE-TUR-tokenType-CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_runnerDeviceTur'] }}\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"apple-tur-device-cloud-{{ _['pi-core-service_$randomInt'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_runnerTrid'] }}\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}\n//50122967937 DAPLMC000011439314e25d74edf94467b4a59fbbdf32e2e6\n//50126482381\n//50110030273\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\n// console.log(expectedSchema);\n//Save variables from response\n//var jsonData = insomnia.response.json();\n//pm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\n// insomnia.test(\"Status code is 200\", function () {\n//     pm.response.to.have.status(200);\n// });\n\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_7e541445c1c1413f817881d9",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll APPLE-DEVICE-TUR-tokenType-STATIC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_runnerDeviceTur'] }}\",\n    \"enrollmentType\": \"TOKEN_UNIQUE_REFERENCE\",\n    \"consumerId\": \"apple-tur-device-static-{{ _['pi-core-service_$randomInt'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_runnerTrid'] }}\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"tokenType\": \"STATIC\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "wargame3migration-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "AUTOFILL#Apple_Inc-APYAppleInc_e2e_itf#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\n// console.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_0233bf0925e14832b6902d52",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll  APPLE-DEVICE-PUR-tokenType-CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"\",\n    \"panUniqueReference\": \"{{ _['pi-core-service_runnerDevicePur'] }}\",\n    \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n    \"enrollmentSourceReference\": \"panUniqueReference\",\n    \"tokenType\": \"CLOUD\",\n    \"consumerId\": \"apple-pur-device-cloud-{{ _['pi-core-service_$randomInt'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_runnerTrid'] }}\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3migration-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\n// console.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_0474b5adab874f1e987877f3",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll  APPLE-DEVICE-PUR-tokenType-STATIC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"tokenUniqueReference\": \"\",\n    \"panUniqueReference\": \"{{ _['pi-core-service_runnerDevicePur'] }}\",\n    \"enrollmentType\": \"PAN_UNIQUE_REFERENCE\",\n    \"enrollmentSourceReference\": \"panUniqueReference\",\n    \"consumerId\": \"apple-tur-device-static-{{ _['pi-core-service_$randomInt'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_runnerTrid'] }}\",\n    \"tokenType\": \"STATIC\",\n    \"primaryAccountNumberSource\": \"EXISTING_CREDENTIAL\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"decisioningData\": {\n        \"recommendation\": \"REQUIRE_ADDITIONAL_AUTHENTICATION\"\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3migration-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([\"card\"]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deviceTUREnrollmentSchema'));\n// console.log(expectedSchema);\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_47ae272203a94ef6b5080717",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "1. Token Enrollment FPAN to STATIC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0539\",\n    \"consumerId\": \"token-enroll-fpan-to-static-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_runnerTrid'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"STATIC\",\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null,\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\nconsole.log('Token Enrollment FPAN to STATIC start');\nvar fpan_to_static = jsonData.cardMetaData.tokenUniqueReference + \",\" + jsonData.cardAccountData.accountNumber + \",\" + jsonData.cardAccountData.dateExpiration;\nconsole.log(fpan_to_static);\nconsole.log('Token Enrollment FPAN to STATIC end');\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_staticDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_staticTokenExpiry', jsonData.cardAccountData.dateExpiration);\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_623555c4db624834b77ba5b9",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "2. Poly - DTVC - TUR for token enrollment",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_runnerTokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nconsole.log('Token Enrollment dynamicCVC start');\nvar dynamicCVC_val = jsonData.credentials[0].dynamicCVC;\nconsole.log(dynamicCVC_val);\nconsole.log('Token Enrollment dynamicCVC end');\n\ninsomnia.environment.set('pi-core-service_staticDynamicCVC', jsonData.credentials[0].dynamicCVC);"
    },
    {
      "_id": "req_91110d922b774b04aa5ba42a",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "3. Token Enrollment STATIC to CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_staticDpan'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_staticTokenExpiry'] }}\",\n    \"consumerId\": \"token-enroll-static-to-cloud-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"{{ _['pi-core-service_staticDynamicCVC'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_runnerTrid'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"enrollment-provider-id\",\n    \"clientRoutingId\": \"client-routing-id\",\n    \"clientSiteId\": \"client-site-id\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"external-card-id\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_0c59236626b94e50932992fd",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Token Enrollment STATIC to CLOUD Stage",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0525\",\n    \"consumerId\": \"token-enroll-static-to-cloud-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"50123197928\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3verification-m2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=false,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_c45543bda4b1440282435d02",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "1. Token Enrollment FPAN to CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0539\",\n    \"consumerId\": \"token-enroll-fpan-to-cloud-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_runnerTrid'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null,\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_cloudDpan', jsonData.cardAccountData.accountNumber);\ninsomnia.environment.set('pi-core-service_tokenExpiry', jsonData.cardAccountData.dateExpiration);\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_595830c0613f447294e58387",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "2. Poly - DTVC - TUR for token enrollment",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardReference\": {\n        \"refType\": \"TOKEN_UNIQUE_REFERENCE\",\n        \"refValue\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\"\n    },\n    \"credentialRequests\": [\n        {\n            \"credentialRequestId\": \"12331\",\n            \"transaction\": {\n                \"amount\": 10,\n                \"currencyCode\": \"USD\"\n            },\n            \"transactionOptions\": {\n                \"credentialType\": \"DTVC\",\n                \"debitTokenRequested\": true,\n                \"fpanRequested\": false,\n                \"merchantIdentifier\": \"d3d3Lmpvam9tb2pvLmNvbQ==\"\n            },\n            \"unpredictableNumber\": \"111111\"\n        }\n    ],\n    \"isCustomerStronglyAuthenticated\": true,\n    \"transactionId\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n}\n"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_polytransactioncredentials'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/polytransactioncredentials\r\nlet apiUrl = utils.makeUrl([\"polytransactioncredentials\"]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n\r\n// previous hard-coded transactionId\r\n// \"transactionId\": \"7a68e7c3-672f-4564-983d-1410d0f9c9ca\"\r\n\r\ninsomnia.environment.set('pi-core-service_transactionId', uuidv4());",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cloudDynamicCVC', jsonData.credentials[0].dynamicCVC);"
    },
    {
      "_id": "req_c1a94c8b98524e52909b5622",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "3. Token Enrollment CLOUD to CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_cloudDpan'] }}\",\n    \"expiryDate\": \"{{ _['pi-core-service_tokenExpiry'] }}\",\n    \"consumerId\": \"token-enroll-cloud-to-cloud-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"{{ _['pi-core-service_cloudDynamicCVC'] }}\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_runnerTrid'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"TOKEN_ENROLLMENT\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"enrollment-provider-id\",\n    \"clientRoutingId\": \"client-routing-id\",\n    \"clientSiteId\": \"client-site-id\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"external-card-id\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_06320bc8af5b46c49b984627",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "1. Enroll Source -MIGRATE_TOKEN",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0927\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"consumerId\": \"source-fpan-for-migrate-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-AUTOPASS_SA#01",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\n// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_54e1f8176bdc4105ac728e11",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "2. Delete card unmigrate-token=true MIGRATE_TOKEN",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}?unmigrate-token=true",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [
        {
          "name": "unmigrate-token",
          "value": "true"
        }
      ],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_delete'] }}{{ _['pi-core-service_cardId'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "DELETE",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-live,is-sync-lgy-new-data-service-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-AUTOPASS_SA#01",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//set kick-one method and url: /paymentinstrument/src/1/0/delete/{{ _['pi-core-service_cardId'] }}\n\n// insomnia.environment.set('pi-core-service_cardId', \"Z7VQqDwDQYiAz80_VO7sxw000000000000US\");\n\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_delete'), insomnia.environment.get('pi-core-service_cardId')]);\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"DELETE\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_deleteCardSchema'));\r\n// console.log(expectedSchema);\r\n\r\n//Save variables from response\r\nvar jsonData = insomnia.response.json();\r\npm.response.to.have.status(200);\r\n//pm.response.to.have.jsonSchema(expectedSchema);\r\n\r\ninsomnia.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\n// insomnia.test('response matches JSON schema', () => {\r\n//     pm.response.to.have.jsonSchema(expectedSchema);\r\n// });"
    },
    {
      "_id": "req_ffe3cfabd6e144e3961a3d79",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "3. MigrateToken-MIGRATE_TOKEN",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": null,\n    \"expiryDate\": null,\n    \"consumerId\": \"migrate-token-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": null,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"MIGRATE_TOKEN\",\n    \"tokenUniqueReference\": \"{{ _['pi-core-service_tokenUniqueReference'] }}\",\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"enrollment-provider-id\",\n    \"clientRoutingId\": \"client-routing-id\",\n    \"clientSiteId\": \"client-site-id\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"external-card-id\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_106f0b26b35c49c6b719c999",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "1. Enroll Source - Cross Program",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0927\",\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"consumerId\": \"source-fpan-for-cross-program-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_MERCHANT_OBO#ADYEN_NV-AUTOPASS_SA#01",
          "disabled": true
        },
        {
          "name": "correlation-id",
          "value": "crosprogram1-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//Save variables from response\n// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_fpanEnrollmentSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_sourceCardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_679e4a04b2cc49d599d3e240",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "2. Enroll Cross Program",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": null,\n    \"expiryDate\": null,\n    \"consumerId\": \"cross-program-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"tokenRequestorId\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"tokenType\": null,\n    \"sourceCardId\": \"{{ _['pi-core-service_sourceCardId'] }}\",\n    \"sourceProgramId\": \"{{ _['pi-core-service_sourcePrgramId'] }}\",\n    \"enrollmentType\": null,\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_f64960a98afe42f98b783db1",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Multi Token Enrollment-FPAN_MULTI_TOKEN",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0539\",\n    \"consumerId\": \"fpan-multi-token-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"Jane Doe\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"000\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify root tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.test(\"Verify tokenInfo[0].tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenInfo[0].tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.test(\"Verify tokenInfo[1].tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenInfo[1].tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_16e000b2b67642338e39ca36",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Multi Token Enrollment-FPAN_MULTI_TOKEN Copy",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0539\",\n    \"consumerId\": \"fpan-multi-token-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"Jane Doe\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"000\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": null,\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50127530524\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify root tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.test(\"Verify tokenInfo[0].tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenInfo[0].tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.test(\"Verify tokenInfo[1].tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenInfo[1].tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_1f5b02f834954211a0b4d1d8",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll ITF Live-FPAN_MULTI_TOKEN (combo)",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"enrollmentType\": \"FPAN_MULTI_TOKEN\",\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0928\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"cardHolderName\": \"Multi Token Update\",\n    \"consumerId\": \"fpan_multi_token_static_cloud_{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": null,\n    \"geoLocation\": null,\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"50136141297\"\n        },\n        \"cloudToken\": {\n            \"id\": \"50123197928\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_2ee6984480dc43df85aec4ed",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "PushAccountReceipt CLOUD",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": null,\n    \"expiryDate\": null,\n    \"consumerId\": \"par-single-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": null,\n    \"tokenRequestorId\": \"50123197928\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"MCC-STL-634A9747-CAD6-464A-A765-77113AB9F658\",\n    \"supportedCountries\": [\n        \"840\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": null,\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"enrollmentType\": null,\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}\n//{{ _['pi-core-service_cloudPushAccountReceipt'] }}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "all-mock,silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_aef93ebd69b1403e855a75b3",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "PushAccountReceipt Multi Token",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"pushAccountReceipt\": \"{{ _['pi-core-service_cloudPushAccountReceipt'] }}\",\n    \"consumerId\": \"par-multi-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"{{ _['pi-core-service_fpanStaticYellowTokenRequesterId'] }}\"\n        },\n        \"cloudToken\": {\n            \"id\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//{{ _['pi-core-service_pushAccountReceipt'] }} works for Stage, possibly ITF (ITF in testing).\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_918b23d2b73543f1a560d0bc",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "PushAccountReceipt Multi Token stage",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"pushAccountReceipt\": \"0cbe6d5b-9a12-48e0-9766-629d39c96866\",\n    \"consumerId\": \"par-multi-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"requestorInfo\": {\n        \"staticToken\": {\n            \"id\": \"{{ _['pi-core-service_fpanStaticYellowTokenRequesterId'] }}\"\n        },\n        \"cloudToken\": {\n            \"id\": \"{{ _['pi-core-service_fpanCloudTokenRequesterId'] }}\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3verification-m2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//previous program-id: SECURE_COF_MERCHANT#E2E-TEST_DPA_1#01\n\n//Kick-one url: /paymentinstrument/src/1/0/card\n//set url and method for Kick1/Local\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\ninsomnia.environment.set('pi-core-service_METHOD', \"POST\");\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "//{{ _['pi-core-service_pushAccountReceipt'] }} works for Stage, possibly ITF (ITF in testing).\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_2e886338313c44fd81174bb3",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "PAYMENT_ACCOUNT-FPAN",
      "method": "{{METHOD}}",
      "url": "https://pi-core-service-silent-verfication.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/card",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_MANUALLY\",\n    \"cvc2\": \"123\",\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"consumerId\": \"payment-account-fpan-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true,\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3migration-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_5e5c48688bdc4651853a094d",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "PAYMENT_ACCOUNT-VCN-DPAN-Guest-no-consumerId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5355591675481715\",\n    \"expiryDate\": \"0233\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": null,\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"accountInfoNeeded\": true\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_a81d6817341343c49284c9d6",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "PAYMENT_ACCOUNT-VCN-DPAN-consumerid(Only CLOUD allowed)",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0525\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"payment-account-vcn-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3verification-m2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=false,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_8bb37cb504984a9bb11fc3e5",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "PAYMENT_ACCOUNT-PBA-DPAN-consumerid(Only CLOUD allowed)",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"{{ _['pi-core-service_runnerPrimaryAccountNumber'] }}\",\n    \"expiryDate\": \"0525\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"payment-account-pba-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null,\n    \"address\": {\n        \"line1\": \"Ap#867-859\",\n        \"line3\": \"King's Street\",\n        \"line4\": \"Behind WallMart\",\n        \"city\": \"New York\",\n        \"countrySubDivision\": \"NY\",\n        \"postalCode\": \"39531\",\n        \"country\": \"USA\"\n    },\n    \"decisioningData\": {\n        \"recommendation\": \"APPROVED\",\n        \"recommendationAlgorithmVersion\": \"13\",\n        \"deviceScore\": 1,\n        \"accountScore\": 1,\n        \"recommendationReasons\": [\n            \"LONG_ACCOUNT_TENURE\"\n        ],\n        \"mobileNumberSuffix\": \"8736\",\n        \"accountIdHash\": \"58068B5F52B6C594CE7875BADA764487CDB49D25A9B1C19482ED0C5AC9EDD672\"\n    },\n    \"tokenOnly\": true,\n    \"pushAccountReceipt\": \"\",\n    \"supportedCountries\": [\n        \"840\",\n        \"826\"\n    ],\n    \"notSupportedCountries\": [\n        \"123\"\n    ],\n    \"accountInfoNeeded\": true,\n    \"tokenType\": \"CLOUD\",\n    \"sourceCardId\": null,\n    \"sourceProgramId\": null,\n    \"tokenUniqueReference\": null,\n    \"panUniqueReference\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3verification-m2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=false,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_6c8887ba6fcc4c06babe9dfc",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "PAYMENT_ACCOUNT-VCN-DPAN-consumerid mdes",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"primaryAccountNumber\": \"5355556681226362\",\n    \"expiryDate\": \"0924\",\n    \"tokenRequestorId\": \"50146725060\",\n    \"primaryAccountNumberSource\": \"CARD_ADDED_VIA_APPLICATION\",\n    \"cvc2\": \"123\",\n    \"isCvcValidationRequested\": true,\n    \"cardHolderName\": \"{{ _['pi-core-service_$randomFirstName'] }}\",\n    \"enrollmentType\": \"PAYMENT_ACCOUNT\",\n    \"consumerId\": \"payment-account-vcn-consumer-id-{{ _['pi-core-service_$randomInt'] }}\",\n    \"ipAddress\": \"216.119.218.99\",\n    \"geoLocation\": \"-34.39,150.64\",\n    \"enrollmentProviderId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"clientRoutingId\": \"d5e4f925c193792b891903e18d3f7ea0f7946c87bd520f60e6999d37b5f0f477\",\n    \"clientSiteId\": \"pr-pod4-smp\",\n    \"tokenAuthData\": null,\n    \"enrollAsFpanOnly\": null,\n    \"retentionPeriod\": null,\n    \"externalId\": \"{{ _['pi-core-service_$randomUUID'] }}\",\n    \"enforceExistingCardCvcValidation\": null,\n    \"requestorInfo\": null\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame3migration-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\nfunction uuidv4(){return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}\n//Kick-one url: /paymentinstrument/src/1/0/card\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\n\n//C2P/SRC4X/SRC /ParentEnroll C2P/Child Enroll C2P_COF/\n\nvar cid = uuidv4();\ninsomnia.environment.set('pi-core-service_consumerId', cid);\ninsomnia.environment.set('pi-core-service_correlation-id', uuidv4())",
      "afterResponseScript": "//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.test(\"Verify tokenUniqueReference element is not null\", function () {\n    insomnia.expect(jsonData.cardMetaData.tokenUniqueReference).to.not.be.null;\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.cardId);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_hashedFpan', jsonData.cardMetaData.hashedFPAN);\ninsomnia.environment.set('pi-core-service_panExpiry', jsonData.cardMetaData.fpanExpiration);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Save TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_9572136cf6234b05ac45927e",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll Wallet as Card",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"card\": {\n        \"suffix\": \"1444\",\n        \"prefix\": \"529806\",\n        \"productConfig\": {\n            \"cardArtUrl\": \"https://stage.assets.mastercard.com/card-art/itf/combined-image-asset/5a522c2e-7205-47f6-b31a-6ac7405eb809.png\",\n            \"shortDescription\": \"mastercard\"\n        }\n    },\n    \"consumer\": {\n        \"id\": \"wallet-consumer-id-{{ _['pi-core-service_$randomInt'] }}\"\n    },\n    \"metadata\": {\n        \"countryInfo\": {\n            \"format\": \"ALPHA2\",\n            \"code\": \"US\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/wallets/enroll",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "C2P#SAMSUNG_WALLET#03",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_wallet')]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n//5455031000100002",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\ninsomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.id);\ninsomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\ninsomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\ninsomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n//Get TRID from request\nlet jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\ninsomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_cf7c1c84d9a3461980d13323",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Enroll Wallet as Card run",
      "method": "POST",
      "url": "https://pi-core-service-silent-verfication.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/card/wallets/enroll",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"card\": {\n        \"suffix\": \"1444\",\n        \"prefix\": \"529806\",\n        \"productConfig\": {\n            \"cardArtUrl\": \"https://stage.assets.mastercard.com/card-art/itf/combined-image-asset/5a522c2e-7205-47f6-b31a-6ac7405eb809.png\",\n            \"shortDescription\": \"mastercard\"\n        }\n    },\n    \"consumer\": {\n        \"id\": \"wallet-consumer-id-{{ _['pi-core-service_$randomInt'] }}\"\n    },\n    \"metadata\": {\n        \"countryInfo\": {\n            \"format\": \"ALPHA2\",\n            \"code\": \"US\"\n        }\n    }\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "com.mastercard.digital.platform",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "card-services",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "/paymentinstrument/src/1/0/card/wallets/enroll",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "POST",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "C2P#SAMSUNG_WALLET#03",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_$randomUUID'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card\r\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_wallet')]);\r\n\r\n//set method\r\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\r\n\r\n//execute and log\r\ninsomnia.environment.set('pi-core-service_url', apiUrl);\r\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));\r\n//5455031000100002",
      "afterResponseScript": "var jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.environment.set('pi-core-service_cardId', jsonData.cardMetaData.id);\n// insomnia.environment.set('pi-core-service_tokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourceTokenUniqueReference', jsonData.cardMetaData.tokenUniqueReference);\n// insomnia.environment.set('pi-core-service_sourcePANUniqueReference', jsonData.cardMetaData.panUniqueReference);\n// insomnia.environment.set('pi-core-service_consumerId', jsonData.cardMetaData.consumerId);\n\n// //Get TRID from request\n// let jsonReqData = JSON.parse(pm.request.body[pm.request.body.mode]);\n// insomnia.environment.set('pi-core-service_tokenRequestorId', jsonReqData.tokenRequestorId);"
    },
    {
      "_id": "req_e9aabea2c43e4a96a7048984",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Get card by cardId",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_silentVerificationCardUniqueReference'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_silentVerificationProgramId'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "silentverify-m2-wargame2-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_4c438f8848ed4d72b0bd4e64",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Get card by cardId direct",
      "method": "GET",
      "url": "https://pi-core-service-silent-verfication.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/card/{{ _['pi-core-service_silentVerificationCardUniqueReference'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}JnsIUMtUTgyzAlbTpumyOg000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_silentVerificationProgramId'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "silentverify-m2-wargame2-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_e73b615a6e9a47b29136eb2e",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Get card by cardId hardcoded",
      "method": "GET",
      "url": "https://pi-core-service-silent-verfication.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/card/9ab14d0c-8d6b-4633-a6c0-72e6659c8953",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}JnsIUMtUTgyzAlbTpumyOg000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#SAMSUNGPAY_CLICK_TO_PAY#01",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "silentverify-for-jenny-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_56878500d16645b0b1cb3bdf",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Get card by wallet direct hardcoded",
      "method": "GET",
      "url": "https://pi-core-service-silent-verfication.apps.stl.pcfstage00.mastercard.int/paymentinstrument/src/1/0/card/AoskEfQ3TPehY7VDeJ865g000000000000US",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}JnsIUMtUTgyzAlbTpumyOg000000000000US",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "GET",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "C2P#SAMSUNG_WALLET#03",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "silentverify-m2-jenny-{{ _['pi-core-service_$randomInt'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC_C2P#SAMSUNGPAY#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SECURE_COF_COMMERCE_PLATFORM#E2E#01",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "SRC",
          "disabled": true
        },
        {
          "name": "program-id",
          "value": "GUEST_CHECKOUT_TOKENIZATION#MASTERCARDS_GUEST_CHECKOUT_TOKENIZATION#01",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "silent-validator.rate-limiter.enabled=false,is-sync-lgy-new-data-service-enabled=true,silent-validator.enabled=true",
          "disabled": true
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"GET\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_getCardSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_0da39ae90cd340439c4b1756",
      "_type": "request",
      "parentId": "fld_a72ff0e6a05b45dcba1cbddc",
      "name": "Update Patch BLC",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{\n    \"cardMetaDataAttributes\": [\n        {\n            \"fieldName\": \"EXTERNAL_CARD_ID\",\n            \"fieldValue\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n        },\n        {\n            \"fieldName\": \"EXTERNAL_CONSUMER_ID\",\n            \"fieldValue\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n        },\n        {\n            \"fieldName\": \"EXTERNAL_CLIENT_ID\",\n            \"fieldValue\": \"{{ _['pi-core-service_$randomUUID'] }}\"\n        },\n        {\n            \"fieldName\": \"CLIENT_SITE_ID\",\n            \"fieldValue\": \"{{ _['pi-core-service_$randomUrl'] }}\"\n        },\n        {\n            \"fieldName\": \"CARD_ID_STATUS\",\n            \"fieldValue\": \"ACTIVE\"\n        },\n        {\n            \"fieldName\": \"ENROLLMENT_CHANNEL\",\n            \"fieldValue\": \"BULK\"\n        }\n    ]\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_cardId'] }}/patch",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "PUT",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "wargame2-{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json;charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-refactored-data-services-enabled=true",
          "disabled": true
        },
        {
          "name": "x-src-mocks-manager",
          "value": "is-priority-get-rateLimiter-enabled=false,is-sync-lgy-new-data-service-enabled=false,silent-validator.enabled=true,silent-validator.rate-limiter.enabled=false,is-refactored-data-services-enabled=false",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url: /paymentinstrument/src/1/0/card/{cardId}\nlet apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_cardId')]);\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"PUT\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": "// const expectedSchema = JSON.parse(insomnia.environment.get('pi-core-service_updatePatchSchema'));\n// console.log(expectedSchema);\n\n//Save variables from response\nvar jsonData = insomnia.response.json();\npm.response.to.have.status(200);\n//pm.response.to.have.jsonSchema(expectedSchema);\n\ninsomnia.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\n// insomnia.test('response matches JSON schema', () => {\n//     pm.response.to.have.jsonSchema(expectedSchema);\n// });"
    },
    {
      "_id": "req_f60c7b7dafe141c0b7d72d3b",
      "_type": "request",
      "parentId": "fld_1d41a75ff2934f6bb41884c9",
      "name": "Template Request",
      "method": "{{METHOD}}",
      "url": "{{ _['pi-core-service_url'] }}",
      "body": {
        "mimeType": "application/json",
        "text": "{}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "name-space",
          "value": "{{ _['pi-core-service_name-space'] }}",
          "disabled": false
        },
        {
          "name": "service-name",
          "value": "{{ _['pi-core-service_service-name'] }}",
          "disabled": false
        },
        {
          "name": "end-point-uri",
          "value": "{{ _['pi-core-service_endPoint'] }}",
          "disabled": false
        },
        {
          "name": "service-method",
          "value": "{{ _['pi-core-service_service-method'] }}",
          "disabled": false
        },
        {
          "name": "program-id",
          "value": "{{ _['pi-core-service_program-id'] }}",
          "disabled": false
        },
        {
          "name": "correlation-id",
          "value": "{{ _['pi-core-service_correlation-id'] }}",
          "disabled": false
        },
        {
          "name": "Content-Type",
          "value": "application/json; charset=UTF-8",
          "disabled": false
        },
        {
          "name": "SYNAPSE-TARGET-TAG",
          "value": "{{ _['pi-core-service_SYNAPSE-TARGET-TAG'] }}",
          "disabled": false
        },
        {
          "name": "x-src-mocks-manager",
          "value": "{{ _['pi-core-service_x-src-mocks-manager'] }}",
          "disabled": false
        }
      ],
      "preRequestScript": "if (typeof utils === 'undefined') {\n  const __code = insomnia.environment.get('pi-core-service_utils_script');\n  if (__code) { eval(__code); }\n}\n// Fallback placeholder for dynamic method -> static; requests keep their original method in export.\n\n//Kick-one url example (Get card by consumerId): /paymentinstrument/src/1/0/card/consumer/{consumerId}\n//let apiUrl = utils.makeUrl([insomnia.environment.get('pi-core-service_card'), insomnia.environment.get('pi-core-service_consumer'), insomnia.environment.get('pi-core-service_consumerId')]);\n\n//Headers example: In headers, update end-point-uri header with path for synapse\n//Example for get card by consumerId: {{ _['pi-core-service_endPoint'] }}{{ _['pi-core-service_card'] }}{{ _['pi-core-service_consumer'] }}{{ _['pi-core-service_consumerId'] }}\n\n//set method\ninsomnia.environment.set('pi-core-service_METHOD', utils.setMethod(\"POST\").method);\n\n//execute and log\ninsomnia.environment.set('pi-core-service_url', apiUrl);\nconsole.log(\"URL @API Level : \"+insomnia.environment.get('pi-core-service_url'));",
      "afterResponseScript": ""
    }
  ]
}